imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@BanquemondialeBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr

fos_user:
    db_driver: orm
    firewall_name: main
    user_class: UtilisateursBundle\Entity\Utilisateurs
    registration : 
        form : 
            type : UtilisateursBundle\Form\RegistrationFormType

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        #cookie_lifetime: 36000 // was "lifetime" but deprecated
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
        cookie_lifetime: 36000 # Ten hours
    fragments:       ~
    http_method_override: true
    serializer:
        enabled: true
# Twig Configuration
# app/config/config_test.yml
    profiler:
        enabled: true
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form:
        resources: [ 'form_errors.html.twig' ]
    globals:
        monServices: "@monServices"
        suiviStatutDossierService: "@suiviStatutDossierService"
    #exception_controller: DefaultBundle:Exception:showException

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        dql:
            datetime_functions:
                date_format: DoctrineExtensions\Query\Mysql\DateFormat
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

    encryption: ssl	


lexik_translation:
    fallback_locale: [fr]         # (required) default locale(s) to use
    managed_locales: [en, fr] 
    base_layout: "TraductionBundle::layout.html.twig"
    grid_input_type: text       # text|textarea
    grid_toggle_similar: false
    use_yml_tree: true
    
    auto_cache_clean: true
    auto_cache_clean_interval: 200
    dev_tools:
        enable: false
        create_missing: true

tui_session:
    session_timeout: 60000 # 10 mn
    
    
    
services:
    twig.extension.intl:
        class: Twig_Extensions_Extension_Intl
        tags:
            - { name: twig.extension}
    utilisateurbundle_logoutlistener:
        class: UtilisateursBundle\Listener\LogoutListener
        arguments:
             userManager: @doctrine.orm.default_entity_manager
# app/config/config.yml

liip_imagine:
    resolvers:
        default:
            web_path: ~

    filter_sets:
        cache: ~

        # the name of the "filter set"
        slider:

            # adjust the image quality to 75%
            quality: 95

            # list of transformations to apply (the "filters")
            filters:

                # create a thumbnail: set size to 120x90 and use the "outbound" mode
                # to crop the image when the size ratio of the input differs
                thumbnail: { size: [1280, 450], mode: inset }

                # create a 2px black border: center the thumbnail on a black background
                # 4px larger to create a 2px border around the final image
                background: { size: [1280, 450], position: center, color: '#ffffff' }

        # app/config/config.yml