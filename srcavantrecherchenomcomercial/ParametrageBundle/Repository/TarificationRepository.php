<?php

namespace ParametrageBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * TarificationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TarificationRepository extends EntityRepository
{
    public function getAllFraisdeConstitution($idLangue) {
        $qb = $this->createQueryBuilder('t')
		->addOrderBy('t.formeJuridique', 'ASC')
		->addOrderBy('t.montant', 'ASC');
        $query = $qb->getQuery();
		
        $results = $query->getResult();
		
		//die(dump($results));
        $tabResult = array();
        $i = 0;
        foreach ($results as $result) { 
            $tabResult[$i]['id'] =$result->getId();
            $formJ = $result->getFormeJuridique();
            $idf = $formJ->getId();
            $tabResult[$i]['idFormeJ'] = $idf;
            $formJTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:FormeJuridiqueTraduction')->getLibelleFormeJuridiqueByLanque($idLangue, $idf);            
			($formJTrad) ? $tabResult[$i]['libelleFormeJ'] = $formJTrad->getLibelle() : $tabResult[$i]['libelleFormeJ'] = "";
            $idTyp = $result->getTypeOperation()->getId();
            $tabResult[$i]['idTypeOp'] = $idTyp;
            $typeOpTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:TypeOperationTraduction')->findOneBy(array('langue'=>$idLangue,'typeOperation'=>$idTyp));
            ($typeOpTrad) ? $tabResult[$i]['libelleTypeOp'] = $typeOpTrad->getLibelle() : $tabResult[$i]['libelleTypeOp'] = "";
            $idPole = $result->getPole()->getId();
            $tabResult[$i]['idPole'] = $idPole;
            $pole =$result->getPole();
            $tabResult[$i]['nomPole'] = $pole->getNom();
            $tabResult[$i]['montant'] = $result->getMontant();
			($result->getLibelleTarification()) ? $tabResult[$i]['libelleTarification'] = $result->getLibelleTarification()->getLibelle() : $tabResult[$i]['libelleTarification'] = "";
			($result->getTypeDossier()) ? $tabResult[$i]['typeDossier'] = $result->getTypeDossier()->getLibelle() : $tabResult[$i]['typeDossier'] = "";
            $i++;
        }
        return $tabResult;
    }
    
    public function rechercherFrais($data,$idLangue){
        $qb = $this->createQueryBuilder('t');
        if ($data['formeJuridique'] != '') {
            $qb->andWhere('t.formeJuridique = :formeJuridique')->setParameter('formeJuridique', $data['formeJuridique']);
        }
        if ($data['typeOperation'] != '') {
            $qb->andWhere('t.typeOperation = :typeOperation')->setParameter('typeOperation', $data['typeOperation']);
        }
        if ($data['pole'] != '') {
            $qb->andWhere('t.pole = :idPole')->setParameter('idPole', $data['pole']);
        }
        if($data['montant']!=''){
            $qb->andWhere('t.montant = :mnt')->setParameter('mnt', $data['montant']);
        }
        
        $query = $qb->getQuery();
        $results = $query->getResult();
		
        $tabResult = array();
        $i = 0;
        foreach ($results as $result) {
           $tabResult[$i]['id'] =$result->getId();
            $formJ = $result->getFormeJuridique();
            $idf = $formJ->getId();
            $tabResult[$i]['idFormeJ'] = $idf;
            $formJTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:FormeJuridiqueTraduction')->getLibelleFormeJuridiqueByLanque($idLangue, $idf);            
			($formJTrad) ? $tabResult[$i]['libelleFormeJ'] = $formJTrad->getLibelle() : $tabResult[$i]['libelleFormeJ'] = "";
            $idTyp = $result->getTypeOperation()->getId();
            $tabResult[$i]['idTypeOp'] = $idTyp;
            $typeOpTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:TypeOperationTraduction')->findOneBy(array('langue'=>$idLangue,'typeOperation'=>$idTyp));
			($typeOpTrad) ? $tabResult[$i]['libelleTypeOp'] = $typeOpTrad->getLibelle() : $tabResult[$i]['libelleTypeOp'] = "";
            $idPole = $result->getPole()->getId();
            $tabResult[$i]['idPole'] = $idPole;
            $pole =$result->getPole();
            $tabResult[$i]['nomPole'] = $pole->getNom();
            $tabResult[$i]['montant'] = $result->getMontant();
            $i++;           
        }
        return $tabResult;
    }
	
	public function rechercherFraisSoumission($idTypeOperation, $idFormeJuridique, $idTypeDossier, $idPole,$idLibelleTarification, $montant, $idLangue){
        $qb = $this->createQueryBuilder('t');
        if ($idFormeJuridique) {
            $qb->andWhere('t.formeJuridique = :formeJuridique')->setParameter('formeJuridique', $idFormeJuridique);
        }
        if ($idTypeOperation) {
            $qb->andWhere('t.typeOperation = :typeOperation')->setParameter('typeOperation', $idTypeOperation);
        }
		if ($idTypeDossier) {
            $qb->andWhere('t.typeDossier = :typeDossier')->setParameter('typeDossier', $idTypeDossier);
        }
		
		if ($idLibelleTarification) {
            $qb->andWhere('t.libelleTarification = :libelleTarification')->setParameter('libelleTarification', $idLibelleTarification);
        }
        if ($idPole) {
            $qb->andWhere('t.pole = :pole')->setParameter('pole', $idPole);
        }
        if($montant){
            $qb->andWhere('t.montant = :mnt')->setParameter('mnt', $montant);
        }
        
        $query = $qb->getQuery();
		//die(dump("type dossier ".$idTypeDossier." idPole ".$idPole." id libelle tarification ".$idLibelleTarification ));
		
        $results = $query->getResult();
		
		
		
        $tabResult = array();
        $i = 0;
        foreach ($results as $result) {
            $tabResult[$i]['id'] = $result->getId();
            $formJ = $result->getFormeJuridique();
            $idf = $formJ->getId();
            $tabResult[$i]['idFormeJ'] = $idf;
            $formJTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:FormeJuridiqueTraduction')->getLibelleFormeJuridiqueByLanque($idLangue, $idf);            
			($formJTrad) ? $tabResult[$i]['libelleFormeJ'] = $formJTrad->getLibelle() : $tabResult[$i]['libelleFormeJ'] = "";
            $idTyp = $result->getTypeOperation()->getId();
            $tabResult[$i]['idTypeOp'] = $idTyp;
            $typeOpTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:TypeOperationTraduction')->findOneBy(array('langue'=>$idLangue,'typeOperation'=>$idTyp));
			($typeOpTrad) ? $tabResult[$i]['libelleTypeOp'] = $typeOpTrad->getLibelle() : $tabResult[$i]['libelleTypeOp'] = "";
            $idPole = $result->getPole()->getId();
            $tabResult[$i]['idPole'] = $idPole;
            $pole =$result->getPole();
            $tabResult[$i]['nomPole'] = $pole->getNom();
            $tabResult[$i]['montant'] = $result->getMontant();
			$tabResult[$i]['typeDossier'] = $result->getTypeDossier()->getLibelle();
			$tabResult[$i]['libelleTarification'] = $result->getLibelleTarification()->getLibelle();
            $i++;           
        }
		
		//die(dump($tabResult));
        return $tabResult;
    }
    
    public function getListeFraisAPayer($idd){
        $query = $this->createQueryBuilder('t')->from('BanquemondialeBundle\Entity\DocumentCollected', 'dc')
                ->leftJoin('dc.dossierDemande', 'dd')
                 ->leftJoin('dc.pole', 'p')->leftJoin('t.pole', 'p2')            
                 ->where('p.id=p2.id')->andWhere('t.typeDossier=dd.typeDossier')->andWhere('t.formeJuridique=dd.formeJuridique')
                ->andWhere('dd.id=:idd')
                ->setParameters(array('idd' => $idd));
        
        $results = $query->getQuery()->getResult();
		
		//die(dump($results));
        return $results;
    }
    public function getMontantFraisByPole($idF,$typeDossier,$idP){
         $query = $this->createQueryBuilder('t')                
                 ->leftJoin('t.pole', 'p') ->leftJoin('t.formeJuridique', 'f')         
                 ->where('p.id=:idP')->andWhere('t.typeDossier=:typedossier')->andWhere('f.id=:idF')              
                ->setParameters(array('idP' => $idP,'idF'=>$idF,'typedossier'=>$typeDossier));
        
        $results = $query->getQuery()->getResult();
        return $results;
    }
	
	public function getTarificationSimulation($idPole,$idFormeJuridique,$idTypeDossier,$idLangue){
        $query = $this->createQueryBuilder('t')           
                ->where('t.pole=:idPole')
				->andWhere('t.formeJuridique=:idFormeJuridique')
				->andWhere('t.typeDossier=:idTypeDossier')
				
                ->setParameters(array('idPole' => $idPole,'idFormeJuridique'=>$idFormeJuridique,'idTypeDossier'=>$idTypeDossier));
        
        $results = $query->getQuery()->getResult();
		
		//die(dump($query->getQuery()));
        return $results;
}


}