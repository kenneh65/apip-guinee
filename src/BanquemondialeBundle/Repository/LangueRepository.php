<?php

namespace BanquemondialeBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * LangueRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LangueRepository extends EntityRepository {

    public function getLangues($pays) {
        $query = $this->_em->createQuery('SELECT l FROM BanquemondialeBundle:Langue l, BanquemondialeBundle:PaysTraduction t, BanquemondialeBundle:Pays p WHERE t.langue=l and 
		 	t.pays = p and p.id = :idP');
        $query->setParameter('idP', $pays->getId());

        return $query->getResult();
    }

    public function getLanguesBySecteur($secteur) {
        $query = $this->_em->createQuery('SELECT l FROM BanquemondialeBundle:Langue l, ParametrageBundle:SecteurActiviteTraduction t, BanquemondialeBundle:SecteurActivite s WHERE t.langue=l and 
		 	t.secteurActivite = s and s.id = :idP');
        $query->setParameter('idP', $secteur->getId());

        return $query->getResult();
    }
	
	public function getLanguesByCategorie($categorie) {
        $query = $this->_em->createQuery('SELECT l FROM BanquemondialeBundle:Langue l, ParametrageBundle:CategorieActiviteTraduction t, BanquemondialeBundle:CategorieActivite s WHERE t.langue=l and 
		 	t.categorieActivite = s and s.id = :idP');
        $query->setParameter('idP', $categorie->getId());

        return $query->getResult();
    }

    public function getLanguesByFunction($fonction) {
        $query = $this->_em->createQuery('SELECT l FROM BanquemondialeBundle:Langue l, BanquemondialeBundle:FonctionTraduction t, BanquemondialeBundle:Fonction p WHERE t.langue=l and 
		 	t.fonction = p and p.id = :idP');
        $query->setParameter('idP', $fonction->getId());

        return $query->getResult();
    }

    public function getLanguesByFormeJuridique($fonctionJuridique) {
        $query = $this->_em->createQuery('SELECT l FROM BanquemondialeBundle:Langue l, BanquemondialeBundle:FormeJuridiqueTraduction t, BanquemondialeBundle:FormeJuridique p WHERE t.langue=l and 
		 	t.formeJuridique = p and p.id = :idP');
        $query->setParameter('idP', $fonctionJuridique->getId());

        return $query->getResult();
    }

    public function getLanguesByProfile($profile) {
        $query = $this->_em->createQuery('SELECT l FROM BanquemondialeBundle:Langue l, UtilisateursBundle:ProfileTraduction t, UtilisateursBundle:Profile p WHERE t.langue=l and 
		 	t.profile = p and p.id = :idP');
        $query->setParameter('idP', $profile->getId());

        return $query->getResult();
    }
    
    public function getOtherLanguages($langue)
    {
        $query = $this->createQueryBuilder('l')
                ->where('l.code !=:code')
                ->setParameter('code',$langue);
        
        return $query->getQuery()->getResult();
    }

}
