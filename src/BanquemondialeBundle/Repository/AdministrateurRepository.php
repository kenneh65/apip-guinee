<?php

namespace BanquemondialeBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMappingBuilder;

/**
 * AdministrateurRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AdministrateurRepository extends EntityRepository
{
    //    public function getListSearchAgencesFrontend($name = NULL, $city = NULL)
//{
//    $qb = $this->createQueryBuilder('a')
//        ->leftJoin('a.logo', 'l')
//        ->addSelect('l')
//        ->Where('a.enabled = 1');
//         
//    if (!empty($city) ) {
//        $qb->andWhere('a.city = :city')
//           ->setParameter('city', $city);
//           }
//          if (!empty($name)) {
//        $qb->andWhere('a.name LIKE :name')
//           ->setParameter('name', '%'.$name.'%');
//          }
//     
//    return $qb;
// 
//}
    
    public function rechercheByDossierDemande($idDossierDemande = NULL){
        $db = $this->createQueryBuilder('a')
                //->join('a.fonction', 'b')
               
                //->join('b.fonctionTraduction', 'c')
                ->where('a.dossierDemande =:chaine')
              ->setParameters(array('chaine' => $idDossierDemande));
        return $db->getQuery()->getResult();
    }
    
    public function getListSearchAdministrateur($idDossierDemande = NULL)
    {
        $qb = $this->createQueryBuilder('a')
           // ->leftJoin('a.logo', 'l')
           // ->addSelect('l')
            ->Where('1 = 1');

        if (!empty($idDossierDemande) ) {
            $qb->andWhere('a.idDossierDemance = :idDossierDemance')
               ->setParameter('idDossierDemance', $idDossierDemande);
               }
        return $qb;

    }
    
    public function search($idDossierDemande = NULL)
   {
       $rsm = new ResultSetMappingBuilder($this->getEntityManager());
       $rsm->addRootEntityFromClassMetadata('\BanquemondialeBundle\Entity\Administrateur', 'p');
       
       $query = 'SELECT p.* FROM Administrateur p WHERE 1 ';
       $params = array();
       
        if (!empty($idDossierDemande) ) {
            $query .= 'AND p.idDossierDemande = :idDossierDemande ';
           $params['idDossierDemande'] = $idDossierDemande;
               }
      
       // Nous pouvons ajouter nos autres champs de recherches ici

       $request = $this->getEntityManager()->createNativeQuery($query, $rsm);
       $request->setParameters($params);
       return $request;
   }

}
