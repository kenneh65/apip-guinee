<?php

namespace BanquemondialeBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * FormulaireDelivreRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FormulaireDelivreRepository extends EntityRepository {
    
    public function getListFormulaireDelivre($idd, $idLangue) {
        $qb = $this->createQueryBuilder('f')->leftJoin('f.libelleFormulaireDelivre', 'lf')->leftJoin('f.pole', 'p')
                ->leftJoin('f.dossierDemande', 'd')
//                ->addSelect('Count(f),f.nomFichier,lf.libelle','p.nom as poleName')
                ->where('d.id=:idd')
//                ->groupBy('f.dossierDemande,f.nomFichier,lf.libelle,p.nom')
                ->setParameter('idd', $idd);
        $query = $qb->getQuery();

        $results = $query->getResult();
		//die(dump($results));
        $tabResult = array();
        $tableauResult = array();
        $poles = array();
        $i = 0;
        $j = 0;
        //$poles=$results
        $arr = array();
        foreach ($results as $result) {
            $tabResult[$i]['nomFichier'] = $result->getNomFichier();
            $idPole = $result->getPole()->getId();
            $pole = $result->getPole()->getNom();
            $tabResult[$i]['pole'] = $pole;
            $tabResult[$i]['libelleDocument'] = "";
            $libelleFormulaire = $result->getLibelleFormulaireDelivre();
            $libelle="";
            if ($libelleFormulaire) {
                $libelle=$libelleFormulaire->getLibelle();
                $docTrad = $libelleFormulaire; // $this->getEntityManager()->getRepository('BanquemondialeBundle:LibelleFormulaireDelivre')->findOneBy(array('document' => $iddoc, 'langue' => $idLangue,'pole'=>$idPole));
                ($docTrad) ? $tabResult[$i]['libelleDocument'] = $docTrad->getLibelle() : $tabResult[$i]['libelleDocument'] = "";
            }
            $i++;

            if (!isset($arr[$idPole])) {				
                $arr[$idPole] = array();
                $arr[$idPole]['rowspan'] = 0;
                $j=0;
				$poles = array();
            }
            $poles[$j]['nomFichier']=$result->getNomFichier();           
            $poles[$j]['libelleDocument']=$libelle;
            $arr[$idPole]['rowspan'] +=1;
            $arr[$idPole]['poleName'] =$pole;
            $arr[$idPole]['doc']=$poles;
			
            //creation tableau associatif
            //$tableauResult[$pole]
            $j++;
        } 
		//die(dump($arr));
        return $arr;
    }
	
	public function findDossierNotDelivreRetrait($idDoss) {
        $query = $this->createQueryBuilder('f')	
				->leftJoin('f.dossierDemande', 'd')
                ->andwhere('f.estRetire is NULL')
                ->andwhere('d.id=:idDoss')
                ->setParameters(array('idDoss' => $idDoss));
        return $query->getQuery()->getResult();
    }

}
