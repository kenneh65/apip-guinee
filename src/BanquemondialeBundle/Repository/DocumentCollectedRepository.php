<?php

namespace BanquemondialeBundle\Repository;

use DateTime;
use Doctrine\ORM\EntityRepository;

/**
 * DocumentCollectedRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DocumentCollectedRepository extends EntityRepository {
    /* public function findByAllUtilisateurs($date) {
      $qb = $this->createQuery()->select('u')->from('UtilisateurBundle:Utilisateurs', 'u')
      ->where('u.lastLogin =:dateDuJour')
      ->setParameter('dateDuJour',$date );
      return $qb->getQuery()->getResult();
      } */

    public function findByLastLogin($lastLogin) {
        $sql = "select u from UtilisateursBundle:Utilisateurs u where DATE_DIFF(u.lastLogin,:dateDuJour)=0 and u.username!='admin'";
        $qb = $this->getEntityManager()
            ->createQuery($sql);
        $qb->setParameter('dateDuJour', $lastLogin);

        $results = $qb->getResult();

        $tabResult = array();
        $i = 0;
        foreach ($results as $result) {
            $nom = $result->getNom();
            $prenom = $result->getPrenom();
            $profil = $result->getProfile() ? $result->getProfile()->getNom() : "";
            $structure = $result->getEntreprise() ? $result->getEntreprise()->getDenomination() : "";
            $dateConexion = $result->getLastLogin();
            $tabResult[$i]['nom'] = $nom;
            $tabResult[$i]['prenom'] = $prenom;
            $tabResult[$i]['profil'] = $profil;
            $tabResult[$i]['structure'] = $structure;
            $tabResult[$i]['dateConnexion'] = $dateConexion;
            $tabResult[$i]['username'] = $result->getUsername();
            $tabResult[$i]['dateDeconnection'] = $result->getLastLogoutTime();
            $i++;
        }
        // die(dump($tabResult));
        return $tabResult;
    }

    public function findDocumentCollectedByParametres($data, $idLangue, $idPole) {
        $query = $this->createQueryBuilder('a')->join('a.dossierDemande', 'd');
        $query->where('a.pole = :pole')->setParameter('pole', $idPole);

        if ($data['id'] != '') {
            $query->andWhere('LOWER(a.id) = :id')
                ->setParameter('id', $data['id']);
        }

        if ($data['statutTraitement'] != '') {
            $query->andWhere('a.statutTraitement = :statutTraitement')
                ->setParameter('statutTraitement', $data['statutTraitement']);
        }

        if ($data['denominationSociale'] != '') {
            $query->andWhere('LOWER(d.denominationSociale) like :denominationSociale')
                ->setParameter('denominationSociale', '%' . $data['denominationSociale'] . '%');
        }

        if ($data['formeJuridique'] != '') {
            $query->andWhere('d.formeJuridique = :formeJuridique')
                ->setParameter('formeJuridique', $data['formeJuridique']);
        }

        if ($data['typeOperation'] != '') {
            $query->andWhere('d.typeOperation = :typeOperation')
                ->setParameter('typeOperation', $data['typeOperation']);
        }

        /* 		
          if($data['dateCreation'] != '')
          {
          $query->andWhere('DATE_DIFF(a.dateCreation,:dateCreation)=0')
          ->setParameter('dateCreation', $data['dateCreation']);
          }
         */
        $results = $query->getQuery()->getResult();

        $tabResult = array();
        $i = 0;
        foreach ($results as $result) {
            $tabResult[$i]['id'] = $result->getId();
            $formJ = $result->getDossierDemande()->getFormeJuridique();
            $idf = $formJ->getId();
            $tabResult[$i]['idFormeJ'] = $idf;
            $formJTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:FormeJuridiqueTraduction')->getLibelleFormeJuridiqueByLangue($idLangue, $idf);
            ($formJTrad) ? $tabResult[$i]['libelleFormeJ'] = $formJTrad->getLibelle() : $tabResult[$i]['libelleFormeJ'] = "";
            $idTyp = $result->getDossierDemande()->getTypeOperation()->getId();
            $tabResult[$i]['idTypeOp'] = $idTyp;
            $typeOpTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:TypeOperationTraduction')->getLibelleOperationByLangue($idLangue, $idf);
            ($typeOpTrad) ? $tabResult[$i]['libelleTypeOp'] = $typeOpTrad->getLibelle() : $tabResult[$i]['libelleTypeOp'] = "";

            $idStatutTraitement = $result->getStatutTraitement();
            $tabResult[$i]['idStatutTraitement'] = $idStatutTraitement;
            $statutTraitementTraduction = $this->getEntityManager()->getRepository('BanquemondialeBundle:StatutTraitementTraduction')->getLibelleStatutTraitementByLangue($idLangue, $idStatutTraitement);
            ($statutTraitementTraduction) ? $tabResult[$i]['libelleStatutTraitement'] = $statutTraitementTraduction->getLibelle() : $tabResult[$i]['libelleStatutTraitement'] = "";

            $tabResult[$i]['denominationSociale'] = $result->getDossierDemande()->getDenominationSociale();
            $i++;
        }
        //die(var_dump($tabResult));
        return $tabResult;
    }

    public function findDocumentCollectedByDossierDemande($dossierDemande, $langue) {
        $query = $this->createQueryBuilder('d')
            ->where('d.dossierDemande = :dossierDemande')
            ->setParameter('dossierDemande', $dossierDemande);
        $query = $query->orderBy('d.ordre');
        $results = $query->getQuery()->getResult();

        //die(dump($results));

        $tabResult = array();
        $i = 0;
        foreach ($results as $result) {
            $tabResult[$i]['nomPole'] = $result->getPole()->getNom();
            $tabResult[$i]['utilisateur'] = $result->getUtilisateur();
            $tabResult[$i]['idPole'] = $result->getPole()->getId();
            $tabResult[$i]['siglePole'] = $result->getPole()->getSigle();
            $tabResult[$i]['motif'] = $result->getMotif();
            $tabResult[$i]['dateSoumission'] = $result->getDateSoumission();
            $tabResult[$i]['dateDelivrance'] = $result->getDateDelivrance();
            $formulaireDelivre = $this->getEntityManager()->getRepository('BanquemondialeBundle:FormulaireDelivre')->findBy(array('pole' => $result->getPole(), 'dossierDemande' => $dossierDemande));

            $tabResult[$i]['formulaire'] = $formulaireDelivre;
            if ($formulaireDelivre) {
                $tabResult[$i]['rowspan'] = count($formulaireDelivre);
            } else {
                $tabResult[$i]['rowspan'] = 0;
            }
            $statutTraitement = $result->getStatutTraitement();
            if ($statutTraitement) {
                $tabResult[$i]['idStatutTraitement'] = $statutTraitement->getId();
                $statutTraitementTraduction = $this->getEntityManager()->getRepository('BanquemondialeBundle:StatutTraitementTraduction')->getLibelleStatutTraitementByLangue($langue, $statutTraitement);

                ($statutTraitementTraduction) ? $tabResult[$i]['libelleStatutTraitement'] = $statutTraitementTraduction->getLibelle() : $tabResult[$i]['libelleStatutTraitement'] = "";
            } else {
                $tabResult[$i]['idStatutTraitement'] = 0;
                $tabResult[$i]['libelleStatutTraitement'] = 'non initialise';
            }
            //cas de annonce legale 
            if ($result->getPole()->getSigle() == "AL" && $statutTraitement && $statutTraitement->getCode() == "DD") {
                $tabResult[$i]['libelleStatutTraitement'] = "publie";
            }
            //cas de annonce legale 
            if ($result->getPole()->getSigle() == "APIP" && $statutTraitement && $statutTraitement->getCode() == "DD") {
                $tabResult[$i]['libelleStatutTraitement'] = "ValidÃ©";
            }
            $i++;
        }
        //die(dump($tabResult));
        return $tabResult;
    }

    public function getSituationPoleTraitantByDossierDemande($idd, $langue) {
        $query = $this->createQueryBuilder('d')
            ->where('d.dossierDemande = :idd')
            ->setParameter('idd', $idd)->orderBy('d.ordre');

        $results = $query->getQuery()->getResult();

        //die(dump($results));

        $tabResult = array();
        $i = 0;
        foreach ($results as $result) {
            $tabResult[$i]['nomPole'] = $result->getPole()->getNom();
            $tabResult[$i]['utilisateur'] = $result->getUtilisateur();
            $tabResult[$i]['idPole'] = $result->getPole()->getId();
            $tabResult[$i]['motif'] = $result->getMotif();
            $tabResult[$i]['dateSoumission'] = $result->getDateSoumission();
            $tabResult[$i]['dateDelivrance'] = $result->getDateDelivrance();
            $formulaireDelivre = $this->getEntityManager()->getRepository('BanquemondialeBundle:FormulaireDelivre')->findBy(array('pole' => $result->getPole(), 'dossierDemande' => $idd));

            $tabResult[$i]['formulaire'] = $formulaireDelivre;
            if ($formulaireDelivre) {
                $tabResult[$i]['rowspan'] = count($formulaireDelivre);
            } else {
                $tabResult[$i]['rowspan'] = 1;
            }

            $statutTraitement = $result->getStatutTraitement();
            if ($statutTraitement) {
                $tabResult[$i]['idStatutTraitement'] = $statutTraitement->getId();
                $statutTraitementTraduction = $this->getEntityManager()->getRepository('BanquemondialeBundle:StatutTraitementTraduction')->getLibelleStatutTraitementByLangue($langue, $statutTraitement);

                ($statutTraitementTraduction) ? $tabResult[$i]['libelleStatutTraitement'] = $statutTraitementTraduction->getLibelle() : $tabResult[$i]['libelleStatutTraitement'] = "";
            } else {
                $tabResult[$i]['idStatutTraitement'] = 0;
                $tabResult[$i]['libelleStatutTraitement'] = 'non initialise';
            }
            $i++;
        }
        //die(dump($tabResult));
        return $tabResult;
    }

    public function findDossierPole($user, $data, $idLangue, $idPole, $limit = null, $statut = null) {
        $query = $this->createQueryBuilder('dc')
            ->leftJoin('dc.dossierDemande', 'd')->addSelect('d')
            ->leftJoin('dc.pole', 'p')->addSelect('p')
            ->andWhere('dc.statutTraitement is not null')
            ->andWhere('dc.utilisateur= :user or dc.utilisateur is null')
            ->andWhere('p.id=:idp')->setParameters(array('idp' => $idPole, 'user' => $user));

        if (!empty($data)) {
            if ($data['numeroDossier'] != '') {
                $query->andWhere('LOWER(d.numeroDossier) = :numeroDossier')
                    ->setParameter('numeroDossier', $data['numeroDossier']);
            }
            if ($data['denominationSociale'] != '') {
                $query->andWhere('LOWER(d.denominationSociale) like :denominationSociale')
                    ->setParameter('denominationSociale', '%' . $data['denominationSociale'] . '%');
            }
            if ($data['dateCreationDebut'] != '') {
                $query->andWhere('DATE_DIFF(dc.dateSoumission,:dateCreationDebut)>=0')
                    ->setParameter('dateCreationDebut', new DateTime($data['dateCreationDebut']));
            }
            if ($data['dateCreationFin'] != '') {
                $query->andWhere('DATE_DIFF(dc.dateSoumission,:dateCreationFin)<=0')
                    ->setParameter('dateCreationFin', new DateTime($data['dateCreationFin']));
            }
            if ($data['formeJuridique'] != '') {
                $query->andWhere('d.formeJuridique = :formeJuridique')
                    ->setParameter('formeJuridique', $data['formeJuridique']);
            }
            if ($data['typeDossier'] != '') {
                $query->andWhere('d.typeDossier = :typeDossier')
                    ->setParameter('typeDossier', $data['typeDossier']);
            }
            if ($data['entreprise'] != '') {
                $query->leftJoin('d.utilisateur', 'u')->andWhere('u.entreprise=:idE')
                    ->setParameter('idE', $data['entreprise']);
            }
        }

        if ($statut) {
            $query->andWhere('dc.statutTraitement = :st')
                ->setParameter('st', $statut);
        }
        if ($statut && $statut == 2) {
            if ($data['dateDelivranceDebut'] != '') {

                $query->andWhere('DATE_DIFF(dc.dateDelivrance,:dateDelivranceDebut)>=0')
                    ->setParameter('dateDelivranceDebut', new DateTime($data['dateDelivranceDebut']));
            }

            if ($data['dateDelivranceFin'] != '') {
                $query->andWhere('DATE_DIFF(dc.dateDelivrance,:dateDelivranceFin)<=0')
                    ->setParameter('dateDelivranceFin', new DateTime($data['dateDelivranceFin']));
                //die(dump($data['dateDelivranceFin']));
            }
        }
        if ($statut && $statut1 = 1) {
            $query->orderBy('dc.dateDelivrance', 'desc');
        } else {

            $query->orderBy('dc.dateSoumission', 'desc');
        }

        if ($limit) {
            $query->setMaxResults($limit);
        }
        $query->orderBy('dc.dateSoumission', 'desc');
        $results = $query->getQuery()->getResult();

        $tabResult = array();
        $i = 0;
        foreach ($results as $result) {
            $tabResult[$i]['numeroDossier'] = $result->getDossierDemande()->getNumeroDossier();
            $tabResult[$i]['denominationSociale'] = $result->getDossierDemande()->getDenominationSociale();
            $tabResult[$i]['nomCommercial'] = $result->getDossierDemande()->getNomCommercial();
            $tabResult[$i]['enseigne'] = $result->getDossierDemande()->getEnseigne();
            $tabResult[$i]['telephone'] = $result->getDossierDemande()->getTelephone();
            $tabResult[$i]['email'] = $result->getDossierDemande()->getEmail();
            //$tabResult[$i]['fax'] = $result->getDossierDemande()->getFax();
            $tabResult[$i]['region'] = $result->getDossierDemande()->getRegion();
            $tabResult[$i]['dateCreation'] = $result->getDossierDemande()->getDateCreation();
            $tabResult[$i]['orange'] = $result->isOrangePole();
            $tabResult[$i]['red'] = $result->isRedPole();
            $tabResult[$i]['dateSoumission'] = $result->getDateSoumission();
            $tabResult[$i]['dateDelivrance'] = $result->getDateDelivrance();
            $tabResult[$i]['duree'] = $result->getDuree();
            $tabResult[$i]['motif'] = $result->getMotif();
            $tabResult[$i]['id'] = $result->getDossierDemande()->getId();

            $formJ = $result->getDossierDemande()->getFormeJuridique();
            $idf = $formJ->getId();
            $tabResult[$i]['idFormeJ'] = $idf;
            $formJTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:FormeJuridiqueTraduction')->getLibelleFormeJuridiqueByLanque($idLangue, $idf);
            ($formJTrad) ? $tabResult[$i]['libelleFormeJ'] = $formJTrad->getLibelle() : $tabResult[$i]['libelleFormeJ'] = "";
            $idTyp = $result->getDossierDemande()->getTypeOperation()->getId();
            $tabResult[$i]['idTypeOp'] = $idTyp;
            $typDossier = $result->getDossierDemande()->getTypeDossier()->getLibelle();
            $tabResult[$i]['typDossier'] = $typDossier;
            $typeOpTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:TypeOperationTraduction')->getLibelleOperationByLanque($idLangue, $idTyp);
            ($typeOpTrad) ? $tabResult[$i]['libelleTypeOp'] = $typeOpTrad->getLibelle() : $tabResult[$i]['libelleTypeOp'] = "";

            $statutTraitement = $result->getStatutTraitement();
            $tabResult[$i]['idStatutTraitement'] = $statutTraitement->getId();
            $statutTraitementTraduction = $this->getEntityManager()->getRepository('BanquemondialeBundle:StatutTraitementTraduction')->getLibelleStatutTraitementByLangue($idLangue, $statutTraitement);
            ($statutTraitementTraduction) ? $tabResult[$i]['libelleStatutTraitement'] = $statutTraitementTraduction->getLibelle() : $tabResult[$i]['libelleStatutTraitement'] = "";

            $formJGerant = $this->getEntityManager()->getRepository('BanquemondialeBundle:Representant')->findOneByDossierDemande($result->getDossierDemande());
            $tabResult[$i]['gerant'] = ($formJGerant) ? $formJGerant->getPrenom() . ' ' . $formJGerant->getNom() : "";
            $verifDoss = true;
            //die(dump(stripos($tabResult[$i]['gerant'], $data['gerant'],0)));			
            if ($data['gerant'] != '') {
                //die(dump($data['gerant']));
                if (stripos($tabResult[$i]['gerant'], $data['gerant']) === false) {
                    unset($tabResult[$i]);
                    $i--;
                }
            }
            $UserSaisi = $result->getDossierDemande()->getUtilisateur();

            $tabResult[$i]['agentSaisi'] = ($UserSaisi) ? $UserSaisi->getPrenom() . ' ' . $UserSaisi->getNom() : "";
            $entreprise = ($UserSaisi) ? $UserSaisi->getEntreprise() : "";
            $tabResult[$i]['structure'] = ($UserSaisi && $entreprise != "") ? $UserSaisi->getEntreprise()->getDenomination() : "";
            //gestion des dossiers delivrÃ©s 
            /* $idDoss = $result->getDossierDemande()->getId();
              //$leDoss = $this->getEntityManager()->getRepository('BanquemondialeBundle:DocumentCollected')->findDossierNotDelivreRetrait($idDoss);
              $leDoss = $this->getEntityManager()->getRepository('BanquemondialeBundle:FormulaireDelivre')->findDossierNotDelivreRetrait($idDoss);

              if ((count($leDoss) == 0) && ($verifDoss)) {
              unset($tabResult[$i]);
              $i--;
              } */
            //fin dossiers dÃ©livrÃ©s
            //ajout Numero d'immatriculation en cas de delivrance
            $em = $this->getEntityManager();
            $numeroNif = "";
            $numeroAguipe = "";
            $numeroCnss = "";

            $rccm = $em->getRepository('BanquemondialeBundle:Rccm')->findOneBy(array('dossierDemande' => $result->getDossierDemande()->getId()));
            $numeroRccm = ($rccm) ? $rccm->getNumRccmFormalite() : "";
            if ($statut && $statut == 2) {
                $pole = $em->getRepository('ParametrageBundle:pole')->find($idPole);
                if ($pole && $pole->getSigle() == 'BNI') {
                    $nif = $em->getRepository('BanquemondialeBundle:Nif')->findOneBy(array('dossierDemande' => $result->getDossierDemande()->getId()));
                    $numeroNif = ($nif) ? $nif->getNumeroIdentificationFiscale() : "";
                }
                if ($pole && $pole->getSigle() == 'CNSS') {
                    $cnss = $em->getRepository('BanquemondialeBundle:ComplementCnss')->findOneBy(array('dossierDemande' => $result->getDossierDemande()->getId()));
                    $numeroCnss = ($cnss) ? $cnss->getNumeroEmployeur() : "";
                }
                if ($pole && $pole->getSigle() == 'AGUIPE') {
                    $aguipe = $em->getRepository('BanquemondialeBundle:Aguipe')->findOneBy(array('dossierDemande' => $result->getDossierDemande()->getId()));
                    $numeroAguipe = ($aguipe) ? $aguipe->getNumeroImmatriculation() . '/AGUIPE/' . $result->getDateDelivrance()->format('Y') : "";
                }
            }
            $tabResult[$i]['numeroRccm'] = $numeroRccm;
            $tabResult[$i]['numeroNif'] = $numeroNif;
            $tabResult[$i]['numeroAguipe'] = $numeroAguipe;
            $tabResult[$i]['numeroCnss'] = $numeroCnss;
            $i++;
        }

        return $tabResult;
    }

    public function findDossiersCaisse2($data, $idLangue, $idPole, $limit = null, $statut = null) {
        $query = $this->createQueryBuilder('dc')
            ->join('dc.dossierDemande', 'd')
            ->join('dc.pole', 'p')
            ->leftJoin('BanquemondialeBundle:Quittance', 'q', 'with', 'q.dossierDemande=d.id')
            ->andWhere('dc.pole=:idP')
            ->setParameters(array('idP' => $idPole));

        if ($data['numeroDossier'] != '') {
            $query->andWhere('LOWER(d.numeroDossier) = :numeroDossier')
                ->setParameter('numeroDossier', $data['numeroDossier']);
        }

        if ($data['denominationSociale'] != '') {
            $query->andWhere('LOWER(d.denominationSociale) like :denominationSociale')
                ->setParameter('denominationSociale', '%' . $data['denominationSociale'] . '%');
        }

        if ($statut) {
            if($statut==2){
                $query->andWhere('q.isPaid=true');
            }
            $query->andWhere('dc.statutTraitement = :st')
                ->setParameter('st', $statut);
        }
        if ($data['dateCreationDebut'] != '') {
            $query->andWhere('DATE_DIFF(dc.dateSoumission,:dateCreationDebut)>=0')
                ->setParameter('dateCreationDebut', new DateTime($data['dateCreationDebut']));
        }

        if ($data['dateCreationFin'] != '') {
            $query->andWhere('DATE_DIFF(dc.dateSoumission,:dateCreationFin)<=0')
                ->setParameter('dateCreationFin', new DateTime($data['dateCreationFin']));
        }


        if ($data['formeJuridique'] != '') {
            $query->andWhere('d.formeJuridique = :formeJuridique')
                ->setParameter('formeJuridique', $data['formeJuridique']);
        }


        if ($statut && $statut == 2) {
            if ($data['dateDelivranceDebut'] != '') {

                $query->andWhere('DATE_DIFF(dc.dateDelivrance,:dateDelivranceDebut)>=0')
                    ->setParameter('dateDelivranceDebut', new DateTime($data['dateDelivranceDebut']));
            }

            if ($data['dateDelivranceFin'] != '') {
                $query->andWhere('DATE_DIFF(dc.dateDelivrance,:dateDelivranceFin)<=0')
                    ->setParameter('dateDelivranceFin', new DateTime($data['dateDelivranceFin']));
            }
        }

        if ($data['typeDossier'] != '') {
            $query->andWhere('d.typeDossier = :typeDossier')
                ->setParameter('typeDossier', $data['typeDossier']);
        }


        if ($data['entreprise'] != '') {
            if ($statut == 1) {
                if ($data['entreprise'] == 2) {
                    $query->andWhere('q.isPaid=false and (q.statut!=3 or q.statut is null) and q.sousPrefecture=2');
                    //die(dump($query->getQuery()));
                } else {
                    $query->leftJoin('d.utilisateur', 'u')->andWhere('u.entreprise=:idE')
                        ->setParameter('idE', $data['entreprise']);
                }
            }else{
                $query->leftJoin('d.utilisateur', 'u')->andWhere('u.entreprise=:idE')
                    ->setParameter('idE', $data['entreprise']);
            }
        }

        //$query->andWhere(('dc.dossierDemande=6930'));
        //die(dump($query->getQuery()));
        if ($limit) {
            $query->setMaxResults($limit);
        }
        if ($statut && $statut = 2) {
            $query->orderBy('dc.dateDelivrance', 'desc');
        } else {

            $query->orderBy('dc.dateSoumission', 'desc');
        }
        $results = $query->getQuery()->getResult();
        $tabResult = array();
        $i = 0;
        foreach ($results as $result) {
            $tabResult[$i]['numeroDossier'] = $result->getDossierDemande()->getNumeroDossier();
            $tabResult[$i]['denominationSociale'] = $result->getDossierDemande()->getDenominationSociale();
            $tabResult[$i]['nomCommercial'] = $result->getDossierDemande()->getNomCommercial();
            $tabResult[$i]['enseigne'] = $result->getDossierDemande()->getEnseigne();
            $tabResult[$i]['telephone'] = $result->getDossierDemande()->getTelephone();
            $tabResult[$i]['email'] = $result->getDossierDemande()->getEmail();
            //$tabResult[$i]['fax'] = $result->getDossierDemande()->getFax();
            $tabResult[$i]['region'] = $result->getDossierDemande()->getRegion();
            $tabResult[$i]['dateCreation'] = $result->getDossierDemande()->getDateCreation();
            $tabResult[$i]['orange'] = $result->isOrangePole();
            $tabResult[$i]['red'] = $result->isRedPole();
            $tabResult[$i]['dateSoumission'] = $result->getDateSoumission();
            $tabResult[$i]['dateDelivrance'] = $result->getDateDelivrance();
            $tabResult[$i]['duree'] = $result->getDuree();
            $tabResult[$i]['motif'] = $result->getMotif();
            $tabResult[$i]['id'] = $result->getDossierDemande()->getId();

            $formJ = $result->getDossierDemande()->getFormeJuridique();
            $idf = $formJ->getId();
            $tabResult[$i]['idFormeJ'] = $idf;
            $formJTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:FormeJuridiqueTraduction')->getLibelleFormeJuridiqueByLanque($idLangue, $idf);
            ($formJTrad) ? $tabResult[$i]['libelleFormeJ'] = $formJTrad->getLibelle() : $tabResult[$i]['libelleFormeJ'] = "";
            $idTyp = $result->getDossierDemande()->getTypeOperation()->getId();
            $tabResult[$i]['idTypeOp'] = $idTyp;
            $typDossier = $result->getDossierDemande()->getTypeDossier()->getLibelle();
            $tabResult[$i]['typDossier'] = $typDossier;
            $typeOpTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:TypeOperationTraduction')->getLibelleOperationByLanque($idLangue, $idTyp);
            ($typeOpTrad) ? $tabResult[$i]['libelleTypeOp'] = $typeOpTrad->getLibelle() : $tabResult[$i]['libelleTypeOp'] = "";

            $statutTraitement = $result->getStatutTraitement();
            $tabResult[$i]['idStatutTraitement'] = $statutTraitement->getId();
            $statutTraitementTraduction = $this->getEntityManager()->getRepository('BanquemondialeBundle:StatutTraitementTraduction')->getLibelleStatutTraitementByLangue($idLangue, $statutTraitement);
            ($statutTraitementTraduction) ? $tabResult[$i]['libelleStatutTraitement'] = $statutTraitementTraduction->getLibelle() : $tabResult[$i]['libelleStatutTraitement'] = "";

            $formJGerant = $this->getEntityManager()->getRepository('BanquemondialeBundle:Representant')->findOneByDossierDemande($result->getDossierDemande());
            $tabResult[$i]['gerant'] = ($formJGerant) ? $formJGerant->getPrenom() . ' ' . $formJGerant->getNom() : "";
            $verifDoss = true;
            //die(dump(stripos($tabResult[$i]['gerant'], $data['gerant'],0)));			
            if ($data['gerant'] != '') {
                //die(dump($data['gerant']));
                if (stripos($tabResult[$i]['gerant'], $data['gerant']) === false) {
                    unset($tabResult[$i]);
                    $i--;
                }
            }
            $UserSaisi = $result->getDossierDemande()->getUtilisateur();
            $UserDepot = $result->getDossierDemande()->getUtilisateurDepot();
            $entreprise = ($UserSaisi) ? $UserSaisi->getEntreprise() : "";
            $tabResult[$i]['agentSaisi'] = ($UserSaisi) ? $UserSaisi->getPrenom() . ' ' . $UserSaisi->getNom() : "";
            if (!$UserSaisi) {
                if ($UserDepot) {
                    $tabResult[$i]['agentSaisi'] = $UserDepot->getPrenom() . ' ' . $UserDepot->getNom();
                }
            }
            $tabResult[$i]['structure'] = ($UserSaisi && $entreprise != "") ? $UserSaisi->getEntreprise()->getDenomination() : "";
            if (!$UserSaisi) {
                if ($UserDepot) {
                    $tabResult[$i]['structure'] = $UserDepot->getEntreprise()->getDenomination();
                }
            }
            //gestion des dossiers delivrÃ©s 
            /* $idDoss = $result->getDossierDemande()->getId();
              //$leDoss = $this->getEntityManager()->getRepository('BanquemondialeBundle:DocumentCollected')->findDossierNotDelivreRetrait($idDoss);
              $leDoss = $this->getEntityManager()->getRepository('BanquemondialeBundle:FormulaireDelivre')->findDossierNotDelivreRetrait($idDoss);

              if ((count($leDoss) == 0) && ($verifDoss)) {
              unset($tabResult[$i]);
              $i--;
              } */
            //fin dossiers dÃ©livrÃ©s
            //ajout Numero d'immatriculation en cas de delivrance
            $em = $this->getEntityManager();
            $numeroNif = "";
            $numeroAguipe = "";
            $numeroCnss = "";

            $rccm = $em->getRepository('BanquemondialeBundle:Rccm')->findOneBy(array('dossierDemande' => $result->getDossierDemande()->getId()));
            $numeroRccm = ($rccm) ? $rccm->getNumRccmFormalite() : "";
            if ($statut && $statut == 2) {
                $pole = $em->getRepository('ParametrageBundle:pole')->find($idPole);
                if ($pole && $pole->getSigle() == 'BNI') {
                    $nif = $em->getRepository('BanquemondialeBundle:Nif')->findOneBy(array('dossierDemande' => $result->getDossierDemande()->getId()));
                    $numeroNif = ($nif) ? $nif->getNumeroIdentificationFiscale() : "";
                }
                if ($pole && $pole->getSigle() == 'CNSS') {
                    $cnss = $em->getRepository('BanquemondialeBundle:ComplementCnss')->findOneBy(array('dossierDemande' => $result->getDossierDemande()->getId()));
                    $numeroCnss = ($cnss) ? $cnss->getNumeroEmployeur() : "";
                }
                if ($pole && $pole->getSigle() == 'AGUIPE') {
                    $aguipe = $em->getRepository('BanquemondialeBundle:Aguipe')->findOneBy(array('dossierDemande' => $result->getDossierDemande()->getId()));
                    $numeroAguipe = ($aguipe) ? $aguipe->getNumeroImmatriculation() . '/AGUIPE/' . $result->getDateDelivrance()->format('Y') : "";
                }
            }
            $tabResult[$i]['numeroRccm'] = $numeroRccm;
            $tabResult[$i]['numeroNif'] = $numeroNif;
            $tabResult[$i]['numeroAguipe'] = $numeroAguipe;
            $tabResult[$i]['numeroCnss'] = $numeroCnss;
            $i++;
        }
        // die(dump($tabResult));
        return $tabResult;
    }

    public function findDossiersCaisse1($statut = 1) {
        $parameters = array();
        $sqlRequete = "select d.id,d.numeroDossier,d.denominationSociale from documentcollected dc, dossierdemande d, quittance q "
            . "where dc.iddossierDemande=d.id and dc.idPole=3 and dc.idStatuttraitement=1 and q.idDossierDemande=d.id "
            . "and q.isPaid=false and (q.statut!=3 or q.statut is null) and q.idSousPrefecture=2";

        $sqlRequete0 = "select d.id,d.denominationSociale,t.libelle as typeDossier,rep.nom as nomGerant,rep.prenom as prenomGerant,"
            . "dc.dateSoumission,dc.dateDelivrance ,e.denomination as structure,u.nom as nomAgentS,u.prenom as prenomAgentS "
            . ", d.idUtilisateur"
            . " from documentCollected dc"
            . " join dossierDemande d on d.id=dc.idDossierDemande"
            . " join typeDossier t on d.idTypeDossier=t.id"
            . " join representant rep  on rep.id= (select id from representant where iddossierDemande=d.id limit 1)"
            . " left join fos_user u on d.idUtilisateur = u.id"
            . " left join entreprise e on u.entreprise_id = e.id "
            . " left join quittance q on q.idDossierdemande=d.id"
            . " where dc.idPole=3 and dc.idStatuttraitement=1 ";
        //  . " left join quittance q on q.idDossierdemande=d.id and q.isPaid=false and (q.statut!=3 or q.statut is null)"

        $stmt = $this->getEntityManager()->getConnection()->prepare($sqlRequete0);

        $stmt->execute();
        //die(dump($stmt));
        $results = $stmt->fetchAll();
        die(dump($results));
    }

    public function findDossiersCaisse($idSP, $data, $idLangue, $idPole, $limit = null, $statut = null) {
        //
        $strDujour = "";
        $parameters = array();
        $sqlRequete = "select d.id,d.numeroDossier,d.denominationSociale,d.nomCommercial,d.enseigne "
            . ",d.telephone,d.dateCreation,d.email,d.idRegion as region,dc.dateSoumission,dc.dateDelivrance "
            . ",dc.motif,d.idFormeJuridique as idF,ft.Libelle as LformeJuridique,d.idTypeOperation as idTo ,tot.libelle as LtypeOperation"
            . " ,t.libelle as typeDossier,stt.id as idS,stt.libelle as LstatutTraitement,rep.nom as nomGerant,rep.prenom as prenomGerant "
            . ",e.denomination as structure,u.nom as nomAgentS,u.prenom as prenomAgentS "
            . " from documentcollected dc join dossierdemande d on dc.idDossierDemande=d.id "
            . " join quittance q on q.iddossierdemande=d.id and q.ispaid=false and (q.statut!=3 or q.statut is null)"
            . " join formeJuridiqueTraduction ft on d.idFormeJuridique=ft.idFormeJuridique and ft.idLangue=1"
            . " join typeOperationTraduction tot on tot.idTypeOperation=d.idTypeOperation and tot.idLangue=1"
            . " join typeDossier t on d.idTypeDossier=t.id"
            . " join statutTraitementTraduction stt on stt.idLangue=1 and stt.idStatutTraitement=dc.idStatutTraitement "
            . " join representant rep  on rep.id= (select id from representant where iddossierDemande=d.id limit 1)"
            . " join fos_user u on d.idUtilisateur = u.id"
            . " left join entreprise e on u.entreprise_id = e.id "
            . "where dc.idStatutTraitement=" . $statut
            . " and dc.idPole=" . $idPole . "  ";


//and q.idsousprefecture=idsp
        if ($data['numeroDossier'] != '') {
            $sqlRequete = $sqlRequete . ' and LOWER(d.numeroDossier) = :numeroDossier';
            $parameters['numeroDossier'] = $data['numeroDossier'];
        }

        if ($data['denominationSociale'] != '') {
            $sqlRequete = $sqlRequete . ' and LOWER(d.denominationSociale) like :denominationSociale';
            $parameters['denominationSociale'] = '%' . $data['denominationSociale'] . '%';
        }
        if ($data['dateCreationDebut'] != '') {
            $sqlRequete = $sqlRequete . ' and DATE_DIFF(dc.dateSoumission,:dateCreationDebut)>=0';
            $parameters['dateCreationDebut'] = new DateTime($data['dateCreationDebut']);
        }

        if ($data['dateCreationFin'] != '') {
            $sqlRequete = $sqlRequete . ' and DATE_DIFF(dc.dateSoumission,:dateCreationFin)<=0';
            $parameters['dateCreationFin'] = new DateTime($data['dateCreationFin']);
        }


        if ($data['formeJuridique'] != '') {
            $sqlRequete = $sqlRequete . ' and d.formeJuridique = :formeJuridique';
            $parameters['formeJuridique'] = $data['formeJuridique'];
        }
        if ($statut && $statut == 2) {
            if ($data['dateDelivranceDebut'] != '') {

                $sqlRequete = $sqlRequete . ' and DATE_DIFF(dc.dateDelivrance,:dateDelivranceDebut)>=0';
                $parameters['dateDelivranceDebut'] = new DateTime($data['dateDelivranceDebut']);
            }

            if ($data['dateDelivranceFin'] != '') {
                $sqlRequete = $sqlRequete . ' and DATE_DIFF(dc.dateDelivrance,:dateDelivranceFin)<=0';
                $parameters['dateDelivranceFin'] = new DateTime($data['dateDelivranceFin']);
            }
        }
        if ($data['typeDossier'] != '') {
            $sqlRequete = $sqlRequete . ' and d.typeDossier = :typeDossier';
            $parameters['typeDossier'] = $data['typeDossier'];
        }
//$parameters['idS'] = $statut;
        //$parameters['idP'] = $idPole;
        if ($data['entreprise'] != '') {
            if ($data['entreprise'] == 2) {
                $sqlRequete = $sqlRequete . ' and q.idSousPrefecture=' . $idSP;
            } else {

            }
        }

        if ($statut && $statut == 2) {
            $sqlRequete = $sqlRequete . ' order by dc.dateDelivrance desc';
        } else {

            $sqlRequete = $sqlRequete . ' order by dc.dateSoumission desc';
        }
        if ($limit) {
            $sqlRequete = $sqlRequete . ' limit ' . $limit;
        }
        //die(dump($sqlRequete));
        $stmt = $this->getEntityManager()->getConnection()->prepare($sqlRequete);
        $stmt->execute($parameters);
        //die(dump($stmt));
        $results = $stmt->fetchAll();
//        return $results;
//        //
//        $query = $this->createQueryBuilder('dc')
//                        ->join('dc.dossierDemande', 'd','with', 'd.id=dc.dossierDemande')
//                        ->where('dc.statutTraitement = :st')
//                        ->join('BanquemondialeBundle:Quittance', 'q','with','q.dossierDemande=d.id')
//                        ->andWhere('q.isPaid=false and q.statut != 3 or q.statut is null')
//                        ->andWhere('q.sousPrefecture=:idsp')//, 'user' => $user
//                        ->andWhere('dc.pole=:idp')->setParameters(array('idp' => $idPole,'st'=>$statut,'idsp'=>$idSP));
//
////        if($idPole==3){
////            $query->join('BanquemondialeBundle:Quittance', 'q','with', 'q.dossierDemande=d.id')->andWhere('q.isPaid=false and q.statut != 3 or q.statut is null');           
////        }
//        
//
//
//        
//
//        
//
//        
//      
//        $results = $query->getQuery()->getResult();
//$req=$query->getQuery();
//die(dump($data['entreprise']));
//die(dump($results));
        $tabResult = array();
        $i = 0;
        foreach ($results as $result) {
            $tabResult[$i]['numeroDossier'] = $result['numeroDossier'];
            $tabResult[$i]['denominationSociale'] = $result['denominationSociale'];
            $tabResult[$i]['nomCommercial'] = $result['nomCommercial'];
            $tabResult[$i]['enseigne'] = $result['enseigne'];
            $tabResult[$i]['telephone'] = $result['telephone'];
            $tabResult[$i]['email'] = $result['email'];
            //$tabResult[$i]['fax'] = $result->getDossierDemande()->getFax();
            $tabResult[$i]['region'] = $result['region'];
            $tabResult[$i]['dateCreation'] = $result['dateCreation'];
//            $tabResult[$i]['orange'] = $result->isOrangePole();
//            $tabResult[$i]['red'] = $result->isRedPole();
            $tabResult[$i]['dateSoumission'] = $result['dateSoumission'];
            $tabResult[$i]['dateDelivrance'] = $result['dateDelivrance'];
            $tabResult[$i]['duree'] = 0; //$result->getDuree();
            $tabResult[$i]['motif'] = $result['motif'];
            $tabResult[$i]['id'] = $result['id'];

            $tabResult[$i]['idFormeJ'] = $result['idF'];
            $tabResult[$i]['libelleFormeJ'] = $result['LformeJuridique'];
            $tabResult[$i]['idTypeOp'] = $result['idTo'];
            $tabResult[$i]['typDossier'] = $result['typeDossier'];
            $tabResult[$i]['libelleTypeOp'] = $result['LtypeOperation'] = "";

            $tabResult[$i]['idStatutTraitement'] = $result['idS'];
            $tabResult[$i]['libelleStatutTraitement'] = $result['LstatutTraitement'];

            $tabResult[$i]['gerant'] = $result['prenomGerant'] . ' ' . $result['nomGerant'];
            $verifDoss = true;
//            //die(dump(stripos($tabResult[$i]['gerant'], $data['gerant'],0)));			
//            if ($data['gerant'] != '') {
//                //die(dump($data['gerant']));
//                if (stripos($tabResult[$i]['gerant'], $data['gerant']) === false) {
//                    unset($tabResult[$i]);
//                    $i--;
//                }
//            }
            //$UserSaisi = $result->getDossierDemande()->getUtilisateur();
            //$entreprise = ($UserSaisi) ? $UserSaisi->getEntreprise() : "";
            $tabResult[$i]['agentSaisi'] = $result['prenomAgentS'] . ' ' . $result['nomAgentS'];
            $tabResult[$i]['structure'] = $result['structure'];
            //gestion des dossiers delivrÃ©s 
            /* $idDoss = $result->getDossierDemande()->getId();
              //$leDoss = $this->getEntityManager()->getRepository('BanquemondialeBundle:DocumentCollected')->findDossierNotDelivreRetrait($idDoss);
              $leDoss = $this->getEntityManager()->getRepository('BanquemondialeBundle:FormulaireDelivre')->findDossierNotDelivreRetrait($idDoss);

              if ((count($leDoss) == 0) && ($verifDoss)) {
              unset($tabResult[$i]);
              $i--;
              } */
            //fin dossiers dÃ©livrÃ©s
            //ajout Numero d'immatriculation en cas de delivrance
//            $em = $this->getEntityManager();
//            $numeroNif = "";
//            $numeroAguipe = "";
//            $numeroCnss = "";
//            $rccm = $em->getRepository('BanquemondialeBundle:Rccm')->findOneBy(array('dossierDemande' => $result->getDossierDemande()->getId()));
//            $numeroRccm = ($rccm) ? $rccm->getNumRccmFormalite() : "";
//            if ($statut && $statut == 2) {
//                $pole = $em->getRepository('ParametrageBundle:pole')->find($idPole);
//                if ($pole && $pole->getSigle() == 'BNI') {
//                    $nif = $em->getRepository('BanquemondialeBundle:Nif')->findOneBy(array('dossierDemande' => $result->getDossierDemande()->getId()));
//                    $numeroNif = ($nif) ? $nif->getNumeroIdentificationFiscale() : "";
//                }
//                if ($pole && $pole->getSigle() == 'CNSS') {
//                    $cnss = $em->getRepository('BanquemondialeBundle:ComplementCnss')->findOneBy(array('dossierDemande' => $result->getDossierDemande()->getId()));
//                    $numeroCnss = ($cnss) ? $cnss->getNumeroEmployeur() : "";
//                }
//                if ($pole && $pole->getSigle() == 'AGUIPE') {
//                    $aguipe = $em->getRepository('BanquemondialeBundle:Aguipe')->findOneBy(array('dossierDemande' => $result->getDossierDemande()->getId()));
//                    $numeroAguipe = ($aguipe) ? $aguipe->getNumeroImmatriculation() . '/AGUIPE/' . $result->getDateDelivrance()->format('Y') : "";
//                }
//            }
            $tabResult[$i]['numeroRccm'] = "";
            $tabResult[$i]['numeroNif'] = "";
            $tabResult[$i]['numeroAguipe'] = "";
            $tabResult[$i]['numeroCnss'] = "";
            $i++;
        }

        return $tabResult;
    }

    public function findDossierPoleStat($user, $data, $idLangue, $idPole, $limit = null, $statut = null) {
        $query = $this->createQueryBuilder('dc')
            ->leftJoin('dc.dossierDemande', 'd')->addSelect('d')
            ->leftJoin('dc.pole', 'p')->addSelect('p')
            ->andWhere('dc.statutTraitement is not null')
//                        ->andWhere('dc.utilisateur= :user or dc.utilisateur is null')//, 'user' => $user
            ->andWhere('p.id=:idp')->setParameters(array('idp' => $idPole));

//        if($idPole==3){
//            $query->join('BanquemondialeBundle:Quittance', 'q','with', 'q.dossierDemande=d.id')->andWhere('q.isPaid=false and q.statut != 3 or q.statut is null');           
//        }
        if ($data['numeroDossier'] != '') {
            $query->andWhere('LOWER(d.numeroDossier) = :numeroDossier')
                ->setParameter('numeroDossier', $data['numeroDossier']);
        }

        if ($data['denominationSociale'] != '') {
            $query->andWhere('LOWER(d.denominationSociale) like :denominationSociale')
                ->setParameter('denominationSociale', '%' . $data['denominationSociale'] . '%');
        }

        if ($statut) {
            $query->andWhere('dc.statutTraitement = :st')
                ->setParameter('st', $statut);
        }
        if ($data['dateCreationDebut'] != '') {
            $query->andWhere('DATE_DIFF(dc.dateSoumission,:dateCreationDebut)>=0')
                ->setParameter('dateCreationDebut', new DateTime($data['dateCreationDebut']));
        }

        if ($data['dateCreationFin'] != '') {
            $query->andWhere('DATE_DIFF(dc.dateSoumission,:dateCreationFin)<=0')
                ->setParameter('dateCreationFin', new DateTime($data['dateCreationFin']));
        }


        if ($data['formeJuridique'] != '') {
            $query->andWhere('d.formeJuridique = :formeJuridique')
                ->setParameter('formeJuridique', $data['formeJuridique']);
        }


        if ($statut && $statut == 2) {
            /* a activer quand le produit confirmer l affichage ournaliere
             *  $query->andWhere('DATE_DIFF(dc.dateDelivrance,:dateDelivranceDebut)=0')
              ->setParameter('dateDelivranceDebut', new \DateTime()); */

            if ($data['dateDelivranceDebut'] != '') {

                $query->andWhere('DATE_DIFF(dc.dateDelivrance,:dateDelivranceDebut)>=0')
                    ->setParameter('dateDelivranceDebut', new DateTime($data['dateDelivranceDebut']));
            }

            if ($data['dateDelivranceFin'] != '') {
                $query->andWhere('DATE_DIFF(dc.dateDelivrance,:dateDelivranceFin)<=0')
                    ->setParameter('dateDelivranceFin', new DateTime($data['dateDelivranceFin']));
                //die(dump($data['dateDelivranceFin']));
            }
        }

        if ($data['typeDossier'] != '') {
            $query->andWhere('d.typeDossier = :typeDossier')
                ->setParameter('typeDossier', $data['typeDossier']);
        }

        if ($statut && $statut1 = 2) {
            $query->orderBy('dc.dateDelivrance', 'desc');
        } else {

            $query->orderBy('dc.dateSoumission', 'desc');
        }
        if ($data['entreprise'] != '') {
            $query->leftJoin('d.utilisateur', 'u')->andWhere('u.entreprise=:idE')
                ->setParameter('idE', $data['entreprise']);
        }
        if ($limit) {
            $query->setMaxResults($limit);
        }

        $results = $query->getQuery()->getResult();

        $tabResult = array();
        $i = 0;
        foreach ($results as $result) {
            $tabResult[$i]['numeroDossier'] = $result->getDossierDemande()->getNumeroDossier();
            $tabResult[$i]['denominationSociale'] = $result->getDossierDemande()->getDenominationSociale();
            $tabResult[$i]['nomCommercial'] = $result->getDossierDemande()->getNomCommercial();
            $tabResult[$i]['enseigne'] = $result->getDossierDemande()->getEnseigne();
            $tabResult[$i]['telephone'] = $result->getDossierDemande()->getTelephone();
            $tabResult[$i]['email'] = $result->getDossierDemande()->getEmail();
            //$tabResult[$i]['fax'] = $result->getDossierDemande()->getFax();
            $tabResult[$i]['region'] = $result->getDossierDemande()->getRegion();
            $tabResult[$i]['dateCreation'] = $result->getDossierDemande()->getDateCreation();
            $tabResult[$i]['orange'] = $result->isOrangePole();
            $tabResult[$i]['red'] = $result->isRedPole();
            $tabResult[$i]['dateSoumission'] = $result->getDateSoumission();
            $tabResult[$i]['dateDelivrance'] = $result->getDateDelivrance();
            $tabResult[$i]['duree'] = $result->getDuree();
            $tabResult[$i]['motif'] = $result->getMotif();
            $tabResult[$i]['id'] = $result->getDossierDemande()->getId();

            $formJ = $result->getDossierDemande()->getFormeJuridique();
            $idf = $formJ->getId();
            $tabResult[$i]['idFormeJ'] = $idf;
            $formJTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:FormeJuridiqueTraduction')->getLibelleFormeJuridiqueByLanque($idLangue, $idf);
            ($formJTrad) ? $tabResult[$i]['libelleFormeJ'] = $formJTrad->getLibelle() : $tabResult[$i]['libelleFormeJ'] = "";
            $idTyp = $result->getDossierDemande()->getTypeOperation()->getId();
            $tabResult[$i]['idTypeOp'] = $idTyp;
            $typDossier = $result->getDossierDemande()->getTypeDossier()->getLibelle();
            $tabResult[$i]['typDossier'] = $typDossier;
            $typeOpTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:TypeOperationTraduction')->getLibelleOperationByLanque($idLangue, $idTyp);
            ($typeOpTrad) ? $tabResult[$i]['libelleTypeOp'] = $typeOpTrad->getLibelle() : $tabResult[$i]['libelleTypeOp'] = "";

            $statutTraitement = $result->getStatutTraitement();
            $tabResult[$i]['idStatutTraitement'] = $statutTraitement->getId();
            $statutTraitementTraduction = $this->getEntityManager()->getRepository('BanquemondialeBundle:StatutTraitementTraduction')->getLibelleStatutTraitementByLangue($idLangue, $statutTraitement);
            ($statutTraitementTraduction) ? $tabResult[$i]['libelleStatutTraitement'] = $statutTraitementTraduction->getLibelle() : $tabResult[$i]['libelleStatutTraitement'] = "";

            $formJGerant = $this->getEntityManager()->getRepository('BanquemondialeBundle:Representant')->findOneByDossierDemande($result->getDossierDemande());
            $tabResult[$i]['gerant'] = ($formJGerant) ? $formJGerant->getPrenom() . ' ' . $formJGerant->getNom() : "";
            $verifDoss = true;
            //die(dump(stripos($tabResult[$i]['gerant'], $data['gerant'],0)));			
            if ($data['gerant'] != '') {
                //die(dump($data['gerant']));
                if (stripos($tabResult[$i]['gerant'], $data['gerant']) === false) {
                    unset($tabResult[$i]);
                    $i--;
                }
            }
            $UserSaisi = $result->getDossierDemande()->getUtilisateur();
            $entreprise = ($UserSaisi) ? $UserSaisi->getEntreprise() : "";
            $tabResult[$i]['agentSaisi'] = ($UserSaisi) ? $UserSaisi->getPrenom() . ' ' . $UserSaisi->getNom() : "";
            $tabResult[$i]['structure'] = ($UserSaisi && $entreprise != "") ? $UserSaisi->getEntreprise()->getDenomination() : "";
            //gestion des dossiers delivrÃ©s 
            /* $idDoss = $result->getDossierDemande()->getId();
              //$leDoss = $this->getEntityManager()->getRepository('BanquemondialeBundle:DocumentCollected')->findDossierNotDelivreRetrait($idDoss);
              $leDoss = $this->getEntityManager()->getRepository('BanquemondialeBundle:FormulaireDelivre')->findDossierNotDelivreRetrait($idDoss);

              if ((count($leDoss) == 0) && ($verifDoss)) {
              unset($tabResult[$i]);
              $i--;
              } */
            //fin dossiers dÃ©livrÃ©s
            //ajout Numero d'immatriculation en cas de delivrance
            $em = $this->getEntityManager();
            $numeroNif = "";
            $numeroAguipe = "";
            $numeroCnss = "";

            $rccm = $em->getRepository('BanquemondialeBundle:Rccm')->findOneBy(array('dossierDemande' => $result->getDossierDemande()->getId()));
            $numeroRccm = ($rccm) ? $rccm->getNumRccmFormalite() : "";
            if ($statut && $statut == 2) {
                $pole = $em->getRepository('ParametrageBundle:pole')->find($idPole);
                if ($pole && $pole->getSigle() == 'BNI') {
                    $nif = $em->getRepository('BanquemondialeBundle:Nif')->findOneBy(array('dossierDemande' => $result->getDossierDemande()->getId()));
                    $numeroNif = ($nif) ? $nif->getNumeroIdentificationFiscale() : "";
                }
                if ($pole && $pole->getSigle() == 'CNSS') {
                    $cnss = $em->getRepository('BanquemondialeBundle:ComplementCnss')->findOneBy(array('dossierDemande' => $result->getDossierDemande()->getId()));
                    $numeroCnss = ($cnss) ? $cnss->getNumeroEmployeur() : "";
                }
                if ($pole && $pole->getSigle() == 'AGUIPE') {
                    $aguipe = $em->getRepository('BanquemondialeBundle:Aguipe')->findOneBy(array('dossierDemande' => $result->getDossierDemande()->getId()));
                    $numeroAguipe = ($aguipe) ? $aguipe->getNumeroImmatriculation() . '/AGUIPE/' . $result->getDateDelivrance()->format('Y') : "";
                }
            }
            $tabResult[$i]['numeroRccm'] = $numeroRccm;
            $tabResult[$i]['numeroNif'] = $numeroNif;
            $tabResult[$i]['numeroAguipe'] = $numeroAguipe;
            $tabResult[$i]['numeroCnss'] = $numeroCnss;
            $i++;
        }

        return $tabResult;
    }

    public function findDossierPoleSuperviseur($user, $data, $idLangue, $idPole, $limit = null, $statut = null, $isSiege, $idE) {
        $query = $this->createQueryBuilder('dc')
            ->leftJoin('dc.dossierDemande', 'd')->addSelect('d')
            ->leftJoin('dc.pole', 'p')->addSelect('p')
            ->andWhere('dc.statutTraitement is not null')
            ->andWhere('dc.utilisateur= :user or dc.utilisateur is null')
            ->andWhere('p.id=:idp')->setParameters(array('idp' => $idPole, 'user' => $user));
        if (!$isSiege) {
            $query->leftJoin('d.utilisateur', 'u')->andWhere('u.entreprise=:idE')
                ->setParameter('idE', $idE);
        }
        if ($data['numeroDossier'] != '') {
            $query->andWhere('LOWER(d.numeroDossier) = :numeroDossier')
                ->setParameter('numeroDossier', $data['numeroDossier']);
        }

        if ($data['denominationSociale'] != '') {
            $query->andWhere('LOWER(d.denominationSociale) like :denominationSociale')
                ->setParameter('denominationSociale', '%' . $data['denominationSociale'] . '%');
        }

        if ($statut) {
            $query->andWhere('dc.statutTraitement = :st')
                ->setParameter('st', $statut);
        }
        if ($data['dateCreationDebut'] != '') {
            $query->andWhere('DATE_DIFF(dc.dateSoumission,:dateCreationDebut)>=0')
                ->setParameter('dateCreationDebut', new DateTime($data['dateCreationDebut']));
        }

        if ($data['dateCreationFin'] != '') {
            $query->andWhere('DATE_DIFF(dc.dateSoumission,:dateCreationFin)<=0')
                ->setParameter('dateCreationFin', new DateTime($data['dateCreationFin']));
        }


        if ($data['formeJuridique'] != '') {
            $query->andWhere('d.formeJuridique = :formeJuridique')
                ->setParameter('formeJuridique', $data['formeJuridique']);
        }

        if ($statut && $statut == 2) {
            $query->andWhere('DATE_DIFF(dc.dateDelivrance,:dateDelivranceDebut)=0')
                ->setParameter('dateDelivranceDebut', new \DateTime());
        }

        if ($data['typeDossier'] != '') {
            $query->andWhere('d.typeDossier = :typeDossier')
                ->setParameter('typeDossier', $data['typeDossier']);
        }

        if ($statut && $statut1 = 1) {
            $query->orderBy('dc.dateDelivrance', 'desc');
        } else {

            $query->orderBy('dc.dateSoumission', 'desc');
        }
        if ($data['entreprise'] != '') {
            $query->leftJoin('d.utilisateur', 'u')->andWhere('u.entreprise=:idE')
                ->setParameter('idE', $data['entreprise']);
        }
        if ($limit) {
            $query->setMaxResults($limit);
        }

        $results = $query->getQuery()->getResult();

        $tabResult = array();
        $i = 0;
        foreach ($results as $result) {
            $tabResult[$i]['numeroDossier'] = $result->getDossierDemande()->getNumeroDossier();
            $tabResult[$i]['denominationSociale'] = $result->getDossierDemande()->getDenominationSociale();
            $tabResult[$i]['nomCommercial'] = $result->getDossierDemande()->getNomCommercial();
            $tabResult[$i]['enseigne'] = $result->getDossierDemande()->getEnseigne();
            $tabResult[$i]['telephone'] = $result->getDossierDemande()->getTelephone();
            $tabResult[$i]['email'] = $result->getDossierDemande()->getEmail();
            //$tabResult[$i]['fax'] = $result->getDossierDemande()->getFax();
            $tabResult[$i]['region'] = $result->getDossierDemande()->getRegion();
            $tabResult[$i]['dateCreation'] = $result->getDossierDemande()->getDateCreation();
            $tabResult[$i]['orange'] = $result->isOrangePole();
            $tabResult[$i]['red'] = $result->isRedPole();
            $tabResult[$i]['dateSoumission'] = $result->getDateSoumission();
            $tabResult[$i]['dateDelivrance'] = $result->getDateDelivrance();
            $tabResult[$i]['duree'] = $result->getDuree();
            $tabResult[$i]['motif'] = $result->getMotif();
            $tabResult[$i]['id'] = $result->getDossierDemande()->getId();

            $formJ = $result->getDossierDemande()->getFormeJuridique();
            $idf = $formJ->getId();
            $tabResult[$i]['idFormeJ'] = $idf;
            $formJTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:FormeJuridiqueTraduction')->getLibelleFormeJuridiqueByLanque($idLangue, $idf);
            ($formJTrad) ? $tabResult[$i]['libelleFormeJ'] = $formJTrad->getLibelle() : $tabResult[$i]['libelleFormeJ'] = "";
            $idTyp = $result->getDossierDemande()->getTypeOperation()->getId();
            $tabResult[$i]['idTypeOp'] = $idTyp;
            $typDossier = $result->getDossierDemande()->getTypeDossier()->getLibelle();
            $tabResult[$i]['typDossier'] = $typDossier;
            $typeOpTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:TypeOperationTraduction')->getLibelleOperationByLanque($idLangue, $idTyp);
            ($typeOpTrad) ? $tabResult[$i]['libelleTypeOp'] = $typeOpTrad->getLibelle() : $tabResult[$i]['libelleTypeOp'] = "";

            $statutTraitement = $result->getStatutTraitement();
            $tabResult[$i]['idStatutTraitement'] = $statutTraitement->getId();
            $statutTraitementTraduction = $this->getEntityManager()->getRepository('BanquemondialeBundle:StatutTraitementTraduction')->getLibelleStatutTraitementByLangue($idLangue, $statutTraitement);
            ($statutTraitementTraduction) ? $tabResult[$i]['libelleStatutTraitement'] = $statutTraitementTraduction->getLibelle() : $tabResult[$i]['libelleStatutTraitement'] = "";

            $formJGerant = $this->getEntityManager()->getRepository('BanquemondialeBundle:Representant')->findOneByDossierDemande($result->getDossierDemande());
            $tabResult[$i]['gerant'] = ($formJGerant) ? $formJGerant->getPrenom() . ' ' . $formJGerant->getNom() : "";
            $verifDoss = true;
            //die(dump(stripos($tabResult[$i]['gerant'], $data['gerant'],0)));			
            if ($data['gerant'] != '') {
                //die(dump($data['gerant']));
                if (stripos($tabResult[$i]['gerant'], $data['gerant']) === false) {
                    unset($tabResult[$i]);
                    $i--;
                }
            }
            $UserSaisi = $result->getDossierDemande()->getUtilisateur();

            $tabResult[$i]['agentSaisi'] = ($UserSaisi) ? $UserSaisi->getPrenom() . ' ' . $UserSaisi->getNom() : "";
            $entreprise = ($UserSaisi) ? $UserSaisi->getEntreprise() : "";
            $tabResult[$i]['structure'] = ($UserSaisi && $entreprise != "") ? $UserSaisi->getEntreprise()->getDenomination() : "";
            //gestion des dossiers delivrÃ©s 
            /* $idDoss = $result->getDossierDemande()->getId();
              //$leDoss = $this->getEntityManager()->getRepository('BanquemondialeBundle:DocumentCollected')->findDossierNotDelivreRetrait($idDoss);
              $leDoss = $this->getEntityManager()->getRepository('BanquemondialeBundle:FormulaireDelivre')->findDossierNotDelivreRetrait($idDoss);

              if ((count($leDoss) == 0) && ($verifDoss)) {
              unset($tabResult[$i]);
              $i--;
              } */
            //fin dossiers dÃ©livrÃ©s
            //ajout Numero d'immatriculation en cas de delivrance
            $em = $this->getEntityManager();
            $numeroNif = "";
            $numeroRccm = "";
            $numeroAguipe = "";
            $numeroCnss = "";
            if ($statut && $statut == 2) {
                $pole = $em->getRepository('ParametrageBundle:pole')->find($idPole);
                $rccm = $em->getRepository('BanquemondialeBundle:Rccm')->findOneBy(array('dossierDemande' => $result->getDossierDemande()->getId()));
                $numeroRccm = ($rccm) ? $rccm->getNumRccmFormalite() : "";
                if ($pole && $pole->getSigle() == 'BNI') {
                    $nif = $em->getRepository('BanquemondialeBundle:Nif')->findOneBy(array('dossierDemande' => $result->getDossierDemande()->getId()));
                    $numeroNif = ($nif) ? $nif->getNumeroIdentificationFiscale() : "";
                }
                if ($pole && $pole->getSigle() == 'CNSS') {
                    $cnss = $em->getRepository('BanquemondialeBundle:ComplementCnss')->findOneBy(array('dossierDemande' => $result->getDossierDemande()->getId()));
                    $numeroCnss = ($cnss) ? $cnss->getNumeroEmployeur() : "";
                }
                if ($pole && $pole->getSigle() == 'AGUIPE') {
                    $aguipe = $em->getRepository('BanquemondialeBundle:Aguipe')->findOneBy(array('dossierDemande' => $result->getDossierDemande()->getId()));
                    $numeroAguipe = ($aguipe) ? $aguipe->getNumeroImmatriculation() . '/AGUIPE/' . $result->getDateDelivrance()->format('y') : "";
                }
            }
            $tabResult[$i]['numeroRccm'] = $numeroRccm;
            $tabResult[$i]['numeroNif'] = $numeroNif;
            $tabResult[$i]['numeroCnss'] = $numeroCnss;
            $tabResult[$i]['numeroAguipe'] = $numeroAguipe;
            $i++;
        }

        return $tabResult;
    }

    public function findDossierPoleRetrait($user, $data, $idLangue, $idPole, $limit = null, $statut = null, $idS = null) {

        $sqlQuery = "SELECT dc.id as idDocumentCollected,dd.id, dc.dateDelivrance as dateReception, (select concat(r.prenom,' ',r.nom) from representant r where r.idDossierDemande = dd.id order by id ASC limit 1) as gerant ,
            u.entreprise_id as idE,
		(select count(*) from formulaireDelivre fd where fd.idDossierDemande = dc.idDossierDemande and fd.estRetire = 1) as formulairesRetires, 
        (select count(dc2.idPole) from documentCollected dc2 where dc2.idDossierDemande = dc.idDossierDemande and dc2.idPole not in (select fd2.idPole from formulaireDelivre fd2 where fd2.idDossierDemande = dc2.idDossierDemande and fd2.estRetire = 1)  and dc2.idPole != 4) as nbrFormulaireRestant 
		FROM documentCollected dc
		join dossierDemande dd on dd.id = dc.idDossierDemande
		join pole p on dc.idPole = p.id
                left join fos_user u on dd.idUtilisateur=u.id
		WHERE dc.idStatutTraitement = 2 and p.id = 1 
    
        and (select count(*) from formulaireDelivre fd 
		where fd.idDossierDemande = dc.idDossierDemande and fd.idPole = dc.idPole and fd.estRetire = 1) = 0  
		
         and (select count(dc2.idPole) from documentCollected dc2 where dc2.idDossierDemande = dc.idDossierDemande and dc2.idPole not in (select fd2.idPole from formulaireDelivre fd2 where fd2.idDossierDemande = dc2.idDossierDemande and fd2.estRetire = 1)  and dc2.idPole != 4)  > 0 ";

        $parameters = null;

        if (isset($data['numeroDossier']) and $data['numeroDossier'] != '') {
            $sqlQuery = $sqlQuery . " and dd.numeroDossier = :numeroDossier";
            $parameters['numeroDossier'] = $data['numeroDossier'];
        }

        if (isset($data['denominationSociale']) and $data['denominationSociale'] != '') {
            $sqlQuery = $sqlQuery . " and LOWER(dd.denominationSociale) like :denominationSociale";
            $parameters['denominationSociale'] = "%" . strtolower($data['denominationSociale']) . "%";
        }

        if (isset($data['gerant']) and $data['gerant'] != '') {
            $sqlQuery = $sqlQuery . " and LOWER((select concat(r.prenom,' ',r.nom) from representant r where r.idDossierDemande = dd.id order by id ASC limit 1)) like :gerant";
            $parameters['gerant'] = "%" . strtolower($data['gerant']) . "%";
        }

        if (isset($data['formeJuridique']) and $data['formeJuridique'] != '') {
            $sqlQuery = $sqlQuery . " and LOWER(dd.idFormeJuridique) = :formeJuridique";
            $parameters['formeJuridique'] = strtolower($data['formeJuridique']);
        }

        if ($statut) {
            $sqlQuery = $sqlQuery . " and dc.idStatutTraitement =:statut";
            $parameters['statut'] = $statut;
        }

        if (isset($data['dateCreationDebut']) and $data['dateCreationDebut'] != '') {
            $dateCreationDebut = new DateTime($data['dateCreationDebut']);
            $sqlQuery = $sqlQuery . " and DATEDIFF(dc.dateDelivrance,:dateCreationDebut)>=0";
            $parameters['dateCreationDebut'] = $dateCreationDebut->format('Y-m-d');
        }

        if (isset($data['dateCreationFin']) and $data['dateCreationFin'] != '') {
            $dateCreationFin = new DateTime($data['dateCreationFin']);
            $sqlQuery = $sqlQuery . " and DATEDIFF(dc.dateDelivrance,:dateCreationFin)<=0";
            $parameters['dateCreationFin'] = $dateCreationFin->format('Y-m-d');
        }

        if (isset($data['typeDossier']) and $data['typeDossier'] != '') {
            $sqlQuery = $sqlQuery . " and dd.idTypeDossier = :typeDossier";
            $parameters['typeDossier'] = $data['typeDossier'];
        }
        if (isset($data['entreprise']) and $data['entreprise'] != '') {
            $sqlQuery = $sqlQuery . " and u.entreprise_id = :ide";
            $parameters['ide'] = $data['entreprise'];
        }
        $sqlQuery = $sqlQuery . " ORDER BY dc.dateDelivrance DESC ";

        if ($limit != null) {
            $sqlQuery = $sqlQuery . " LIMIT " . $limit;
        }

        $stmt = $this->getEntityManager()->getConnection()->prepare($sqlQuery);
        $stmt->execute($parameters);
        $results = $stmt->fetchAll();

        $tabResult = array();
        $i = 0;
        foreach ($results as $result) {
            //die(dump($result));
            $idDocumentCollected = $result['idDocumentCollected'];
            $documentCollected = $this->getEntityManager()->getRepository('BanquemondialeBundle:DocumentCollected')->find($idDocumentCollected);

            $tabResult[$i]['numeroDossier'] = $documentCollected->getDossierDemande()->getNumeroDossier();
            $tabResult[$i]['denominationSociale'] = $documentCollected->getDossierDemande()->getDenominationSociale();
            $tabResult[$i]['nomCommercial'] = $documentCollected->getDossierDemande()->getNomCommercial();
            $tabResult[$i]['enseigne'] = $documentCollected->getDossierDemande()->getEnseigne();
            $tabResult[$i]['telephone'] = $documentCollected->getDossierDemande()->getTelephone();
            $tabResult[$i]['email'] = $documentCollected->getDossierDemande()->getEmail();
            //$tabResult[$i]['fax'] = $documentCollected->getDossierDemande()->getFax();
            $tabResult[$i]['region'] = $documentCollected->getDossierDemande()->getRegion();
            $tabResult[$i]['dateCreation'] = $documentCollected->getDossierDemande()->getDateCreation();
            $tabResult[$i]['orange'] = $documentCollected->isOrangePole();
            $tabResult[$i]['red'] = $documentCollected->isRedPole();
            $tabResult[$i]['dateSoumission'] = $documentCollected->getDateSoumission();
            $tabResult[$i]['dateDelivrance'] = $documentCollected->getDateDelivrance();
            $tabResult[$i]['duree'] = $documentCollected->getDuree();

            $tabResult[$i]['id'] = $documentCollected->getDossierDemande()->getId();

            $formJ = $documentCollected->getDossierDemande()->getFormeJuridique();
            $idf = $formJ->getId();
            $tabResult[$i]['idFormeJ'] = $idf;
            $formJTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:FormeJuridiqueTraduction')->getLibelleFormeJuridiqueByLanque($idLangue, $idf);
            ($formJTrad) ? $tabResult[$i]['libelleFormeJ'] = $formJTrad->getLibelle() : $tabResult[$i]['libelleFormeJ'] = "";
            $idTyp = $documentCollected->getDossierDemande()->getTypeOperation()->getId();
            $tabResult[$i]['idTypeOp'] = $idTyp;
            $typDossier = $documentCollected->getDossierDemande()->getTypeDossier()->getLibelle();
            $tabResult[$i]['typDossier'] = $typDossier;
            $typeOpTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:TypeOperationTraduction')->getLibelleOperationByLanque($idLangue, $idTyp);
            ($typeOpTrad) ? $tabResult[$i]['libelleTypeOp'] = $typeOpTrad->getLibelle() : $tabResult[$i]['libelleTypeOp'] = "";

            $statutTraitement = $documentCollected->getStatutTraitement();
            $tabResult[$i]['idStatutTraitement'] = $statutTraitement->getId();
            $statutTraitementTraduction = $this->getEntityManager()->getRepository('BanquemondialeBundle:StatutTraitementTraduction')->getLibelleStatutTraitementByLangue($idLangue, $statutTraitement);
            ($statutTraitementTraduction) ? $tabResult[$i]['libelleStatutTraitement'] = $statutTraitementTraduction->getLibelle() : $tabResult[$i]['libelleStatutTraitement'] = "";

            $formJGerant = $this->getEntityManager()->getRepository('BanquemondialeBundle:Representant')->findOneByDossierDemande($documentCollected->getDossierDemande());
            $tabResult[$i]['gerant'] = $formJGerant->getPrenom() . ' ' . $formJGerant->getNom();
            $tabResult[$i]['telGerant'] = $formJGerant->getTelephone();
            $tabResult[$i]['structure'] = ($result['idE']) ? $this->getEntityManager()->getRepository('BanquemondialeBundle:Entreprise')->find($result['idE'])->getDenomination() : "";
            $i++;
        }
        //die(dump($tabResult));
        return $tabResult;
    }

    public function findDossierPartielPoleRetrait($user, $data, $idLangue, $idPole, $limit = null, $statut = null, $idS = null) {

        $sqlQuery = "SELECT  dd.statusRetrait statusRetrait,dc.id as idDocumentCollected,dd.id, dc.dateDelivrance as dateReception, (select concat(r.prenom,' ',r.nom) from representant r where r.idDossierDemande = dd.id order by id ASC limit 1) as gerant ,
		(select count(*) from formulaireDelivre fd where fd.idDossierDemande = dc.idDossierDemande and fd.estRetire = 1) as formulairesRetires, 
        (select count(dc2.idPole) from documentCollected dc2 where dc2.idDossierDemande = dc.idDossierDemande and dc2.idPole not in (select fd2.idPole from formulaireDelivre fd2 where fd2.idDossierDemande = dc2.idDossierDemande and fd2.estRetire = 1)  and dc2.idPole != 4) as nbrFormulaireRestant 
		FROM documentCollected dc
		join dossierDemande dd on dd.id = dc.idDossierDemande
		join pole p on dc.idPole = p.id
		WHERE dc.idStatutTraitement = 2 and p.id = 1 
	
        
        and (select count(*) from formulaireDelivre fd 
		where fd.idDossierDemande = dc.idDossierDemande and fd.idPole = dc.idPole and fd.estRetire = 1) > 0  
		
         and (select count(dc2.idPole) from documentCollected dc2 where dc2.idDossierDemande = dc.idDossierDemande and dc2.idPole not in (select fd2.idPole from formulaireDelivre fd2 where fd2.idDossierDemande = dc2.idDossierDemande and fd2.estRetire = 1)  and dc2.idPole != 4)  > 0";

        $parameters = null;

        if (isset($data['statusRetrait']) and $data['statusRetrait'] != '') {
            $sqlQuery = $sqlQuery . " and dd.statusRetrait = :statusRetrait";
            $parameters['statusRetrait'] = $data['statusRetrait'];
        }

        if (isset($data['numeroDossier']) and $data['numeroDossier'] != '') {
            $sqlQuery = $sqlQuery . " and dd.numeroDossier = :numeroDossier";
            $parameters['numeroDossier'] = $data['numeroDossier'];
        }

        if (isset($data['denominationSociale']) and $data['denominationSociale'] != '') {
            $sqlQuery = $sqlQuery . " and LOWER(dd.denominationSociale) like :denominationSociale";
            $parameters['denominationSociale'] = "%" . strtolower($data['denominationSociale']) . "%";
        }

        if (isset($data['gerant']) and $data['gerant'] != '') {
            $sqlQuery = $sqlQuery . " and LOWER((select concat(r.prenom,' ',r.nom) from representant r where r.idDossierDemande = dd.id order by id ASC limit 1)) like :gerant";
            $parameters['gerant'] = "%" . strtolower($data['gerant']) . "%";
        }

        if (isset($data['formeJuridique']) and $data['formeJuridique'] != '') {
            $sqlQuery = $sqlQuery . " and LOWER(dd.idFormeJuridique) = :formeJuridique";
            $parameters['formeJuridique'] = strtolower($data['formeJuridique']);
        }

        if ($statut) {
            $sqlQuery = $sqlQuery . " and dc.idStatutTraitement =:statut";
            $parameters['statut'] = $statut;
        }

        if (isset($data['dateCreationDebut']) and $data['dateCreationDebut'] != '') {
            $dateCreationDebut = new DateTime($data['dateCreationDebut']);
            $sqlQuery = $sqlQuery . " and DATEDIFF(dc.dateDelivrance,:dateCreationDebut)>=0";
            $parameters['dateCreationDebut'] = $dateCreationDebut->format('Y-m-d');
        }

        if (isset($data['dateCreationFin']) and $data['dateCreationFin'] != '') {
            $dateCreationFin = new DateTime($data['dateCreationFin']);
            $sqlQuery = $sqlQuery . " and DATEDIFF(dc.dateDelivrance,:dateCreationFin)<=0";
            $parameters['dateCreationFin'] = $dateCreationFin->format('Y-m-d');
        }

        if (isset($data['typeDossier']) and $data['typeDossier'] != '') {
            $sqlQuery = $sqlQuery . " and dd.idTypeDossier = :typeDossier";
            $parameters['typeDossier'] = $data['typeDossier'];
        }

        $sqlQuery = $sqlQuery . " ORDER BY dd.id DESC ";

        if ($limit != null) {
            $sqlQuery = $sqlQuery . " LIMIT " . $limit;
        }

        $stmt = $this->getEntityManager()->getConnection()->prepare($sqlQuery);
        $stmt->execute($parameters);
        $results = $stmt->fetchAll();

        $tabResult = array();
        $i = 0;
        foreach ($results as $result) {
            //die(dump($result));
            $idDocumentCollected = $result['idDocumentCollected'];
            $documentCollected = $this->getEntityManager()->getRepository('BanquemondialeBundle:DocumentCollected')->find($idDocumentCollected);

            $tabResult[$i]['numeroDossier'] = $documentCollected->getDossierDemande()->getNumeroDossier();
            $tabResult[$i]['denominationSociale'] = $documentCollected->getDossierDemande()->getDenominationSociale();
            $tabResult[$i]['nomCommercial'] = $documentCollected->getDossierDemande()->getNomCommercial();
            $tabResult[$i]['enseigne'] = $documentCollected->getDossierDemande()->getEnseigne();
            $tabResult[$i]['telephone'] = $documentCollected->getDossierDemande()->getTelephone();
            $tabResult[$i]['email'] = $documentCollected->getDossierDemande()->getEmail();
            //$tabResult[$i]['fax'] = $documentCollected->getDossierDemande()->getFax();
            $tabResult[$i]['region'] = $documentCollected->getDossierDemande()->getRegion();
            $tabResult[$i]['dateCreation'] = $documentCollected->getDossierDemande()->getDateCreation();
            $tabResult[$i]['orange'] = $documentCollected->isOrangePole();
            $tabResult[$i]['red'] = $documentCollected->isRedPole();
            $tabResult[$i]['dateSoumission'] = $documentCollected->getDateSoumission();
            $tabResult[$i]['dateDelivrance'] = $documentCollected->getDateDelivrance();
            $tabResult[$i]['duree'] = $documentCollected->getDuree();
            $tabResult[$i]['id'] = $documentCollected->getDossierDemande()->getId();
           $tabResult[$i]['statusRetrait'] = $documentCollected->getDossierDemande()->getStatusRetrait();
            //var_dump($documentCollected->getDossierDemande()->getStatusRetrait());die();
            $formJ = $documentCollected->getDossierDemande()->getFormeJuridique();
            $idf = $formJ->getId();
            $tabResult[$i]['idFormeJ'] = $idf;
            $formJTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:FormeJuridiqueTraduction')->getLibelleFormeJuridiqueByLanque($idLangue, $idf);
            ($formJTrad) ? $tabResult[$i]['libelleFormeJ'] = $formJTrad->getLibelle() : $tabResult[$i]['libelleFormeJ'] = "";
            $idTyp = $documentCollected->getDossierDemande()->getTypeOperation()->getId();
            $tabResult[$i]['idTypeOp'] = $idTyp;
            $typDossier = $documentCollected->getDossierDemande()->getTypeDossier()->getLibelle();
            $tabResult[$i]['typDossier'] = $typDossier;
            $typeOpTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:TypeOperationTraduction')->getLibelleOperationByLanque($idLangue, $idTyp);
            ($typeOpTrad) ? $tabResult[$i]['libelleTypeOp'] = $typeOpTrad->getLibelle() : $tabResult[$i]['libelleTypeOp'] = "";

            $statutTraitement = $documentCollected->getStatutTraitement();
            $tabResult[$i]['idStatutTraitement'] = $statutTraitement->getId();
            $statutTraitementTraduction = $this->getEntityManager()->getRepository('BanquemondialeBundle:StatutTraitementTraduction')->getLibelleStatutTraitementByLangue($idLangue, $statutTraitement);
            ($statutTraitementTraduction) ? $tabResult[$i]['libelleStatutTraitement'] = $statutTraitementTraduction->getLibelle() : $tabResult[$i]['libelleStatutTraitement'] = "";

            $formJGerant = $this->getEntityManager()->getRepository('BanquemondialeBundle:Representant')->findOneByDossierDemande($documentCollected->getDossierDemande());
            $tabResult[$i]['gerant'] = $formJGerant->getPrenom() . ' ' . $formJGerant->getNom();
            $tabResult[$i]['telGerant'] = $formJGerant->getTelephone();

            $i++;
        }
        //die(dump($tabResult));
        return $tabResult;
    }

    public function findDossierPoleRetire($user, $data, $idLangue, $idPole, $limit = null, $statut = null, $idS = null) {

        $sqlQuery = "SELECT dc.id as idDocumentCollected,dd.id, dc.dateDelivrance as dateReception, (select concat(r.prenom,' ',r.nom) from representant r where r.idDossierDemande = dd.id order by id ASC limit 1) as gerant ,
            u.entreprise_id as idEntreprise,
		(select count(*) from formulaireDelivre fd where fd.idDossierDemande = dc.idDossierDemande and fd.estRetire = 1) as formulairesRetires, 
        (select count(dc2.idPole) from documentCollected dc2 where dc2.idDossierDemande = dc.idDossierDemande and dc2.idPole not in (select fd2.idPole from formulaireDelivre fd2 where fd2.idDossierDemande = dc2.idDossierDemande)  and dc2.idPole != 4) as nbrFormulaireRestant 
		FROM documentCollected dc
		join dossierDemande dd on dd.id = dc.idDossierDemande
		join pole p on dc.idPole = p.id
                left join fos_user u on dd.idUtilisateur=u.id
		WHERE dc.idStatutTraitement = 2 and p.id = 1 
        
        and (select count(*) from formulaireDelivre fd 
		where fd.idDossierDemande = dc.idDossierDemande and fd.idPole = dc.idPole and fd.estRetire = 1) > 0  
		
         and (select count(dc2.idPole) from documentCollected dc2 where dc2.idDossierDemande = dc.idDossierDemande and dc2.idPole not in (select fd2.idPole from formulaireDelivre fd2 where fd2.idDossierDemande = dc2.idDossierDemande and fd2.estRetire = 1)  and dc2.idPole != 4)  = 0 ";

        $parameters = null;

        if (isset($data['numeroDossier']) and $data['numeroDossier'] != '') {
            $sqlQuery = $sqlQuery . " and dd.numeroDossier = :numeroDossier";
            $parameters['numeroDossier'] = $data['numeroDossier'];
        }

        if (isset($data['denominationSociale']) and $data['denominationSociale'] != '') {
            $sqlQuery = $sqlQuery . " and LOWER(dd.denominationSociale) like :denominationSociale";
            $parameters['denominationSociale'] = "%" . strtolower($data['denominationSociale']) . "%";
        }

        if (isset($data['gerant']) and $data['gerant'] != '') {
            $sqlQuery = $sqlQuery . " and LOWER((select concat(r.prenom,' ',r.nom) from representant r where r.idDossierDemande = dd.id order by id ASC limit 1)) like :gerant";
            $parameters['gerant'] = "%" . strtolower($data['gerant']) . "%";
        }

        if (isset($data['formeJuridique']) and $data['formeJuridique'] != '') {
            $sqlQuery = $sqlQuery . " and LOWER(dd.idFormeJuridique) = :formeJuridique";
            $parameters['formeJuridique'] = strtolower($data['formeJuridique']);
        }

        if ($statut) {
            $sqlQuery = $sqlQuery . " and dc.idStatutTraitement =:statut";
            $parameters['statut'] = $statut;
        }

        if (isset($data['dateCreationDebut']) and $data['dateCreationDebut'] != '') {
            $dateCreationDebut = new DateTime($data['dateCreationDebut']);
            $sqlQuery = $sqlQuery . " and DATEDIFF(dc.dateDelivrance,:dateCreationDebut)>=0";
            $parameters['dateCreationDebut'] = $dateCreationDebut->format('Y-m-d');
        }

        if (isset($data['dateCreationFin']) and $data['dateCreationFin'] != '') {
            $dateCreationFin = new DateTime($data['dateCreationFin']);
            $sqlQuery = $sqlQuery . " and DATEDIFF(dc.dateDelivrance,:dateCreationFin)<=0";
            $parameters['dateCreationFin'] = $dateCreationFin->format('Y-m-d');
        }

        if (isset($data['typeDossier']) and $data['typeDossier'] != '') {
            $sqlQuery = $sqlQuery . " and dd.idTypeDossier = :typeDossier";
            $parameters['typeDossier'] = $data['typeDossier'];
        }
        if (isset($data['entreprise']) and $data['entreprise'] != '') {
            $sqlQuery = $sqlQuery . " and u.entreprise_id = :ide";
            $parameters['ide'] = $data['entreprise'];
        }
        $sqlQuery = $sqlQuery . " ORDER BY dd.id DESC ";

        if ($limit != null) {
            $sqlQuery = $sqlQuery . " LIMIT " . $limit;
        }

        $stmt = $this->getEntityManager()->getConnection()->prepare($sqlQuery);
        $stmt->execute($parameters);
        $results = $stmt->fetchAll();

        $tabResult = array();
        $i = 0;
        foreach ($results as $result) {
            //die(dump($result));
            $idDocumentCollected = $result['idDocumentCollected'];
            $documentCollected = $this->getEntityManager()->getRepository('BanquemondialeBundle:DocumentCollected')->find($idDocumentCollected);

            $tabResult[$i]['numeroDossier'] = $documentCollected->getDossierDemande()->getNumeroDossier();
            $tabResult[$i]['denominationSociale'] = $documentCollected->getDossierDemande()->getDenominationSociale();
            $tabResult[$i]['nomCommercial'] = $documentCollected->getDossierDemande()->getNomCommercial();
            $tabResult[$i]['enseigne'] = $documentCollected->getDossierDemande()->getEnseigne();
            $tabResult[$i]['telephone'] = $documentCollected->getDossierDemande()->getTelephone();
            $tabResult[$i]['email'] = $documentCollected->getDossierDemande()->getEmail();
            //$tabResult[$i]['fax'] = $documentCollected->getDossierDemande()->getFax();
            $tabResult[$i]['region'] = $documentCollected->getDossierDemande()->getRegion();
            $tabResult[$i]['dateCreation'] = $documentCollected->getDossierDemande()->getDateCreation();
            $tabResult[$i]['orange'] = $documentCollected->isOrangePole();
            $tabResult[$i]['red'] = $documentCollected->isRedPole();
            $tabResult[$i]['dateSoumission'] = $documentCollected->getDateSoumission();
            $tabResult[$i]['dateDelivrance'] = $documentCollected->getDateDelivrance();
            $tabResult[$i]['duree'] = $documentCollected->getDuree();

            $tabResult[$i]['id'] = $documentCollected->getDossierDemande()->getId();

            $formJ = $documentCollected->getDossierDemande()->getFormeJuridique();
            $idf = $formJ->getId();
            $tabResult[$i]['idFormeJ'] = $idf;
            $formJTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:FormeJuridiqueTraduction')->getLibelleFormeJuridiqueByLanque($idLangue, $idf);
            ($formJTrad) ? $tabResult[$i]['libelleFormeJ'] = $formJTrad->getLibelle() : $tabResult[$i]['libelleFormeJ'] = "";
            $idTyp = $documentCollected->getDossierDemande()->getTypeOperation()->getId();
            $tabResult[$i]['idTypeOp'] = $idTyp;
            $typDossier = $documentCollected->getDossierDemande()->getTypeDossier()->getLibelle();
            $tabResult[$i]['typDossier'] = $typDossier;
            $typeOpTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:TypeOperationTraduction')->getLibelleOperationByLanque($idLangue, $idTyp);
            ($typeOpTrad) ? $tabResult[$i]['libelleTypeOp'] = $typeOpTrad->getLibelle() : $tabResult[$i]['libelleTypeOp'] = "";

            $statutTraitement = $documentCollected->getStatutTraitement();
            $tabResult[$i]['idStatutTraitement'] = $statutTraitement->getId();
            $statutTraitementTraduction = $this->getEntityManager()->getRepository('BanquemondialeBundle:StatutTraitementTraduction')->getLibelleStatutTraitementByLangue($idLangue, $statutTraitement);
            ($statutTraitementTraduction) ? $tabResult[$i]['libelleStatutTraitement'] = $statutTraitementTraduction->getLibelle() : $tabResult[$i]['libelleStatutTraitement'] = "";

            $formJGerant = $this->getEntityManager()->getRepository('BanquemondialeBundle:Representant')->findOneByDossierDemande($documentCollected->getDossierDemande());
            $tabResult[$i]['gerant'] = $formJGerant->getPrenom() . ' ' . $formJGerant->getNom();
            $tabResult[$i]['telGerant'] = $formJGerant->getTelephone();
            $tabResult[$i]['structure'] = ($result['idEntreprise']) ? $this->getEntityManager()->getRepository('BanquemondialeBundle:Entreprise')->find($result['idEntreprise'])->getDenomination() : "";
            $i++;
        }
        //die(dump($tabResult));
        return $tabResult;
    }

    public function findPoleSuivant($ordreActuel, $idd) {
        $query = $this->createQueryBuilder('dc')
            ->leftJoin('dc.dossierDemande', 'd')->addSelect('d')
            ->where('dc.ordre > :idO')
            ->andWhere('d.id=:idd')
            ->setMaxResults(1)
            ->setParameters(array('idO' => $ordreActuel, 'idd' => $idd))
            ->orderBy('dc.ordre');
        $infoPoleSuivant = $query->getQuery()->getResult();
        //die(dump($infoPoleSuivant));
        return $infoPoleSuivant;
    }

    //retrouve les poles suivants
    public function findPolesSuivants($ordre, $idd) {
        $query = $this->createQueryBuilder('dc')
            ->leftJoin('dc.dossierDemande', 'd')->addSelect('d')
            ->where('dc.ordre = :idO')
            ->andWhere('d.id=:idd')
            ->setParameters(array('idO' => $ordre, 'idd' => $idd));
        $infoPoleSuivant = $query->getQuery()->getResult();
        //die(dump($infoPoleSuivant));
        return $infoPoleSuivant;
    }
    public function findFirstPoleTraitant($idd) {
        $query = $this->createQueryBuilder('dc')
            ->leftJoin('dc.dossierDemande', 'd')->addSelect('d')
            ->where('d.id=:idd')->andWhere('dc.statutTraitement is null')
            ->setMaxResults(1)
            ->setParameters(array('idd' => $idd))
            ->orderBy('dc.ordre');
        $infoFirtPole = $query->getQuery()->getResult();
        return $infoFirtPole;
    }
    public function findFirstsPoles($idd) {
        $query = $this->createQueryBuilder('dc')
            ->leftJoin('dc.dossierDemande', 'd')->addSelect('d')
            ->where('dc.ordre=1')
            ->andWhere('d.id=:idd')
            ->setParameters(array('idd' => $idd));
        return $query->getQuery()->getResult();
    }
    public function findDossierEncours($user) {
        $query = $this->createQueryBuilder('d')
            ->where('d.pole =:pole and d.statutTraitement=1 and (d.utilisateur=:user or d.utilisateur is null)')
            ->setParameters(array('pole' => $user->getPole(), 'user' => $user));

        return $query->getQuery()->getResult();
    }
    public function findDossierEnAttenteImmatriculationDGA() {
        $query = $this->createQueryBuilder('d')
            ->where('d.pole =:pole and d.statutTraitement=1')
            ->setParameters(array('pole' =>1));
        return $query->getQuery()->getResult();
    }

    public function findDossierEnAttenteImmatriculationDGAWithParam($data, $idLangue, $idPole, $limit = null, $statut = null) {
        $query = $this->createQueryBuilder('dc')
            ->leftJoin('dc.dossierDemande', 'd')->addSelect('d')
            ->leftJoin('dc.pole', 'p')->addSelect('p')
            ->andWhere('dc.statutTraitement is not null')
            ->andWhere('dc.utilisateur is null')
            ->andWhere('p.id=:idp')->setParameters(array('idp' => $idPole));
        if (!empty($data)) {
            if ($data['numeroDossier'] != '') {
                $query->andWhere('LOWER(d.numeroDossier) = :numeroDossier')
                    ->setParameter('numeroDossier', $data['numeroDossier']);
            }
            if ($data['denominationSociale'] != '') {
                $query->andWhere('LOWER(d.denominationSociale) like :denominationSociale')
                    ->setParameter('denominationSociale', '%' . $data['denominationSociale'] . '%');
            }
            if ($data['dateCreationDebut'] != '') {
                $query->andWhere('DATE_DIFF(dc.dateSoumission,:dateCreationDebut)>=0')
                    ->setParameter('dateCreationDebut', new DateTime($data['dateCreationDebut']));
            }
            if ($data['dateCreationFin'] != '') {
                $query->andWhere('DATE_DIFF(dc.dateSoumission,:dateCreationFin)<=0')
                    ->setParameter('dateCreationFin', new DateTime($data['dateCreationFin']));
            }
            if ($data['formeJuridique'] != '') {
                $query->andWhere('d.formeJuridique = :formeJuridique')
                    ->setParameter('formeJuridique', $data['formeJuridique']);
            }
            if ($data['typeDossier'] != '') {
                $query->andWhere('d.typeDossier = :typeDossier')
                    ->setParameter('typeDossier', $data['typeDossier']);
            }
            if ($data['entreprise'] != '') {
                $query->leftJoin('d.utilisateur', 'u')->andWhere('u.entreprise=:idE')
                    ->setParameter('idE', $data['entreprise']);
            }
        }

        if ($statut) {
            $query->andWhere('dc.statutTraitement = :st')
                ->setParameter('st', $statut);
        }
        if ($statut && $statut == 2) {
            if ($data['dateDelivranceDebut'] != '') {

                $query->andWhere('DATE_DIFF(dc.dateDelivrance,:dateDelivranceDebut)>=0')
                    ->setParameter('dateDelivranceDebut', new DateTime($data['dateDelivranceDebut']));
            }

            if ($data['dateDelivranceFin'] != '') {
                $query->andWhere('DATE_DIFF(dc.dateDelivrance,:dateDelivranceFin)<=0')
                    ->setParameter('dateDelivranceFin', new DateTime($data['dateDelivranceFin']));
                //die(dump($data['dateDelivranceFin']));
            }
        }
        if ($statut && $statut1 = 1) {
            $query->orderBy('dc.dateDelivrance', 'desc');
        }
        else {

            $query->orderBy('dc.dateSoumission', 'desc');
        }
        if ($limit) {
            $query->setMaxResults($limit);
        }
        $query->orderBy('dc.dateSoumission', 'desc');
        $results = $query->getQuery()->getResult();

        $tabResult = array();
        $i = 0;
        foreach ($results as $result) {
            $tabResult[$i]['numeroDossier'] = $result->getDossierDemande()->getNumeroDossier();
            $tabResult[$i]['denominationSociale'] = $result->getDossierDemande()->getDenominationSociale();
            $tabResult[$i]['nomCommercial'] = $result->getDossierDemande()->getNomCommercial();
            $tabResult[$i]['enseigne'] = $result->getDossierDemande()->getEnseigne();
            $tabResult[$i]['telephone'] = $result->getDossierDemande()->getTelephone();
            $tabResult[$i]['email'] = $result->getDossierDemande()->getEmail();
            //$tabResult[$i]['fax'] = $result->getDossierDemande()->getFax();
            $tabResult[$i]['region'] = $result->getDossierDemande()->getRegion();
            $tabResult[$i]['dateCreation'] = $result->getDossierDemande()->getDateCreation();
            $tabResult[$i]['orange'] = $result->isOrangePole();
            $tabResult[$i]['red'] = $result->isRedPole();
            $tabResult[$i]['dateSoumission'] = $result->getDateSoumission();
            $tabResult[$i]['dateDelivrance'] = $result->getDateDelivrance();
            $tabResult[$i]['duree'] = $result->getDuree();
            $tabResult[$i]['motif'] = $result->getMotif();
            $tabResult[$i]['id'] = $result->getDossierDemande()->getId();

            $formJ = $result->getDossierDemande()->getFormeJuridique();
            $idf = $formJ->getId();
            $tabResult[$i]['idFormeJ'] = $idf;
            $formJTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:FormeJuridiqueTraduction')->getLibelleFormeJuridiqueByLanque($idLangue, $idf);
            ($formJTrad) ? $tabResult[$i]['libelleFormeJ'] = $formJTrad->getLibelle() : $tabResult[$i]['libelleFormeJ'] = "";
            $idTyp = $result->getDossierDemande()->getTypeOperation()->getId();
            $tabResult[$i]['idTypeOp'] = $idTyp;
            $typDossier = $result->getDossierDemande()->getTypeDossier()->getLibelle();
            $tabResult[$i]['typDossier'] = $typDossier;
            $typeOpTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:TypeOperationTraduction')->getLibelleOperationByLanque($idLangue, $idTyp);
            ($typeOpTrad) ? $tabResult[$i]['libelleTypeOp'] = $typeOpTrad->getLibelle() : $tabResult[$i]['libelleTypeOp'] = "";

            $statutTraitement = $result->getStatutTraitement();
            $tabResult[$i]['idStatutTraitement'] = $statutTraitement->getId();
            $statutTraitementTraduction = $this->getEntityManager()->getRepository('BanquemondialeBundle:StatutTraitementTraduction')->getLibelleStatutTraitementByLangue($idLangue, $statutTraitement);
            ($statutTraitementTraduction) ? $tabResult[$i]['libelleStatutTraitement'] = $statutTraitementTraduction->getLibelle() : $tabResult[$i]['libelleStatutTraitement'] = "";

            $formJGerant = $this->getEntityManager()->getRepository('BanquemondialeBundle:Representant')->findOneByDossierDemande($result->getDossierDemande());
            $tabResult[$i]['gerant'] = ($formJGerant) ? $formJGerant->getPrenom() . ' ' . $formJGerant->getNom() : "";
            $verifDoss = true;
            if ($data['gerant'] != '') {
                //die(dump($data['gerant']));
                if (stripos($tabResult[$i]['gerant'], $data['gerant']) === false) {
                    unset($tabResult[$i]);
                    $i--;
                }
            }
            $UserSaisi = $result->getDossierDemande()->getUtilisateur();

            $tabResult[$i]['agentSaisi'] = ($UserSaisi) ? $UserSaisi->getPrenom() . ' ' . $UserSaisi->getNom() : "";
            $entreprise = ($UserSaisi) ? $UserSaisi->getEntreprise() : "";
            $tabResult[$i]['structure'] = ($UserSaisi && $entreprise != "") ? $UserSaisi->getEntreprise()->getDenomination() : "";
            $em = $this->getEntityManager();
            $numeroNif = "";
            $numeroAguipe = "";
            $numeroCnss = "";
            $rccm = $em->getRepository('BanquemondialeBundle:Rccm')->findOneBy(array('dossierDemande' => $result->getDossierDemande()->getId()));
            $numeroRccm = ($rccm) ? $rccm->getNumRccmFormalite() : "";
            if ($statut && $statut == 2) {
                $pole = $em->getRepository('ParametrageBundle:pole')->find($idPole);
                if ($pole && $pole->getSigle() == 'BNI') {
                    $nif = $em->getRepository('BanquemondialeBundle:Nif')->findOneBy(array('dossierDemande' => $result->getDossierDemande()->getId()));
                    $numeroNif = ($nif) ? $nif->getNumeroIdentificationFiscale() : "";
                }
                if ($pole && $pole->getSigle() == 'CNSS') {
                    $cnss = $em->getRepository('BanquemondialeBundle:ComplementCnss')->findOneBy(array('dossierDemande' => $result->getDossierDemande()->getId()));
                    $numeroCnss = ($cnss) ? $cnss->getNumeroEmployeur() : "";
                }
                if ($pole && $pole->getSigle() == 'AGUIPE') {
                    $aguipe = $em->getRepository('BanquemondialeBundle:Aguipe')->findOneBy(array('dossierDemande' => $result->getDossierDemande()->getId()));
                    $numeroAguipe = ($aguipe) ? $aguipe->getNumeroImmatriculation() . '/AGUIPE/' . $result->getDateDelivrance()->format('Y') : "";
                }
            }
            $tabResult[$i]['numeroRccm'] = $numeroRccm;
            $tabResult[$i]['numeroNif'] = $numeroNif;
            $tabResult[$i]['numeroAguipe'] = $numeroAguipe;
            $tabResult[$i]['numeroCnss'] = $numeroCnss;
            $i++;
        }
       // die(dump($tabResult));
        return $tabResult;
    }


    public function findDossierEnAttenteModificationDGA() {
        $query = $this->createQueryBuilder('d')
            ->where('d.pole =:pole and d.statutTraitement=3')
            ->setParameters(array('pole' =>1));
        return $query->getQuery()->getResult();
    }


    public function findDossierDelivre($user) {
        $query = $this->createQueryBuilder('d')
            ->join('d.statutTraitement', 's')
            ->where('d.pole =:pole and s.id=2')
            ->andWhere('d.utilisateur=:user or d.utilisateur is null')
            ->setParameters(array('pole' => $user->getPole(), 'user' => $user));
        return $query->getQuery()->getResult();
    }
    public function findDossierAnnonceurEncours($user) {

        $sqlQuery = "SELECT d.id
		FROM documentCollected dc 
        join pole p on dc.idPole = p.id 
        join dossierDemande d on dc.idDossierDemande = d.id 
        join rccm r on r.idDossierDemande = d.id 
        join typeDossier t on d.idTypeDossier = t.id 
        join formeJuridique fj on d.idformejuridique = fj.id
		left join formeJuridiqueTraduction fjt on fjt.idFormeJuridique = fj.id
		left join secteurActivite sa on sa.id = d.idSecteurActivite
		left join secteurActivite sas on sas.id = d.idActiviteSecondaire
		left join secteurActivite sas2 on sas2.id = d.idActiviteSecondaire2
		where dc.idStatutTraitement = 1 and fjt.idLangue = 1 and p.sigle = 'AL' and d.idTypeDossier in (1,2,3,4)";

        $parameters = null;

        $stmt = $this->getEntityManager()->getConnection()->prepare($sqlQuery);
        $stmt->execute($parameters);
        $results = $stmt->fetchAll();

        //die(dump($results));
        return $results;
    }
    public function findDossierAnnonceurDelivre($user) {
        $sqlQuery = "SELECT d.id
		FROM documentCollected dc 
        join pole p on dc.idPole = p.id 
        join dossierDemande d on dc.idDossierDemande = d.id 
        join rccm r on r.idDossierDemande = d.id 
        join typeDossier t on d.idTypeDossier = t.id 
        join formeJuridique fj on d.idformejuridique = fj.id
		left join formeJuridiqueTraduction fjt on fjt.idFormeJuridique = fj.id
		left join secteurActivite sa on sa.id = d.idSecteurActivite
		left join secteurActivite sas on sas.id = d.idActiviteSecondaire
		left join secteurActivite sas2 on sas2.id = d.idActiviteSecondaire2
		where dc.idStatutTraitement = 2 and fjt.idLangue = 1 and p.sigle = 'AL' and d.idTypeDossier in (1,2,3,4)";

        $parameters = null;

        $stmt = $this->getEntityManager()->getConnection()->prepare($sqlQuery);
        $stmt->execute($parameters);
        $results = $stmt->fetchAll();

        return $results;
    }
    public function findDossierDelivreRetrait($user) {
        $query = $this->createQueryBuilder('d')
            ->join('d.statutTraitement', 's')
            ->where('s.id=2');
        return $query->getQuery()->getResult();
    }
    public function findDossierNotDelivreRetrait($idDoss) {
        $query = $this->createQueryBuilder('d')
            ->leftJoin('d.statutTraitement', 's')
            ->leftJoin('d.pole', 'p')
            ->leftJoin('d.dossierDemande', 'dd')
            ->andwhere('s.id!=2')
            ->andwhere('dd.id=:idDoss')
            ->andWhere('p.id != 4')
            ->setParameters(array('idDoss' => $idDoss));
        return $query->getQuery()->getResult();
    }

    public function findDossierModifie($user) {
        $query = $this->createQueryBuilder('d')
            ->where('d.pole =:pole and d.statutTraitement=3 and (d.utilisateur=:user or d.utilisateur is null)')
            ->setParameters(array('pole' => $user->getPole(), 'user' => $user));
        return $query->getQuery()->getResult();
    }

    public function getListePoleCocher($idd) {
        $query = $this->createQueryBuilder('dc')
            ->leftJoin('dc.dossierDemande', 'dd')
            ->andWhere('dd.id=:idd')
            ->setParameters(array('idd' => $idd));

        $results = $query->getQuery()->getResult();
        //->addSelect('c')->addSelect('dd')->addSelect('p')   
//die(dump($results));
        $tabResult = array();
        $i = 0;
        foreach ($results as $result) {
            $tabResult[$i]['idPole'] = $result->getPole()->getId();
            $tabResult[$i]['ordre'] = $result->getOrdre();
            $tabResult[$i]['cocher'] = true;
            $i++;
        }
        return $tabResult;
    }

    public function getListReglesByLanque($idLangue) {
        // die(dump($datedebut));         
        $sqlQuery = 'SELECT r.id,r.commissaireRequis as commissairerequis,r.idFormeJuridique,j.sigle,j.libelle,j.idLangue FROM regle r join formeJuridique f on r.idformejuridique = f.id join formeJuridiqueTraduction j on j.idFormeJuridique = f.id where j.idLangue = ' . $idLangue;


        $stmt = $this->getEntityManager()->getConnection()->prepare($sqlQuery);
        $stmt->execute();

        //die(dump($stmt));

        $results = $stmt->fetchAll();

        //die(dump($results));

        return $results;
    }

    public function findDossierAnnonceur($user, $data, $idLangue, $idPole, $limit = null, $statut = null) {

        // die(dump($idLangue));
        $parameters = array('idLangue' => $idLangue, 'idPole' => $idPole);
        $sqlQuery = 'SELECT d.id as idDossierDemande, dc.id as idDocumentCollected, fj.sigle as sigleFormeJuridique, d.numeroDossier, d.denominationSociale, 
		t.libelle as libelleTypeDossier, r.numRccmFormalite, r.numRccmEntreprise, r.date as dateRccm, fjt.libelle as libelleFormeJuridique, 
		dc.dateSoumission, d.sigle, d.adresseSiege, d.telephone as telephoneEntreprise, d.capitalSocial, d.duree, sa.code as secteurActivite,
		sas.code as secteurActiviteSecondaire, sas2.code as secteurActiviteSecondaire2,d.activiteSociale  
		FROM documentCollected dc join pole p on dc.idPole = p.id join dossierDemande 
		d on dc.idDossierDemande = d.id join rccm r on r.idDossierDemande = d.id join typeDossier t on d.idTypeDossier = t.id join formeJuridique fj on d.idformejuridique = fj.id
		join formeJuridiqueTraduction fjt on fjt.idFormeJuridique = fj.id
		left join secteurActivite sa on sa.id = d.idSecteurActivite
		left join secteurActivite sas on sas.id = d.idActiviteSecondaire
		left join secteurActivite sas2 on sas2.id = d.idActiviteSecondaire2
		where dc.idStatutTraitement = :statut and fjt.idLangue = :idLangue and dc.idPole = :idPole and d.idTypeDossier in (1,2,3,4)  ';

        $parameters['statut'] = $statut;


        if ($data['numeroDossier'] != '') {
            $sqlQuery = $sqlQuery . " and LOWER(d.numeroDossier) = :numeroDossier";
            $parameters['numeroDossier'] = strtolower($data['numeroDossier']);
        }

        if ($data['denominationSociale'] != '') {
            $sqlQuery = $sqlQuery . " and LOWER(d.denominationSociale) = :denominationSociale";
            $parameters['denominationSociale'] = strtolower($data['denominationSociale']);
        }

        if ($data['dateSoumissionDebut'] != '') {
            $dateSoumissionDebut = new DateTime($data['dateSoumissionDebut']);
            $sqlQuery = $sqlQuery . " and DATEDIFF(dc.dateSoumission,:dateSoumissionDebut)>=0";
            $parameters['dateSoumissionDebut'] = $dateSoumissionDebut->format('Y-m-d');
        }

        if ($data['dateSoumissionFin'] != '') {
            $dateSoumissionFin = new DateTime($data['dateSoumissionFin']);
            $sqlQuery = $sqlQuery . " and DATEDIFF(dc.dateSoumission,:dateSoumissionFin)<=0";
            $parameters['dateSoumissionFin'] = $dateSoumissionFin->format('Y-m-d');
        }

        if ($data['formeJuridique'] != '') {
            $sqlQuery = $sqlQuery . " and d.idFormeJuridique = :formeJuridique";
            $parameters['formeJuridique'] = $data['formeJuridique'];
        }

        if ($data['typeDossier'] != '') {
            $sqlQuery = $sqlQuery . " and d.idTypeDossier = :typeDossier";
            $parameters['typeDossier'] = $data['typeDossier'];
        }

        if ($data['numRccmFormalite'] != '') {
            $sqlQuery = $sqlQuery . " and LOWER(r.numRccmFormalite) = :numRccmFormalite";
            $parameters['numRccmFormalite'] = strtolower($data['numRccmFormalite']);
        }

        if ($data['numRccmEntreprise'] != '') {
            $sqlQuery = $sqlQuery . " and LOWER(r.numRccmEntreprise) = :numRccmEntreprise";
            $parameters['numRccmEntreprise'] = strtolower($data['numRccmEntreprise']);
        }

        $sqlQuery = $sqlQuery . " ORDER BY dc.dateSoumission ASC";

        if ($limit != null) {
            $sqlQuery = $sqlQuery . " LIMIT " . $limit;
        }

        $stmt = $this->getEntityManager()->getConnection()->prepare($sqlQuery);
        $stmt->execute($parameters);

        $results = $stmt->fetchAll();

        //return $results;
        //die(dump($results));

        $tabResult = array();
        $i = 0;
        foreach ($results as $result) {
            //die(dump($result));

            $tabResult[$i]['idDocumentCollected'] = $result['idDocumentCollected'];
            $tabResult[$i]['idDossierDemande'] = $result['idDossierDemande'];
            $tabResult[$i]['sigleFormeJuridique'] = $result['sigleFormeJuridique'];
            $tabResult[$i]['numeroDossier'] = $result['numeroDossier'];
            $tabResult[$i]['denominationSociale'] = $result['denominationSociale'];
            $tabResult[$i]['capitalSocial'] = $result['capitalSocial'];
            $tabResult[$i]['duree'] = $result['duree'];
            $tabResult[$i]['libelleTypeDossier'] = $result['libelleTypeDossier'];
            $tabResult[$i]['numRccmFormalite'] = $result['numRccmFormalite'];
            $tabResult[$i]['numRccmEntreprise'] = $result['numRccmEntreprise'];
            $tabResult[$i]['dateRccm'] = $result['dateRccm'];
            $tabResult[$i]['libelleFormeJuridique'] = $result['libelleFormeJuridique'];
            $tabResult[$i]['dateSoumission'] = $result['dateSoumission'];
            $tabResult[$i]['sigle'] = $result['sigle'];
            $tabResult[$i]['adresseSiege'] = $result['adresseSiege'];
            $tabResult[$i]['telephoneEntreprise'] = $result['telephoneEntreprise'];
            $tabResult[$i]['secteurActivite'] = $result['secteurActivite'];
            $tabResult[$i]['libelleSecteurActivite'] = $result['secteurActivite'];
            $tabResult[$i]['secteurActiviteSecondaire'] = $result['secteurActiviteSecondaire'];
            $tabResult[$i]['libelleActiviteSecondaire'] = $result['secteurActiviteSecondaire'];
            $tabResult[$i]['libelleActiviteSecondaire2'] = $result['secteurActiviteSecondaire2'];
            $tabResult[$i]['activiteSociale'] = $result['activiteSociale'];
            $tabResult[$i]['detailsActivite'] = $result['activiteSociale'];

            $gerants = $this->getEntityManager()->getRepository('BanquemondialeBundle:Representant')->getRepresentantByDossierDemande($result['idDossierDemande'], $idLangue);

            $tabGerant = [];
            $gerantTemp = [];
            for ($j = 0; $j < count($gerants); $j++) {

                $gerant = $gerants[$j];

                $gerantTemp['gerant'] = $gerant['nom'] . ' ' . $gerant['prenom'];
                $gerantTemp['dateNaissanceGerant'] = $gerant['dateDeNaissance'];
                $gerantTemp['lieuNaissanceGerant'] = $gerant['LieuNaissance'];
                $gerantTemp['paysGerant'] = $gerant['nationalite'];
                $gerantTemp['fonctionGerant'] = $gerant['libelleFonction'];
                $gerantTemp['adresseGerant'] = $gerant['adresse'];
                $gerantTemp['villeGerant'] = $gerant['ville'];
                $gerantTemp['telephoneGerant'] = $gerant['telephone'];
                $gerantTemp['portableGerant'] = $gerant['portable'];
                $gerantTemp['genreGerant'] = $gerant['genre'];

                array_push($tabGerant, $gerantTemp);
            }
            $tabResult[$i]['gerants'] = $tabGerant;

            $i++;
        }
        //die(dump($tabResult));
        return $tabResult;
    }

    public function findAnnonceLegale($idd, $idLangue = 1) {

        // die(dump($idLangue));
        $parameters = array('idDossier' => $idd, 'idLangue' => $idLangue);
        $sqlQuery = 'SELECT d.id as idDossierDemande, fj.sigle as sigleFormeJuridique, d.numeroDossier, d.denominationSociale, 
		t.libelle as libelleTypeDossier, r.numRccmFormalite, r.numRccmEntreprise, r.date as dateRccm, fjt.libelle as libelleFormeJuridique, 
		dc.dateSoumission, d.sigle, d.adresseSiege, d.telephone as telephoneEntreprise, d.capitalSocial, d.duree, sa.code as secteurActivite,
		sas.code as secteurActiviteSecondaire, d.activiteSociale  
		FROM documentCollected dc join pole p on dc.idPole = p.id join dossierDemande 
		d on dc.idDossierDemande = d.id join rccm r on r.idDossierDemande = d.id join typeDossier t on d.idTypeDossier = t.id join formeJuridique fj on d.idformejuridique = fj.id
		join formeJuridiqueTraduction fjt on fjt.idFormeJuridique = fj.id
		left join secteurActivite sa on sa.id = d.idSecteurActivite
		left join secteurActivite sas on sas.id = d.idActiviteSecondaire
		where dc.idStatutTraitement is not null and fjt.idLangue =:idLangue and d.id =:idDossier   
        group by d.id , fj.sigle , d.numeroDossier, d.denominationSociale, 
		t.libelle, r.numRccmFormalite, r.numRccmEntreprise, r.date, fjt.libelle, 
		d.sigle, d.adresseSiege, d.telephone, d.capitalSocial, d.duree, sa.code,
		sas.code, d.activiteSociale  ';

        $stmt = $this->getEntityManager()->getConnection()->prepare($sqlQuery);
        $stmt->execute($parameters);

        $results = $stmt->fetchAll();

        //return $results;
        //die(dump($results));

        $tabResult = array();
        $i = 0;
        foreach ($results as $result) {
            //die(dump($result));

            $tabResult[$i]['idDossierDemande'] = $result['idDossierDemande'];
            $tabResult[$i]['sigleFormeJuridique'] = $result['sigleFormeJuridique'];
            $tabResult[$i]['numeroDossier'] = $result['numeroDossier'];
            $tabResult[$i]['denominationSociale'] = $result['denominationSociale'];
            $tabResult[$i]['capitalSocial'] = $result['capitalSocial'];
            $tabResult[$i]['duree'] = $result['duree'];
            $tabResult[$i]['libelleTypeDossier'] = $result['libelleTypeDossier'];
            $tabResult[$i]['numRccmFormalite'] = $result['numRccmFormalite'];
            $tabResult[$i]['numRccmEntreprise'] = $result['numRccmEntreprise'];
            $tabResult[$i]['dateRccm'] = $result['dateRccm'];
            $tabResult[$i]['libelleFormeJuridique'] = $result['libelleFormeJuridique'];
            $tabResult[$i]['dateSoumission'] = $result['dateSoumission'];
            $tabResult[$i]['sigle'] = $result['sigle'];
            $tabResult[$i]['adresseSiege'] = $result['adresseSiege'];
            $tabResult[$i]['telephoneEntreprise'] = $result['telephoneEntreprise'];
            $tabResult[$i]['secteurActivite'] = $result['secteurActivite'];
            $tabResult[$i]['secteurActiviteSecondaire'] = $result['secteurActiviteSecondaire'];
            $tabResult[$i]['activiteSociale'] = $result['activiteSociale'];

            $gerants = $this->getEntityManager()->getRepository('BanquemondialeBundle:Representant')->getRepresentantByDossierDemande($result['idDossierDemande'], $idLangue);
            $gerant = $gerants[0];
            //die(dump($gerant));
            $tabResult[$i]['gerant'] = $gerant['nom'] . ' ' . $gerant['prenom'];
            $tabResult[$i]['dateNaissanceGerant'] = $gerant['dateDeNaissance'];
            $tabResult[$i]['lieuNaissanceGerant'] = $gerant['LieuNaissance'];
            $tabResult[$i]['paysGerant'] = $gerant['nationalite'];
            $tabResult[$i]['fonctionGerant'] = $gerant['libelleFonction'];
            $tabResult[$i]['adresseGerant'] = $gerant['adresse'];
            $tabResult[$i]['villeGerant'] = $gerant['ville'];
            $tabResult[$i]['telephoneGerant'] = $gerant['telephone'];
            $tabResult[$i]['portableGerant'] = $gerant['portable'];
            $tabResult[$i]['codeCivilite'] = $gerant['codeCivilite'];

            $i++;
        }
        //die(dump($tabResult));
        return $tabResult;
    }

    public function findDocumentMemeOrdre($ordre, $dossierDemande, $statutEncours) {
        $query = $this->createQueryBuilder('d')
            ->join('d.statutTraitement', 's')
            ->join('d.pole', 'p')
            ->where('s.id=1')
            ->andWhere('d.dossierDemande = :dossierDemande')
            ->andWhere('d.ordre = :ordre')
            ->andWhere('p.id != 4')
            ->setParameters(array('dossierDemande' => $dossierDemande, 'ordre' => $ordre));
        return $query->getQuery()->getResult();
    }

    public function dossierDelivreGreffe($denominationSociale) {
        $query = $this->createQueryBuilder('dd')
            ->select('dd,dc')
            ->join('dc.dossierDemande', 'dd')
            ->where('dc.statutTraitement=2')
            ->andWhere('dd.denominationSociale like :denominationSociale')
            ->setParameters(array('denominationSociale', '%' . $denominationSociale . '%'));

        $results = $query->getQuery()->getResult();

        return $results;
    }

    public function nomCommercialExiste($denominationSociale) {
        $query = $this->createQueryBuilder('dc')
            ->join('dc.dossierDemande', 'dd')
            ->join('dc.pole', 'p')
            ->where('dc.statutTraitement=2')
            ->andWhere('p.sigle = :sigle')
            ->andWhere('lower(dd.denominationSociale) = lower(:denominationSociale)')
            ->setParameters(array('denominationSociale' => $denominationSociale, 'sigle' => 'GF'));

        $results = $query->getQuery()->getResult();
//die(dump($results));
        return $results;
    }

    public function findAnnonceLegaleByParametres($data, $idLangue, $limit = null) {
        // die(dump($datedebut));         
        $sqlQuery = 'SELECT  dd.id, dd.idFormeJuridique, dd.idTypeDossier, dd.denominationSociale, dd.capitalSocial, dd.apportNumeraire, dd.adresseSiege, 
		dd.idSecteurActivite, dd.idActiviteSecondaire, dd.idActiviteSecondaire2, dd.activiteSociale, dd.duree, r.numRccmFormalite, r.numRccmEntreprise, 
		r.date, td.libelle, e.denomination, e.adresse, e.telephone, e.email, ni.numeroIdentificationFiscale, dd.telephone as telephoneEntreprise
		FROM `documentcollected` dc join dossierDemande dd on dc.idDossierDemande = dd.id 
		join typeDossier td on dd.idTypeDossier = td.id 
		join pole p on dc.idPole = p.id 		
		join fos_user u on dd.idUtilisateur = u.id 
		join entreprise e on u.entreprise_id = e.id
		join rccm r on r.idDossierDemande = dd.id 
		left join nif ni on ni.idDossierDemande = dd.id 
		WHERE upper(p.sigle) = upper("GF") and dc.idStatutTraitement = 2 ';
        $parameters = null;

        if (isset($data['id']) and $data['id'] != '') {
            $sqlQuery = $sqlQuery . " and dd.id = :id";
            $parameters['id'] = $data['id'];
        }

        if (isset($data['denominationSociale']) and $data['denominationSociale'] != '') {
            $sqlQuery = $sqlQuery . " and LOWER(dd.denominationSociale) = :denominationSociale";
            $parameters['denominationSociale'] = strtolower($data['denominationSociale']);
        }


        if (isset($data['formeJuridique']) and $data['formeJuridique'] != '') {
            $sqlQuery = $sqlQuery . " and LOWER(dd.idFormeJuridique) = :formeJuridique";
            $parameters['formeJuridique'] = strtolower($data['formeJuridique']);
        }

        if (isset($data['numRccmEntreprise']) and $data['numRccmEntreprise'] != '') {
            //die(dump($data['numRccmEntreprise'].' '.strtolower($data['numRccmEntreprise'])));
            $sqlQuery = $sqlQuery . " and LOWER(r.numRccmEntreprise) = :numRccmEntreprise";
            $parameters['numRccmEntreprise'] = strtolower($data['numRccmEntreprise']);
        }

        if (isset($data['dateCreationDebut']) and $data['dateCreationDebut'] != '') {
            $dateCreationDebut = new DateTime($data['dateCreationDebut']);
            $sqlQuery = $sqlQuery . " and DATEDIFF(r.date,:dateCreationDebut)>=0";
            $parameters['dateCreationDebut'] = $dateCreationDebut->format('Y-m-d');
        }

        if (isset($data['dateCreationFin']) and $data['dateCreationFin'] != '') {
            $dateCreationFin = new DateTime($data['dateCreationFin']);
            $sqlQuery = $sqlQuery . " and DATEDIFF(r.date,:dateCreationFin)<=0";
            $parameters['dateCreationFin'] = $dateCreationFin->format('Y-m-d');
        }

        //die(dump($data['numRccmEntreprise']));	

        $sqlQuery = $sqlQuery . " ORDER BY dd.id DESC ";

        if ($limit != null) {
            $sqlQuery = $sqlQuery . " LIMIT " . $limit;
        }

        $stmt = $this->getEntityManager()->getConnection()->prepare($sqlQuery);
        $stmt->execute($parameters);

        //die(dump($stmt));

        $results = $stmt->fetchAll();

        //die(dump($results));
        //die(dump(count($results)));
        $tabResult = array();
        $i = 0;
        foreach ($results as $result) {
            $tabResult[$i]['id'] = $result['id'];
            $idf = $result['idFormeJuridique'];
            $tabResult[$i]['idFormeJuridique'] = $idf;
            $formeJuridique = $this->getEntityManager()->getRepository('BanquemondialeBundle:FormeJuridique')->find($idf);
            $tabResult[$i]['sigleFormeJuridique'] = $formeJuridique->getSigle();
            $formJTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:FormeJuridiqueTraduction')->getLibelleFormeJuridiqueByLanque($idLangue, $idf);
            ($formJTrad) ? $tabResult[$i]['libelleFormeJuridique'] = $formJTrad->getLibelle() : $tabResult[$i]['libelleFormeJ'] = "";
            $tabResult[$i]['libelleTypeDossier'] = $result['libelle'];
            $tabResult[$i]['denominationSociale'] = $result['denominationSociale'];
            $tabResult[$i]['capitalSocial'] = $result['capitalSocial'];
            $tabResult[$i]['apportNumeraire'] = $result['apportNumeraire'];
            $tabResult[$i]['adresseSiege'] = $result['adresseSiege'];

            $secteurActiviteTraduction = $this->getEntityManager()->getRepository('ParametrageBundle:SecteurActiviteTraduction')->findOneBy(array('secteurActivite' => $result['idSecteurActivite'], 'langue' => $idLangue));
            ($secteurActiviteTraduction) ? $tabResult[$i]['libelleSecteurActivite'] = $secteurActiviteTraduction->getLibelle() : $tabResult[$i]['libelleSecteurActivite'] = "";

            $activiteSecondaireTraduction = $this->getEntityManager()->getRepository('ParametrageBundle:SecteurActiviteTraduction')->findOneBy(array('secteurActivite' => $result['idActiviteSecondaire'], 'langue' => $idLangue));
            ($activiteSecondaireTraduction) ? $tabResult[$i]['libelleActiviteSecondaire'] = $activiteSecondaireTraduction->getLibelle() : $tabResult[$i]['libelleActiviteSecondaire'] = "";

            $activiteSecondaire2Traduction = $this->getEntityManager()->getRepository('ParametrageBundle:SecteurActiviteTraduction')->findOneBy(array('secteurActivite' => $result['idActiviteSecondaire2'], 'langue' => $idLangue));
            ($activiteSecondaire2Traduction) ? $tabResult[$i]['libelleActiviteSecondaire2'] = $activiteSecondaire2Traduction->getLibelle() : $tabResult[$i]['libelleActiviteSecondaire2'] = "";

            $tabResult[$i]['detailsActivite'] = $result['activiteSociale'];
            $tabResult[$i]['duree'] = $result['duree'];
            $tabResult[$i]['numRccmFormalite'] = $result['numRccmFormalite'];
            $tabResult[$i]['numRccmEntreprise'] = $result['numRccmEntreprise'];
            $tabResult[$i]['dateRccm'] = $result['date'];
            $tabResult[$i]['nif'] = $result['numeroIdentificationFiscale'];
            $tabResult[$i]['denominationCabinet'] = $result['denomination'];
            $tabResult[$i]['adresseCabinet'] = $result['adresse'];
            $tabResult[$i]['telephoneCabinet'] = $result['telephone'];
            $tabResult[$i]['emailCabinet'] = $result['email'];

            $tabResult[$i]['telephoneEntreprise'] = $result['telephoneEntreprise'];

            $gerants = $this->getEntityManager()->getRepository('BanquemondialeBundle:Representant')->getRepresentantByDossierDemande($result['id'], $idLangue);
            $tabGerant = [];
            $gerantTemp = [];
            for ($j = 0; $j < count($gerants); $j++) {

                $gerant = $gerants[$j];

                $gerantTemp['gerant'] = $gerant['nom'] . ' ' . $gerant['prenom'];
                $gerantTemp['dateNaissanceGerant'] = $gerant['dateDeNaissance'];
                $gerantTemp['lieuNaissanceGerant'] = $gerant['LieuNaissance'];
                $gerantTemp['paysGerant'] = $gerant['nationalite'];
                $gerantTemp['fonctionGerant'] = $gerant['libelleFonction'];
                $gerantTemp['adresseGerant'] = $gerant['adresse'];
                $gerantTemp['villeGerant'] = $gerant['ville'];
                $gerantTemp['telephoneGerant'] = $gerant['telephone'];
                $gerantTemp['portableGerant'] = $gerant['portable'];
                $gerantTemp['genreGerant'] = $gerant['genre'];

                array_push($tabGerant, $gerantTemp);
            }
            $tabResult[$i]['gerants'] = $tabGerant;

            $i++;
        }
        //die(dump($tabResult));       
        return $tabResult;
    }

    public function search($data, $page = 0, $max = 10, $getResult = true, $idLangue) {
        $sqlQuery = 'SELECT dd.id, dd.idFormeJuridique, dd.idTypeDossier, dd.denominationSociale, dd.capitalSocial, dd.apportNumeraire, dd.adresseSiege, 
		dd.idSecteurActivite, dd.idActiviteSecondaire, dd.idActiviteSecondaire2, dd.activiteSociale, dd.duree, r.numRccmFormalite, r.numRccmEntreprise, 
		r.date, td.libelle, e.denomination, e.adresse, e.telephone, e.email, ni.numeroIdentificationFiscale, dd.telephone as telephoneEntreprise
		FROM `documentcollected` dc join dossierDemande dd on dc.idDossierDemande = dd.id 
		join typeDossier td on dd.idTypeDossier = td.id 
		join pole p on dc.idPole = p.id 		
		join fos_user u on dd.idUtilisateur = u.id 
		join entreprise e on u.entreprise_id = e.id
		join rccm r on r.idDossierDemande = dd.id 
		left outer join nif ni on ni.idDossierDemande = dd.id 
		WHERE upper(p.sigle) = upper("GF") and dc.idStatutTraitement = 2 ';
        $parameters = null;
        $qb = $this->createQueryBuilder('dd');

        $query = isset($data['query']) && $data['query'] ? $data['query'] : null;


        if (isset($data['id']) and $data['id'] != '') {
            $sqlQuery = $sqlQuery . " and dd.id = :id";
            $parameters['id'] = $data['id'];
        }
        if ($query) {
            $sqlQuery = $sqlQuery . " and dd.denominationSociale like :query";
            $parameters['query'] = "%" . $query . "%";
            //$qb->setMaxResults($max)->setFirstResult($page * $max); 
        }

        if ($max) {
            //$preparedQuery = $qb->getQuery()->setMaxResults($max)->setFirstResult($page * $max); 
            $sqlQuery = $sqlQuery . " limit " . $max . " offset " . $page * $max;
        }
        /* else { 
          $preparedQuery = $qb->getQuery();
          } */

        $stmt = $this->getEntityManager()->getConnection()->prepare($sqlQuery);
        $stmt->execute($parameters);


        $results = $stmt->fetchAll();

        $tabResult = array();
        $i = 0;
        foreach ($results as $result) {
            $tabResult[$i]['id'] = $result['id'];
            $idf = $result['idFormeJuridique'];
            $tabResult[$i]['idFormeJuridique'] = $idf;
            $formeJuridique = $this->getEntityManager()->getRepository('BanquemondialeBundle:FormeJuridique')->find($idf);
            $tabResult[$i]['sigleFormeJuridique'] = $formeJuridique->getSigle();
            $formJTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:FormeJuridiqueTraduction')->getLibelleFormeJuridiqueByLanque($idLangue, $idf);
            ($formJTrad) ? $tabResult[$i]['libelleFormeJuridique'] = $formJTrad->getLibelle() : $tabResult[$i]['libelleFormeJ'] = "";
            $tabResult[$i]['libelleTypeDossier'] = $result['libelle'];
            $tabResult[$i]['denominationSociale'] = $result['denominationSociale'];
            $tabResult[$i]['capitalSocial'] = $result['capitalSocial'];
            $tabResult[$i]['apportNumeraire'] = $result['apportNumeraire'];
            $tabResult[$i]['adresseSiege'] = $result['adresseSiege'];

            $secteurActiviteTraduction = $this->getEntityManager()->getRepository('ParametrageBundle:SecteurActiviteTraduction')->findOneBy(array('secteurActivite' => $result['idSecteurActivite'], 'langue' => $idLangue));
            ($secteurActiviteTraduction) ? $tabResult[$i]['libelleSecteurActivite'] = $secteurActiviteTraduction->getLibelle() : $tabResult[$i]['libelleSecteurActivite'] = "";

            $activiteSecondaireTraduction = $this->getEntityManager()->getRepository('ParametrageBundle:SecteurActiviteTraduction')->findOneBy(array('secteurActivite' => $result['idActiviteSecondaire'], 'langue' => $idLangue));
            ($activiteSecondaireTraduction) ? $tabResult[$i]['libelleActiviteSecondaire'] = $activiteSecondaireTraduction->getLibelle() : $tabResult[$i]['libelleActiviteSecondaire'] = "";

            $activiteSecondaire2Traduction = $this->getEntityManager()->getRepository('ParametrageBundle:SecteurActiviteTraduction')->findOneBy(array('secteurActivite' => $result['idActiviteSecondaire2'], 'langue' => $idLangue));
            ($activiteSecondaire2Traduction) ? $tabResult[$i]['libelleActiviteSecondaire2'] = $activiteSecondaire2Traduction->getLibelle() : $tabResult[$i]['libelleActiviteSecondaire2'] = "";

            $tabResult[$i]['detailsActivite'] = $result['activiteSociale'];
            $tabResult[$i]['duree'] = $result['duree'];
            $tabResult[$i]['numRccmFormalite'] = $result['numRccmFormalite'];
            $tabResult[$i]['numRccmEntreprise'] = $result['numRccmEntreprise'];
            $tabResult[$i]['dateRccm'] = $result['date'];
            $tabResult[$i]['nif'] = $result['numeroIdentificationFiscale'];
            $tabResult[$i]['denominationCabinet'] = $result['denomination'];
            $tabResult[$i]['adresseCabinet'] = $result['adresse'];
            $tabResult[$i]['telephoneCabinet'] = $result['telephone'];
            $tabResult[$i]['emailCabinet'] = $result['email'];

            $tabResult[$i]['telephoneEntreprise'] = $result['telephoneEntreprise'];

            $gerants = $this->getEntityManager()->getRepository('BanquemondialeBundle:Representant')->getRepresentantByDossierDemande($result['id'], $idLangue);
            $gerant = $gerants[0];

            $tabResult[$i]['gerant'] = $gerant['nom'] . ' ' . $gerant['prenom'];
            $tabResult[$i]['dateNaissanceGerant'] = $gerant['dateDeNaissance'];
            $tabResult[$i]['lieuNaissanceGerant'] = $gerant['LieuNaissance'];
            $tabResult[$i]['paysGerant'] = $gerant['nationalite'];
            $tabResult[$i]['fonctionGerant'] = $gerant['libelleFonction'];
            $tabResult[$i]['adresseGerant'] = $gerant['adresse'];
            $tabResult[$i]['villeGerant'] = $gerant['ville'];
            $tabResult[$i]['telephoneGerant'] = $gerant['telephone'];
            $tabResult[$i]['portableGerant'] = $gerant['portable'];


            $i++;
        }
        //die(dump($getResult));       
        return $getResult ? $tabResult : $stmt;


        //return $getResult?$results:$sqlQuery;
    }

    public function findAnnonceLegaleAnnonceurNotaire($user, $data, $idLangue, $idPole, $limit = null, $statut = null) {

        // die(dump($idLangue));
        $parameters = array('idLangue' => $idLangue, 'idPole' => $idPole);
        $sqlQuery = 'SELECT d.id as idDossierDemande, dc.id as idDocumentCollected, fj.sigle as sigleFormeJuridique, d.numeroDossier, d.denominationSociale, 
		t.libelle as libelleTypeDossier, r.numRccmFormalite, r.numRccmEntreprise, r.date as dateRccm, fjt.libelle as libelleFormeJuridique, 
		dc.dateSoumission, d.sigle, d.adresseSiege, d.telephone as telephoneEntreprise, d.capitalSocial, d.apportNumeraire, d.duree, sa.code as secteurActivite,
		sas.code as secteurActiviteSecondaire, sas2.code as secteurActiviteSecondaire2,d.activiteSociale,e.denomination, e.adresse, e.telephone, e.email  
		FROM documentCollected dc join pole p on dc.idPole = p.id join dossierDemande 
		d on dc.idDossierDemande = d.id join rccm r on r.idDossierDemande = d.id join typeDossier t on d.idTypeDossier = t.id join formeJuridique fj on d.idformejuridique = fj.id
		join formeJuridiqueTraduction fjt on fjt.idFormeJuridique = fj.id
		left join secteurActivite sa on sa.id = d.idSecteurActivite
		left join secteurActivite sas on sas.id = d.idActiviteSecondaire
		left join secteurActivite sas2 on sas2.id = d.idActiviteSecondaire2
		join fos_user u on d.idUtilisateur = u.id 
		join entreprise e on u.entreprise_id = e.id
		where dc.idStatutTraitement = :statut and fjt.idLangue = :idLangue and dc.idPole = :idPole and d.idTypeDossier in (1,2,3,4)  ';

        $parameters['statut'] = $statut;

        if ($data['numeroDossier'] != '') {
            $sqlQuery = $sqlQuery . " and LOWER(d.numeroDossier) = :numeroDossier";
            $parameters['numeroDossier'] = strtolower($data['numeroDossier']);
        }

        if ($data['denominationSociale'] != '') {
            $sqlQuery = $sqlQuery . " and LOWER(d.denominationSociale) = :denominationSociale";
            $parameters['denominationSociale'] = strtolower($data['denominationSociale']);
        }

        if ($data['dateSoumissionDebut'] != '') {
            $dateSoumissionDebut = new DateTime($data['dateSoumissionDebut']);
            $sqlQuery = $sqlQuery . " and DATEDIFF(dc.dateSoumission,:dateSoumissionDebut)>=0";
            $parameters['dateSoumissionDebut'] = $dateSoumissionDebut->format('Y-m-d');
        }

        if ($data['dateSoumissionFin'] != '') {
            $dateSoumissionFin = new DateTime($data['dateSoumissionFin']);
            $sqlQuery = $sqlQuery . " and DATEDIFF(dc.dateSoumission,:dateSoumissionFin)<=0";
            $parameters['dateSoumissionFin'] = $dateSoumissionFin->format('Y-m-d');
        }

        if ($data['formeJuridique'] != '') {
            $sqlQuery = $sqlQuery . " and d.idFormeJuridique = :formeJuridique";
            $parameters['formeJuridique'] = $data['formeJuridique'];
        }

        if ($data['typeDossier'] != '') {
            $sqlQuery = $sqlQuery . " and d.idTypeDossier = :typeDossier";
            $parameters['typeDossier'] = $data['typeDossier'];
        }

        if ($data['numRccmFormalite'] != '') {
            $sqlQuery = $sqlQuery . " and LOWER(r.numRccmFormalite) = :numRccmFormalite";
            $parameters['numRccmFormalite'] = strtolower($data['numRccmFormalite']);
        }

        if ($data['numRccmEntreprise'] != '') {
            $sqlQuery = $sqlQuery . " and LOWER(r.numRccmEntreprise) = :numRccmEntreprise";
            $parameters['numRccmEntreprise'] = strtolower($data['numRccmEntreprise']);
        }

        $sqlQuery = $sqlQuery . " ORDER BY dc.dateSoumission ASC";

        if ($limit != null) {
            $sqlQuery = $sqlQuery . " LIMIT " . $limit;
        }

        $stmt = $this->getEntityManager()->getConnection()->prepare($sqlQuery);
        $stmt->execute($parameters);

        $results = $stmt->fetchAll();

        //return $results;
        //die(dump($results));

        $tabResult = array();
        $i = 0;
        foreach ($results as $result) {
            //die(dump($result));


            $tabResult[$i]['id'] = $result['idDossierDemande'];

            $tabResult[$i]['libelleFormeJuridique'] = $result['libelleFormeJuridique'];
            $tabResult[$i]['libelleTypeDossier'] = $result['libelleTypeDossier'];
            $tabResult[$i]['denominationSociale'] = $result['denominationSociale'];
            $tabResult[$i]['capitalSocial'] = $result['capitalSocial'];
            $tabResult[$i]['apportNumeraire'] = $result['apportNumeraire'];
            $tabResult[$i]['adresseSiege'] = $result['adresseSiege'];
            $tabResult[$i]['sigleFormeJuridique'] = $result['sigleFormeJuridique'];

            $tabResult[$i]['libelleSecteurActivite'] = $result['secteurActivite'];
            $tabResult[$i]['libelleActiviteSecondaire'] = $result['secteurActiviteSecondaire'];
            $tabResult[$i]['libelleActiviteSecondaire2'] = $result['secteurActiviteSecondaire2'];

            $tabResult[$i]['detailsActivite'] = $result['activiteSociale'];
            $tabResult[$i]['duree'] = $result['duree'];
            $tabResult[$i]['numRccmFormalite'] = $result['numRccmFormalite'];
            $tabResult[$i]['numRccmEntreprise'] = $result['numRccmEntreprise'];
            $tabResult[$i]['dateRccm'] = $result['dateRccm'];
            $tabResult[$i]['nif'] = null;
            $tabResult[$i]['denominationCabinet'] = $result['denomination'];
            $tabResult[$i]['adresseCabinet'] = $result['adresse'];
            $tabResult[$i]['telephoneCabinet'] = $result['telephone'];
            $tabResult[$i]['emailCabinet'] = $result['email'];

            $tabResult[$i]['telephoneEntreprise'] = $result['telephoneEntreprise'];

            $gerants = $this->getEntityManager()->getRepository('BanquemondialeBundle:Representant')->getRepresentantByDossierDemande($result['idDossierDemande'], $idLangue);


            $tabGerant = [];
            $gerantTemp = [];
            for ($j = 0; $j < count($gerants); $j++) {

                $gerant = $gerants[$j];

                $gerantTemp['gerant'] = $gerant['nom'] . ' ' . $gerant['prenom'];
                $gerantTemp['dateNaissanceGerant'] = $gerant['dateDeNaissance'];
                $gerantTemp['lieuNaissanceGerant'] = $gerant['LieuNaissance'];
                $gerantTemp['paysGerant'] = $gerant['nationalite'];
                $gerantTemp['fonctionGerant'] = $gerant['libelleFonction'];
                $gerantTemp['adresseGerant'] = $gerant['adresse'];
                $gerantTemp['villeGerant'] = $gerant['ville'];
                $gerantTemp['telephoneGerant'] = $gerant['telephone'];
                $gerantTemp['portableGerant'] = $gerant['portable'];
                $gerantTemp['genreGerant'] = $gerant['genre'];

                array_push($tabGerant, $gerantTemp);
            }
            $tabResult[$i]['gerants'] = $tabGerant;


            $i++;
        }
        //die(dump($tabResult));
        return $tabResult;
    }

    public function getStatutPoleCaisse($idd) {
        $query = $this->createQueryBuilder('q')->join('q.pole', 'p');
        $query->where('p.sigle = :sgleCaisse')->andWhere('q.statutTraitement is null and q.dossierDemande= :idd')
            ->setParameter('d.d', $idd)->setParameters(array('sgleCaisse' => "CT", 'idd' => $idd))->getQuery()->getResult();
        $results = $query->getQuery()->getResult();
        //die(dump(''))
        return $results;
    }

    public function findDossierNotDelivreRetraitAll($idDoss) {
        $query = $this->createQueryBuilder('f')
            ->leftJoin('f.dossierDemande', 'd')
            ->leftJoin('f.statutTraitement', 's')
            ->leftJoin('f.pole', 'p')
            ->andwhere('s.id!=2')
            ->andwhere('p.sigle != :sgleAL')
            ->andwhere('d.id=:idDoss')
            ->setParameters(array('sgleAL' => "AL", 'idDoss' => $idDoss));
        return $query->getQuery()->getResult();
    }

    public function listeDossiersGroupByPole($statut, $dateDujour = null) {
        $strDujour = "";
        $parameters = array();
        $sqlRequete = "SELECT p.id as idpole,p.nom, (SELECT count(dc.idPole) FROM documentcollected dc where dc.idpole=p.id"
            . " and  dc.idStatutTraitement=:statut ";

        if ($dateDujour && $statut && $statut == 2) {
            $strDujour = " and DATEDIFF(dc.dateDelivrance,:dateDuJour)=0 ";
            $parameters['dateDuJour'] = $dateDujour->format('Y-m-d');
        }

        $sqlRequete = $sqlRequete . $strDujour . " ) as nbreDossier from pole p where p.isCreateur=false order by p.id";
//die(dump($sqlRequete));
        $parameters['statut'] = $statut;
        $stmt = $this->getEntityManager()->getConnection()->prepare($sqlRequete);
        $stmt->execute($parameters);
        $results = $stmt->fetchAll();
        return $results;
    }

    public function listeDossiersPoleByAntenne($statut, $isSiege, $idE, $dateDujour = null) {
        $strDujour = "";
        $sqlRequete = "SELECT p.id as idpole,p.nom, "
            . "(SELECT count(dc.idPole) FROM documentcollected dc";
        if (!$isSiege) {
            $sqlRequete = $sqlRequete . ' ,dossierdemande d,fos_user u '
                . 'where dc.idpole=p.id and d.id=dc.idDossierDemande and d.idUtilisateur=u.id and u.entreprise_id=:idE';
            $parameters['idE'] = $idE;
        } else {
            $sqlRequete = $sqlRequete . ' where dc.idpole=p.id ';
        }
        if ($dateDujour && $statut && $statut == 2) {
            $strDujour = " and DATEDIFF(dc.dateDelivrance,:dateDuJour)=0 ";
            $parameters['dateDuJour'] = $dateDujour->format('Y-m-d');
        }
        $sqlRequete = $sqlRequete . $strDujour . " and  dc.idStatutTraitement=:statut ) as nbreDossier "
            . "from pole p where p.isCreateur=false order by p.id";
        $parameters['statut'] = $statut;

        $stmt = $this->getEntityManager()->getConnection()->prepare($sqlRequete);
        $stmt->execute($parameters);
        $results = $stmt->fetchAll();
        return $results;
    }

    public function findListeDesEntrepriseForExportExcel($dateDebut, $dateFin, $langue, $limit = null) {
//->leftJoin('BanquemondialeBundle:SecteurActivite', 'act','with','act.dossierDemande=d.id')
        $qb = $this->createQueryBuilder('dc')
            ->join('dc.dossierDemande', 'd')
            ->join('dc.pole', 'p')
            ->join('d.formeJuridique', 'f')
            ->join('d.utilisateur', 'u')
            ->leftJoin('u.entreprise', 'e')
            ->leftJoin('ParametrageBundle:SecteurActiviteTraduction', 'act', 'with', 'd.secteurActivite=act.secteurActivite and act.langue=:idl')
            ->leftJoin('BanquemondialeBundle:Rccm', 'r', 'with', 'r.dossierDemande=d.id')
            ->leftJoin('BanquemondialeBundle:Aguipe', 'ag', 'with', 'ag.dossierDemande=d.id')
            ->leftJoin('BanquemondialeBundle:ComplementCnss', 'cn', 'with', 'cn.dossierDemande=d.id')
            ->leftJoin('BanquemondialeBundle:Nif', 'nif', 'with', 'nif.dossierDemande=d.id')
            ->leftJoin('BanquemondialeBundle:ActiviteAnterieure', 'actOld', 'with', 'actOld.dossierDemande=d.id')
            ->select('d.id as id,e.denomination as structure,r.numRccmFormalite as rccmFormalite,r.numRccmEntreprise rccmEntreprise,d.denominationSociale as denomination,d.dateCreation as dateDepot,d.dateCreation as dateSaisi'
                . ',dc.dateDelivrance dateDelivranceRccm,d.nomCommercial,d.activiteSociale,act.libelle as activitePrincipale,'
                . 'd.sigle,d.enseigne,d.dateDebut,d.activiteComplementaire,d.adresseSiege,f.id as idFormeJ,d.duree as duree,'
                . 'd.nombreSalariePrevu nbreEmploye,d.ville as localite,d.rccmSiege,d.apportNature as apportNature,d.apportNumeraire,'
                . 'd.capitalSocial,ag.nombreEmployePrevisionnel as nbreEmployePrevi,ag.numeroImmatriculation numeroAguipe,'
                . 'cn.numeroEmployeur,cn.categorie,cn.plafonne as plafond,cn.plancher,'
                . 'nif.numeroIdentificationFiscale as numeroNIF,d.enActivite,p.id as idPoleGreffe,'
                . 'actOld.id as existOld,actOld.natureActivite as natureActivite,actOld.dateDebut as debutPeriode'
                . ',actOld.dateFin as finPeriode,actOld.etablissementPrincipal,actOld.etablissementSecondaire,actOld.adresse as adresseOldEtab')
            ->where('p.sigle=:sgleGF')->andWhere('dc.statutTraitement=2')
            ->setParameters(array('sgleGF' => 'GF', 'idl' => $langue))
            ->orderBy('d.id', 'desc');

        if ($dateDebut != '') {
            $qb->andWhere('DATE_DIFF(dc.dateDelivrance,:dateCreationDebut)>=0')
                ->setParameter('dateCreationDebut', new DateTime($dateDebut));
        }

        if ($dateFin != '') {
            $qb->andWhere('DATE_DIFF(dc.dateDelivrance,:dateCreationFin)<=0')
                ->setParameter('dateCreationFin', new DateTime($dateFin));
        }

        $query = $qb->getQuery();
        if ($limit) {
            $query->setMaxResults($limit);
        }

        $results = $query->getResult();
        $tabResult = array();

        $i = 0;
        $em = $this->getEntityManager();
        foreach ($results as $result) {
            $idd = $result['id'];
            $tabResult[$i]['id'] = $result['id'];
            $tabResult[$i]['rccmFormalite'] = $result['rccmFormalite'];
            $tabResult[$i]['rccmEntreprise'] = $result['rccmEntreprise'];
            $tabResult[$i]['denomination'] = $result['denomination'];
            $tabResult[$i]['dateDelivranceRccm'] = $result['dateDelivranceRccm'];
//partie Ajout structure

            $tabResult[$i]['structure'] = $result['structure'];
            //fin
            $tabResult[$i]['dateDepot'] = $result['dateDepot'];
            $tabResult[$i]['dateSaisi'] = $result['dateSaisi'];
            $tabResult[$i]['nomCommercial'] = $result['nomCommercial'];
            $tabResult[$i]['capitalSocial'] = $result['capitalSocial'];
            $tabResult[$i]['dateDebut'] = $result['dateDebut'];
            $activitePrincipale = ($result['activitePrincipale']) ? $result['activitePrincipale'] : "";
            $tabResult[$i]['activiteExcerce'] = ($result['activiteSociale']) ? $activitePrincipale . ' - ' . $result['activiteSociale'] . $result['activiteComplementaire'] : $activitePrincipale;
            $tabResult[$i]['adresse'] = $result['adresseSiege'];
            $tabResult[$i]['sigle'] = $result['sigle'] ? $result['sigle'] : $result['enseigne'];

            $firstGerant = $em->getRepository('BanquemondialeBundle:Representant')->findOneBy(array('dossierDemande' => $idd));
            $tabResult[$i]['nomGerant'] = ($firstGerant) ? $firstGerant->getNom() : "";
            $tabResult[$i]['prenomGerant'] = ($firstGerant) ? $firstGerant->getPrenom() : "";
            $tabResult[$i]['dateNaissanceGerant'] = ($firstGerant) ? $firstGerant->getDateDeNaissance() : "";
            $tabResult[$i]['lieuNaissanceGerant'] = ($firstGerant) ? $firstGerant->getLieuNaissance() : "";
            //$tabResult[$i]['paysGerant'] = $firstGerant['nationalite'];  
            $tabResult[$i]['nationaliteGerant'] = "";
            if ($firstGerant->getPays()) {
                $nationalite = $em->getRepository('BanquemondialeBundle:PaysTraduction')->findOneBy(array('pays' => $firstGerant->getPays(), 'langue' => $langue));
                $tabResult[$i]['nationaliteGerant'] = ($nationalite) ? $nationalite->getNationalite() : "";
            }
            $tabResult[$i]['profession'] = "";
            if ($firstGerant->getFonction()) {
                $fonction = $em->getRepository('BanquemondialeBundle:FonctionTraduction')->findOneBy(array('fonction' => $firstGerant->getFonction(), 'langue' => $langue));
                $tabResult[$i]['profession'] = ($fonction) ? $fonction->getLibelle() : "";
            }

            $tabResult[$i]['genre'] = "";
            if ($firstGerant->getGenre()) {
                $genre = $em->getRepository('BanquemondialeBundle:GenreTraduction')->findOneBy(array('genre' => $firstGerant->getGenre(), 'langue' => $langue));
                $tabResult[$i]['genre'] = ($genre) ? $genre->getLibelle() : "";
            }

            $tabResult[$i]['adresseGerant'] = $firstGerant->getAdresse();
            $tabResult[$i]['villeGerant'] = $firstGerant->getVille();
            $tabResult[$i]['telephoneGerant'] = $firstGerant->getTelephone();
            $tabResult[$i]['portableGerant'] = $firstGerant->getPortable();
            $tabResult[$i]['emailGerant'] = $firstGerant->getEmail();
            $tabResult[$i]['sitMatrimonialeGerant'] = "";
            if ($firstGerant->getSituationMatrimoniale()) {
                $situation = $em->getRepository('BanquemondialeBundle:SituationMatrimonialeTraduction')->findOneBy(array('situationMatrimoniale' => $firstGerant->getSituationMatrimoniale(), 'langue' => $langue));
                $tabResult[$i]['sitMatrimonialeGerant'] = ($situation) ? $situation->getLibelle() : "";
            }

            $tabResult[$i]['nbreSalarie'] = $result['nbreEmploye'];
            $enactivite = "non";
            if ($result['enActivite']) {
                $enactivite = "oui";
            }
            $tabResult[$i]['enActivite'] = $enactivite;
            $idFormeJ = $result['idFormeJ'];
            $libelleFormeJ = $em->getRepository('BanquemondialeBundle:FormeJuridiqueTraduction')->findOneBy(array('formeJuridique' => $idFormeJ, 'langue' => $langue));
            $tabResult[$i]['formeJuridique'] = $libelleFormeJ;

            $poleAguipe = $em->getRepository('ParametrageBundle:Pole')->getPoleBySige("AGUIPE");
            $docAguipe = $em->getRepository('BanquemondialeBundle:DocumentCollected')->findOneBy(array('dossierDemande' => $idd, 'pole' => $poleAguipe->getId()));
            $dateDelivranceAguipe = ($docAguipe) ? $docAguipe->getDateDelivrance() : "";
            $tabResult[$i]['dateDelivranceAguipe'] = $dateDelivranceAguipe;

            $poleCNSS = $em->getRepository('ParametrageBundle:Pole')->getPoleBySige("CNSS");
            $docCnss = $em->getRepository('BanquemondialeBundle:DocumentCollected')->findOneBy(array('dossierDemande' => $idd, 'pole' => $poleCNSS->getId()));
            $dateDelivranceCnss = ($docCnss) ? $docCnss->getDateDelivrance() : "";
            $tabResult[$i]['dateDelivranceCnss'] = $dateDelivranceCnss;

            $tabResult[$i]['duree'] = $result['duree'];
            $tabResult[$i]['localite'] = $result['localite'];
            $tabResult[$i]['rccmSiege'] = $result['rccmSiege'] ? $result['rccmSiege'] : "";
            $tabResult[$i]['apportNumeraire'] = $result['apportNumeraire'] ? $result['apportNumeraire'] : "";
            $tabResult[$i]['apportNature'] = $result['apportNature'] ? $result['apportNature'] : "";


            $poleNIF = $em->getRepository('ParametrageBundle:Pole')->getPoleBySige("BNI");
            $docNif = $em->getRepository('BanquemondialeBundle:DocumentCollected')->findOneBy(array('dossierDemande' => $idd, 'pole' => $poleNIF->getId()));
            $dateDelivranceNif = ($docNif) ? $docNif->getDateDelivrance() : "";
            $tabResult[$i]['dateDelivranceNIF'] = $dateDelivranceNif;
            $tabResult[$i]['numeroNIF'] = $result['numeroNIF'] ? $result['numeroNIF'] : "";

            $tabResult[$i]['nbreEmployePrevi'] = $result['nbreEmployePrevi'];

            $tabResult[$i]['numeroEmployeur'] = ($result['numeroEmployeur']) ? $result['numeroEmployeur'] : "";
            $tabResult[$i]['categorie'] = ($result['categorie']) ? $result['categorie'] : "";
            $tabResult[$i]['plafond'] = ($result['plafond']) ? $result['plafond'] : "";
            $tabResult[$i]['plancher'] = ($result['plancher']) ? $result['plancher'] : "";
            $tabResult[$i]['existOld'] = ($result['existOld']) ? "oui" : "non";
            $tabResult[$i]['natureActivite'] = ($result['natureActivite'] ) ? $result['natureActivite'] : "";
            $tabResult[$i]['periode'] = ($result['debutPeriode'] && $result['finPeriode']) ? $result['debutPeriode'] . " Ã  " . $result['finPeriode'] : "";
            $tabResult[$i]['etablissementPrincipal'] = ($result['etablissementPrincipal']) ? $result['etablissementPrincipal'] : "";
            $tabResult[$i]['adresseOldEtab'] = ($result['adresseOldEtab']) ? $result['adresseOldEtab'] : "";


            $poleCaisse = $em->getRepository('ParametrageBundle:Pole')->getPoleBySige("CT");
            $docCaisse = $em->getRepository('BanquemondialeBundle:DocumentCollected')->findOneBy(array('dossierDemande' => $idd, 'pole' => $poleCaisse->getId()));
            $dateQuittance = ($docCaisse) ? $docCaisse->getDateDelivrance() : "";
            $tabResult[$i]['dateQuittance'] = $dateQuittance;

            $formulaireRccm = $em->getRepository('BanquemondialeBundle:FormulaireDelivre')->findOneBy(array('dossierDemande' => $idd, 'pole' => $result['idPoleGreffe']));
            $tabResult[$i]['dateRetrait'] = "";
            if ($formulaireRccm) {
                $tabResult[$i]['dateRetrait'] = ($formulaireRccm->getDateRetrait()) ? $formulaireRccm->getDateRetrait() : "";
            }
            $i++;
        }
        //die(dump($tabResult));

        return $tabResult;
    }

    public function findDocumentsNonRetires($idd) {

        $sqlQuery = "select p.nom, lfd.idPole, lfd.libelle, dc.idDossierDemande, dc.id from documentCollected dc 
		join libelleFormulaireDelivre lfd on lfd.idPole = dc.idPole
		join pole p on dc.idPole = p.id
		where dc.idDossierDemande  =:idd
		and dc.idPole not in (select fd2.idPole from formulaireDelivre fd2 where fd2.idDossierDemande =:idd) and dc.idPole != 4 ";
        $parameters['idd'] = $idd;

        $stmt = $this->getEntityManager()->getConnection()->prepare($sqlQuery);
        $stmt->execute($parameters);
        $results = $stmt->fetchAll();

        //die(dump($results));

        $tabResult = array();
        $i = 0;
        foreach ($results as $result) {

            $tabResult[$i]['nomPole'] = $result['nom'];
            $tabResult[$i]['libelleFormulaireDelivre'] = $result['libelle'];
            $i++;
        }
        //die(dump($tabResult));
        return $tabResult;
    }

    public function findDocumentsRetires($idd) {

        $sqlQuery = "select p.nom from formulaireDelivre fd 
		join pole p on fd.idPole = p.id
		where fd.idDossierDemande = :idd and p.sigle !='AL' and p.sigle != 'CT' and fd.estRetire  = 1";
        $parameters['idd'] = $idd;

        $stmt = $this->getEntityManager()->getConnection()->prepare($sqlQuery);
        $stmt->execute($parameters);
        $results = $stmt->fetchAll();

        //die(dump($results));

        $tabResult = array();
        $i = 0;
        foreach ($results as $result) {

            $tabResult[$i]['nomPole'] = $result['nom'];
            $i++;
        }
        //die(dump($tabResult));
        return $tabResult;
    }

    public function findDocumentsCreesNonRetires($idd) {

        $sqlQuery = "select p.nom, lfd.idPole, lfd.libelle, dc.idDossierDemande, dc.id from documentCollected dc 
		join libelleFormulaireDelivre lfd on lfd.idPole = dc.idPole
		join pole p on dc.idPole = p.id
		where dc.idDossierDemande  =:idd
		and dc.idPole not in (select fd2.idPole from formulaireDelivre fd2 where fd2.idDossierDemande =:idd and fd2.estRetire = 1) and dc.idPole != 4 ";
        $parameters['idd'] = $idd;

        $stmt = $this->getEntityManager()->getConnection()->prepare($sqlQuery);
        $stmt->execute($parameters);
        $results = $stmt->fetchAll();

        //die(dump($results));

        $tabResult = array();
        $i = 0;
        foreach ($results as $result) {

            $tabResult[$i]['nomPole'] = $result['nom'];
            $tabResult[$i]['libelleFormulaireDelivre'] = $result['libelle'];
            $i++;
        }
        //die(dump($tabResult));
        return $tabResult;
    }

    public function findDossierGreffeAValider($user) {
        $query = $this->createQueryBuilder('dc')
            ->join('dc.statutTraitement', 's')
            ->leftJoin('dc.dossierDemande', 'dd')
            ->where('dc.pole =:pole and s.id=2')
            ->andWhere('dd.statutValidationChefGreffe is null or dd.statutValidationChefGreffe = 1')
            ->setParameters(array('pole' => $user->getPole()));
        return $query->getQuery()->getResult();
    }

    public function findDossierGreffeValide($user) {
        $query = $this->createQueryBuilder('dc')
            ->join('dc.statutTraitement', 's')
            ->leftJoin('dc.dossierDemande', 'dd')
            ->where('dc.pole =:pole and s.id=2')
            ->andWhere('dd.statutValidationChefGreffe = 2')
            ->setParameters(array('pole' => $user->getPole()));
        return $query->getQuery()->getResult();
    }

    public function findDossierChefGreffe($user, $data, $idLangue, $idPole, $limit = null, $statut = null) {
        $query = "";

        if (!$statut) {
            $query = $this->createQueryBuilder('dc')
                ->leftJoin('dc.dossierDemande', 'd')
                ->leftJoin('dc.pole', 'p')
                ->andWhere('dc.statutTraitement = 2')
                ->andWhere('d.statutValidationChefGreffe is null or  d.statutValidationChefGreffe = 1')
                ->andWhere('p.id=:idp')->setParameters(array('idp' => $idPole));
        } else if ($statut == 2) {
            $query = $this->createQueryBuilder('dc')
                ->leftJoin('dc.dossierDemande', 'd')
                ->leftJoin('dc.pole', 'p')
                ->andWhere('dc.statutTraitement = 2')
                ->andWhere('d.statutValidationChefGreffe = 2')
                ->andWhere('p.id=:idp')->setParameters(array('idp' => $idPole));
        }

        //die(dump($statut));

        if ($data['numeroDossier'] != '') {
            $query->andWhere('LOWER(d.numeroDossier) = :numeroDossier')
                ->setParameter('numeroDossier', $data['numeroDossier']);
        }

        if ($data['denominationSociale'] != '') {
            $query->andWhere('LOWER(d.denominationSociale) like :denominationSociale')
                ->setParameter('denominationSociale', '%' . $data['denominationSociale'] . '%');
        }

        if ($statut) {
            $query->andWhere('dc.statutTraitement = :st')
                ->setParameter('st', $statut);
        }

        if ($data['formeJuridique'] != '') {
            $query->andWhere('d.formeJuridique = :formeJuridique')
                ->setParameter('formeJuridique', $data['formeJuridique']);
        }


        if ($data['dateDelivranceDebut'] != '') {
            $query->andWhere('DATE_DIFF(dc.dateDelivrance,:dateDelivranceDebut)>=0')
                ->setParameter('dateDelivranceDebut', new DateTime($data['dateDelivranceDebut']));
        }

        if ($data['dateDelivranceFin'] != '') {
            $query->andWhere('DATE_DIFF(dc.dateDelivrance,:dateDelivranceFin)<=0')
                ->setParameter('dateDelivranceFin', new DateTime($data['dateDelivranceFin']));
        }

        if (isset($data['dateValidationDebut']) && $data['dateValidationDebut'] != '') {
            $query->andWhere('DATE_DIFF(d.dateValidationChefGreffe,:dateValidationDebut)>=0')
                ->setParameter('dateValidationDebut', new DateTime($data['dateValidationDebut']));
        }

        if (isset($data['dateValidationFin']) && $data['dateValidationFin'] != '') {
            $query->andWhere('DATE_DIFF(d.dateValidationChefGreffe,:dateValidationFin)<=0')
                ->setParameter('dateValidationFin', new DateTime($data['dateValidationFin']));
        }


        if ($data['typeDossier'] != '') {
            $query->andWhere('d.typeDossier = :typeDossier')
                ->setParameter('typeDossier', $data['typeDossier']);
        }

        if ($statut && $statut == 2) {
            $query->orderBy('d.dateValidationChefGreffe', 'desc');
        } else {
            $query->orderBy('dc.dateDelivrance', 'asc');
        }

        if ($limit) {
            $query->setMaxResults($limit);
        }

        $results = $query->getQuery()->getResult();
        $tabResult = array();
        $i = 0;
        foreach ($results as $result) {
            $tabResult[$i]['numeroDossier'] = $result->getDossierDemande()->getNumeroDossier();
            $tabResult[$i]['denominationSociale'] = $result->getDossierDemande()->getDenominationSociale();
            $tabResult[$i]['nomCommercial'] = $result->getDossierDemande()->getNomCommercial();
            $tabResult[$i]['enseigne'] = $result->getDossierDemande()->getEnseigne();
            $tabResult[$i]['telephone'] = $result->getDossierDemande()->getTelephone();
            $tabResult[$i]['email'] = $result->getDossierDemande()->getEmail();
            //$tabResult[$i]['fax'] = $result->getDossierDemande()->getFax();
            $tabResult[$i]['region'] = $result->getDossierDemande()->getRegion();
            $tabResult[$i]['dateCreation'] = $result->getDossierDemande()->getDateCreation();
            $tabResult[$i]['orange'] = $result->isOrangePole();
            $tabResult[$i]['red'] = $result->isRedPole();
            $tabResult[$i]['dateSoumission'] = $result->getDateSoumission();
            $tabResult[$i]['dateDelivrance'] = $result->getDateDelivrance();
            $tabResult[$i]['dateValidationChefGreffe'] = $result->getDossierDemande()->getDateValidationChefGreffe();
            $tabResult[$i]['duree'] = $result->getDuree();
            $tabResult[$i]['motif'] = $result->getMotif();
            $tabResult[$i]['id'] = $result->getDossierDemande()->getId();

            $formJ = $result->getDossierDemande()->getFormeJuridique();
            $idf = $formJ->getId();
            $tabResult[$i]['idFormeJ'] = $idf;
            $formJTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:FormeJuridiqueTraduction')->getLibelleFormeJuridiqueByLanque($idLangue, $idf);
            ($formJTrad) ? $tabResult[$i]['libelleFormeJ'] = $formJTrad->getLibelle() : $tabResult[$i]['libelleFormeJ'] = "";
            $idTyp = $result->getDossierDemande()->getTypeOperation()->getId();
            $tabResult[$i]['idTypeOp'] = $idTyp;
            $typDossier = $result->getDossierDemande()->getTypeDossier()->getLibelle();
            $tabResult[$i]['typDossier'] = $typDossier;
            $typeOpTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:TypeOperationTraduction')->getLibelleOperationByLanque($idLangue, $idTyp);
            ($typeOpTrad) ? $tabResult[$i]['libelleTypeOp'] = $typeOpTrad->getLibelle() : $tabResult[$i]['libelleTypeOp'] = "";

            $statutTraitement = $result->getStatutTraitement();
            $tabResult[$i]['idStatutTraitement'] = $statutTraitement->getId();
            $statutTraitementTraduction = $this->getEntityManager()->getRepository('BanquemondialeBundle:StatutTraitementTraduction')->getLibelleStatutTraitementByLangue($idLangue, $statutTraitement);
            ($statutTraitementTraduction) ? $tabResult[$i]['libelleStatutTraitement'] = $statutTraitementTraduction->getLibelle() : $tabResult[$i]['libelleStatutTraitement'] = "";

            $formJGerant = $this->getEntityManager()->getRepository('BanquemondialeBundle:Representant')->findOneByDossierDemande($result->getDossierDemande());
            $tabResult[$i]['gerant'] = ($formJGerant) ? $formJGerant->getPrenom() . ' ' . $formJGerant->getNom() : "";
            $verifDoss = true;
            //die(dump(stripos($tabResult[$i]['gerant'], $data['gerant'],0)));			
            if ($data['gerant'] != '') {
                //die(dump($data['gerant']));
                if (stripos($tabResult[$i]['gerant'], $data['gerant']) === false) {
                    unset($tabResult[$i]);
                    $i--;
                }
            }
            $UserSaisi = $result->getDossierDemande()->getUtilisateur();

            $tabResult[$i]['agentSaisi'] = ($UserSaisi) ? $UserSaisi->getPrenom() . ' ' . $UserSaisi->getNom() : "";

            $em = $this->getEntityManager();
            $numeroNif = "";
            $numeroAguipe = "";
            $numeroCnss = "";

            $rccm = $em->getRepository('BanquemondialeBundle:Rccm')->findOneBy(array('dossierDemande' => $result->getDossierDemande()->getId()));
            $numeroRccm = ($rccm) ? $rccm->getNumRccmFormalite() : "";

            $pieceName = null;


            if ($statut && $statut == 2) {
                $pole = $em->getRepository('ParametrageBundle:pole')->find($idPole);
                if ($pole && $pole->getSigle() == 'BNI') {
                    $nif = $em->getRepository('BanquemondialeBundle:Nif')->findOneBy(array('dossierDemande' => $result->getDossierDemande()->getId()));
                    $numeroNif = ($nif) ? $nif->getNumeroIdentificationFiscale() : "";
                }
                if ($pole && $pole->getSigle() == 'CNSS') {
                    $cnss = $em->getRepository('BanquemondialeBundle:ComplementCnss')->findOneBy(array('dossierDemande' => $result->getDossierDemande()->getId()));
                    $numeroCnss = ($cnss) ? $cnss->getNumeroEmployeur() : "";
                }
                if ($pole && $pole->getSigle() == 'AGUIPE') {
                    $aguipe = $em->getRepository('BanquemondialeBundle:Aguipe')->findOneBy(array('dossierDemande' => $result->getDossierDemande()->getId()));
                    $numeroAguipe = ($aguipe) ? $aguipe->getNumeroImmatriculation() . '/AGUIPE/' . $result->getDateDelivrance()->format('Y') : "";
                }

                $formulaireDelivre = $em->getRepository('BanquemondialeBundle:FormulaireDelivre')->findOneBy(array('dossierDemande' => $result->getDossierDemande()->getId(), 'pole' => $pole, 'libelleFormulaireDelivre' => 2));

                if ($formulaireDelivre) {
                    $pieceName = $formulaireDelivre->getNomFichier();
                }
            }
            $tabResult[$i]['numeroRccm'] = $numeroRccm;
            $tabResult[$i]['numeroNif'] = $numeroNif;
            $tabResult[$i]['numeroAguipe'] = $numeroAguipe;
            $tabResult[$i]['numeroCnss'] = $numeroCnss;
            $tabResult[$i]['pieceName'] = $pieceName;
            $i++;
        }
        return $tabResult;
    }


    public function getDossierPartielPoleRetrait($user, $data, $idLangue, $idPole, $limit = 25, $statut = null, $idS = null) {

        $sqlQuery = "SELECT  dd.statusRetrait statusRetrait,dc.id as idDocumentCollected,dd.id, dc.dateDelivrance as dateReception, (select concat(r.prenom,' ',r.nom) from representant r where r.idDossierDemande = dd.id order by id ASC limit 1) as gerant ,
		(select count(*) from formulaireDelivre fd where fd.idDossierDemande = dc.idDossierDemande and fd.estRetire = 1) as formulairesRetires, 
        (select count(dc2.idPole) from documentCollected dc2 where dc2.idDossierDemande = dc.idDossierDemande and dc2.idPole not in (select fd2.idPole from formulaireDelivre fd2 where fd2.idDossierDemande = dc2.idDossierDemande and fd2.estRetire = 1)  and dc2.idPole != 4) as nbrFormulaireRestant 
		FROM documentCollected dc
		join dossierDemande dd on dd.id = dc.idDossierDemande
		join pole p on dc.idPole = p.id
		WHERE dc.idStatutTraitement = 2 and p.id = 1 
        and (select count(*) from formulaireDelivre fd 
		where fd.idDossierDemande = dc.idDossierDemande and fd.idPole = dc.idPole and fd.estRetire = 1) > 0  
         and 
         (select count(dc2.idPole) from documentCollected dc2 where dc2.idDossierDemande = dc.idDossierDemande and dc2.idPole not in (select fd2.idPole from formulaireDelivre fd2 where fd2.idDossierDemande = dc2.idDossierDemande and fd2.estRetire = 1) 
          and dc2.idPole != 4)  > 0
          
          
         ";
        $parameters = null;
        if (isset($data['jours']) and $data['jours'] != '') {
            $sqlQuery = $sqlQuery . " and (dc.dateDelivrance BETWEEN CURDATE() - INTERVAL :jours DAY AND CURDATE())";
            $parameters['jours'] = $data['jours'];
        }

        if (isset($data['statusRetrait']) and $data['statusRetrait'] != '') {
            $sqlQuery = $sqlQuery . " and dd.statusRetrait = :statusRetrait";
            $parameters['statusRetrait'] = $data['statusRetrait'];
        }
        if (isset($data['numeroDossier']) and $data['numeroDossier'] != '') {
            $sqlQuery = $sqlQuery . " and dd.numeroDossier = :numeroDossier";
            $parameters['numeroDossier'] = $data['numeroDossier'];
        }
        if (isset($data['denominationSociale']) and $data['denominationSociale'] != '') {
            $sqlQuery = $sqlQuery . " and LOWER(dd.denominationSociale) like :denominationSociale";
            $parameters['denominationSociale'] = "%" . strtolower($data['denominationSociale']) . "%";
        }
        if (isset($data['gerant']) and $data['gerant'] != '') {
            $sqlQuery = $sqlQuery . " and LOWER((select concat(r.prenom,' ',r.nom) from representant r where r.idDossierDemande = dd.id order by id ASC limit 1)) like :gerant";
            $parameters['gerant'] = "%" . strtolower($data['gerant']) . "%";
        }
        if (isset($data['formeJuridique']) and $data['formeJuridique'] != '') {
            $sqlQuery = $sqlQuery . " and LOWER(dd.idFormeJuridique) = :formeJuridique";
            $parameters['formeJuridique'] = strtolower($data['formeJuridique']);
        }
        if ($statut) {
            $sqlQuery = $sqlQuery . " and dc.idStatutTraitement =:statut";
            $parameters['statut'] = $statut;
        }
        if (isset($data['dateCreationDebut']) and $data['dateCreationDebut'] != '') {
            $dateCreationDebut = new DateTime($data['dateCreationDebut']);
            $sqlQuery = $sqlQuery . " and DATEDIFF(dc.dateDelivrance,:dateCreationDebut)>=0";
            $parameters['dateCreationDebut'] = $dateCreationDebut->format('Y-m-d');
        }
        if (isset($data['dateCreationFin']) and $data['dateCreationFin'] != '') {
            $dateCreationFin = new DateTime($data['dateCreationFin']);
            $sqlQuery = $sqlQuery . " and DATEDIFF(dc.dateDelivrance,:dateCreationFin)<=0";
            $parameters['dateCreationFin'] = $dateCreationFin->format('Y-m-d');
        }
        if (isset($data['typeDossier']) and $data['typeDossier'] != '') {
            $sqlQuery = $sqlQuery . " and dd.idTypeDossier = :typeDossier";
            $parameters['typeDossier'] = $data['typeDossier'];
        }
        $sqlQuery = $sqlQuery . " ORDER BY dd.id DESC ";
        if ($limit != null) {
            $sqlQuery = $sqlQuery . " LIMIT " . $limit;
        }
        $stmt = $this->getEntityManager()->getConnection()->prepare($sqlQuery);
        $stmt->execute($parameters);
        $results = $stmt->fetchAll();
        $tabResult = array();
        $i = 0;
        foreach ($results as $result) {
            //die(dump($result));
            $idDocumentCollected = $result['idDocumentCollected'];
            $documentCollected = $this->getEntityManager()->getRepository('BanquemondialeBundle:DocumentCollected')->find($idDocumentCollected);

            $tabResult[$i]['numeroDossier'] = $documentCollected->getDossierDemande()->getNumeroDossier();
            $tabResult[$i]['denominationSociale'] = $documentCollected->getDossierDemande()->getDenominationSociale();
            $tabResult[$i]['nomCommercial'] = $documentCollected->getDossierDemande()->getNomCommercial();
            $tabResult[$i]['enseigne'] = $documentCollected->getDossierDemande()->getEnseigne();
            $tabResult[$i]['telephone'] = $documentCollected->getDossierDemande()->getTelephone();
            $tabResult[$i]['email'] = $documentCollected->getDossierDemande()->getEmail();
            //$tabResult[$i]['fax'] = $documentCollected->getDossierDemande()->getFax();
            $tabResult[$i]['region'] = $documentCollected->getDossierDemande()->getRegion();
            $tabResult[$i]['dateCreation'] = $documentCollected->getDossierDemande()->getDateCreation();
            $tabResult[$i]['orange'] = $documentCollected->isOrangePole();
            $tabResult[$i]['red'] = $documentCollected->isRedPole();
            $tabResult[$i]['dateSoumission'] = $documentCollected->getDateSoumission();
            $tabResult[$i]['dateDelivrance'] = $documentCollected->getDateDelivrance();
            $tabResult[$i]['duree'] = $documentCollected->getDuree();
            $tabResult[$i]['id'] = $documentCollected->getDossierDemande()->getId();
            $tabResult[$i]['statusRetrait'] = $documentCollected->getDossierDemande()->getStatusRetrait();
            //var_dump($documentCollected->getDossierDemande()->getStatusRetrait());die();
            $formJ = $documentCollected->getDossierDemande()->getFormeJuridique();
            $idf = $formJ->getId();
            $tabResult[$i]['idFormeJ'] = $idf;
            $formJTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:FormeJuridiqueTraduction')->getLibelleFormeJuridiqueByLanque($idLangue, $idf);
            ($formJTrad) ? $tabResult[$i]['libelleFormeJ'] = $formJTrad->getLibelle() : $tabResult[$i]['libelleFormeJ'] = "";
            $idTyp = $documentCollected->getDossierDemande()->getTypeOperation()->getId();
            $tabResult[$i]['idTypeOp'] = $idTyp;
            $typDossier = $documentCollected->getDossierDemande()->getTypeDossier()->getLibelle();
            $tabResult[$i]['typDossier'] = $typDossier;
            $typeOpTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:TypeOperationTraduction')->getLibelleOperationByLanque($idLangue, $idTyp);
            ($typeOpTrad) ? $tabResult[$i]['libelleTypeOp'] = $typeOpTrad->getLibelle() : $tabResult[$i]['libelleTypeOp'] = "";

            $statutTraitement = $documentCollected->getStatutTraitement();
            $tabResult[$i]['idStatutTraitement'] = $statutTraitement->getId();
            $statutTraitementTraduction = $this->getEntityManager()->getRepository('BanquemondialeBundle:StatutTraitementTraduction')->getLibelleStatutTraitementByLangue($idLangue, $statutTraitement);
            ($statutTraitementTraduction) ? $tabResult[$i]['libelleStatutTraitement'] = $statutTraitementTraduction->getLibelle() : $tabResult[$i]['libelleStatutTraitement'] = "";

            $formJGerant = $this->getEntityManager()->getRepository('BanquemondialeBundle:Representant')->findOneByDossierDemande($documentCollected->getDossierDemande());
            $tabResult[$i]['gerant'] = $formJGerant->getPrenom() . ' ' . $formJGerant->getNom();
            $tabResult[$i]['telGerant'] = $formJGerant->getTelephone();

            $i++;
        }
        //die(dump($tabResult));
        return $tabResult;
    }

}
