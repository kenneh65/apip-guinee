<?php

namespace BanquemondialeBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * CircuitRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CircuitRepository extends EntityRepository {

    public function findByTypeOpAndFormeJurique($idTypeOp, $idFormeJ, $typeDossier) {
        $qb = $this->createQueryBuilder('c')
                ->leftJoin('c.typeOperation', 'to')->addSelect('to')
                ->leftJoin('c.formeJuridique', 'f')->addSelect('f')
                ->leftJoin('c.typeDossier', 'td')
                ->where('to.id = :idtp')
                ->andWhere('f.id = :idfj')->andWhere('td.id=:idtd')
                ->setParameters(array('idtp' => $idTypeOp, 'idfj' => $idFormeJ, 'idtd' => $typeDossier))
                ->orderBy('c.ordre', 'asc');
        $query = $qb->getQuery(); //->setParameter('idfj', $idFormeJ);
        $results = $query->getResult();
        return($results);
    }

    public function findDocToBeColled($idTypeOp, $idFormeJ, $typeDossier) {

        $qb = $this->createQueryBuilder('c')
                ->leftJoin('c.typeOperation', 'to')->addSelect('to')
                ->leftJoin('c.formeJuridique', 'f')->addSelect('f')
                ->leftJoin('c.typeDossier', 'td')
                ->where('to.id = :idtp')
                ->andWhere('f.id = :idfj')->andWhere('td.id=:idtd')
                ->setParameters(array('idtp' => $idTypeOp, 'idfj' => $idFormeJ, 'idtd' => $typeDossier))
                ->orderBy('c.ordre', 'asc');
        $query = $qb->getQuery(); //->setParameter('idfj', $idFormeJ);
        $results = $query->getResult();

        $tabResult = array();
        $i = 0;
        foreach ($results as $result) {
            $tabResult[$i]['id'] = $result->getId();
            $tabResult[$i]['ordre'] = $result->getOrdre();
            $tabResult[$i]['nomPole'] = $result->getPole()->getNom();
            $tabResult[$i]['idPole'] = $result->getPole()->getId();
			$tabResult[$i]['siglePole'] = $result->getPole()->getSigle();
            $listeFormulaire = $this->getEntityManager()->getRepository('BanquemondialeBundle:LibelleFormulaireDelivre')->getLibelleFormulaireDelivreByPole($result->getPole());
            $tabResult[$i]['formulaire'] = $listeFormulaire;
            if ($listeFormulaire) {
                $tabResult[$i]['rowspan'] = count($listeFormulaire);
            } else {
                $tabResult[$i]['rowspan'] = 0;
            }
            $i++;
        }
        return($tabResult);
    }

    public function getListCircuit($idLangue) {
        $qb = $this->createQueryBuilder('c')->orderBy('c.typeOperation', 'ASC')
                ->addOrderBy('c.formeJuridique', 'ASC')
                ->addOrderBy('c.ordre', 'ASC');
        $query = $qb->getQuery(); //->setParameter('idfj', $idFormeJ);
        $results = $query->getResult();
//        return $results;
        $tabResult = array();
        $i = 0;
        foreach ($results as $result) {
            $tabResult[$i]['id'] = $result->getId();
            $tabResult[$i]['ordre'] = $result->getOrdre();
            $formJ = $result->getFormeJuridique();
            $idf = $formJ->getId();
            $tabResult[$i]['idFormeJ'] = $idf;
            $formJTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:FormeJuridiqueTraduction')->getLibelleFormeJuridiqueByLanque($idLangue, $idf);

            ($formJTrad) ? $tabResult[$i]['libbelleFormeJ'] = $formJTrad->getLibelle() : $tabResult[$i]['libbelleFormeJ'] = "";

            $idTyp = $result->getTypeOperation()->getId();
            $tabResult[$i]['idTypeOp'] = $idTyp;
            $typeOpTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:TypeOperationTraduction')->findOneBy(array('typeOperation' => $idTyp, 'langue' => $idLangue));

            ($typeOpTrad) ? $tabResult[$i]['libbelleTypeOp'] = $typeOpTrad->getLibelle() : $tabResult[$i]['libbelleTypeOp'] = "";
            $typedossier = $result->getTypeDossier();
            $tabResult[$i]['typeDossier'] = ($typedossier) ? $result->getTypeDossier()->getLibelle() : "";
            $tabResult[$i]['poleName'] = $result->getPole()->getNom();
            $i++;
        }
        return $tabResult;
    }

    public function findCircuit($data, $idLangue) {
        $query = $this->createQueryBuilder('c');

        if ($data['formeJuridique'] != '') {
            $query->andWhere('c.formeJuridique = :formeJuridique')->setParameter('formeJuridique', $data['formeJuridique']);
        }
        if ($data['typeOperation'] != '') {
            $query->andWhere('c.typeOperation = :typeOperation')->setParameter('typeOperation', $data['typeOperation']);
        }
        if ($data['pole'] != '') {
            $query->andWhere('c.pole = :idPole')->setParameter('idPole', $data['pole']);
        }
        if ($data['ordre'] != '') {
            $query->andWhere('c.ordre = :od')->setParameter('od', $data['ordre']);
        }
        $qb = $query->getQuery();
        $results = $qb->getResult();
        $tabResult = array();
        $i = 0;
        foreach ($results as $result) {
            $tabResult[$i]['id'] = $result->getId();
            $tabResult[$i]['ordre'] = $result->getOrdre();
            $formJ = $result->getFormeJuridique();
            $idf = $formJ->getId();
            $tabResult[$i]['idFormeJ'] = $idf;
            $formJTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:FormeJuridiqueTraduction')->getLibelleFormeJuridiqueByLanque($idLangue, $idf);
            ($formJTrad) ? $tabResult[$i]['libbelleFormeJ'] = $formJTrad->getLibelle() : $tabResult[$i]['libbelleFormeJ'] = "";

            $idTyp = $result->getTypeOperation()->getId();
            $tabResult[$i]['idTypeOp'] = $idTyp;
            $typeOpTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:TypeOperationTraduction')->getLibelleOperationByLanque($idLangue, $idTyp);

            ($typeOpTrad) ? $tabResult[$i]['libbelleTypeOp'] = $typeOpTrad->getLibelle() : $tabResult[$i]['libbelleTypeOp'] = "";

            $tabResult[$i]['poleName'] = $result->getPole()->getNom();
            $i++;
        }
        return $tabResult;
    }

    public function findCircuitTraitement($idTypeOperation, $idFormeJuridique, $idPole, $ordre, $idTypeDossier, $idLangue) {
        $query = $this->createQueryBuilder('t');


        if ($idFormeJuridique) {
            $query->andWhere('t.formeJuridique = :formeJuridique')->setParameter('formeJuridique', $idFormeJuridique);
        }
        if ($idTypeOperation) {
            $query->andWhere('t.typeOperation = :typeOperation')->setParameter('typeOperation', $idTypeOperation);
        }
        if ($idPole) {
            $query->andWhere('t.pole = :idPole')->setParameter('idPole', $idPole);
        }
        if ($ordre) {
            $query->andWhere('t.ordre = :mnt')->setParameter('mnt', $ordre);
        }
        if ($idTypeDossier) {
            $query->andWhere('t.typeDossier = :idTypeDossier')->setParameter('idTypeDossier', $idTypeDossier);
        }

        $qb = $query->getQuery();
        $results = $qb->getResult();
        $tabResult = array();
        $i = 0;
        foreach ($results as $result) {
            $tabResult[$i]['id'] = $result->getId();
            $tabResult[$i]['ordre'] = $result->getOrdre();
            $formJ = $result->getFormeJuridique();
            $idf = $formJ->getId();
            $tabResult[$i]['idFormeJ'] = $idf;
            $formJTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:FormeJuridiqueTraduction')->getLibelleFormeJuridiqueByLanque($idLangue, $idf);
            ($formJTrad) ? $tabResult[$i]['libbelleFormeJ'] = $formJTrad->getLibelle() : $tabResult[$i]['libbelleFormeJ'] = "";

            $idTyp = $result->getTypeOperation()->getId();
            $tabResult[$i]['idTypeOp'] = $idTyp;
            $typeOpTrad = $this->getEntityManager()->getRepository('BanquemondialeBundle:TypeOperationTraduction')->getLibelleOperationByLanque($idLangue, $idTyp);

            ($typeOpTrad) ? $tabResult[$i]['libbelleTypeOp'] = $typeOpTrad->getLibelle() : $tabResult[$i]['libbelleTypeOp'] = "";

            $typedossier = $result->getTypeDossier();
            $tabResult[$i]['typeDossier'] = ($typedossier) ? $result->getTypeDossier()->getLibelle() : "";

            $tabResult[$i]['poleName'] = $result->getPole()->getNom();
            $i++;
        }
        return $tabResult;
    }

    public function getSimulationByFormeAndTypeDossier($idFormeJuridique, $idTypeDossier, $idLangue) {
        $qb = $this->createQueryBuilder('c')
                ->leftJoin('c.pole', 'p')->addSelect('p')
                ->where('c.formeJuridique = :idfj')
                ->andWhere('c.typeDossier = :idtd')
                ->setParameters(array('idfj' => $idFormeJuridique, 'idtd' => $idTypeDossier))
                ->orderBy('c.ordre', 'ASC');
        $query = $qb->getQuery();
        $results = $query->getResult();
        //die(dump($results));
        //die(dump($results[0]->getFormeJuridique()->getFormeJuridiqueTraduction()->get(0)->getLibelle() ));
        $tabResult = array();
        $i = 0;
        foreach ($results as $result) {
            $tabResult[$i]['id'] = $result->getId();
            $tabResult[$i]['ordre'] = $result->getOrdre();
            $tabResult[$i]['nomPole'] = $result->getPole()->getNom();
            $listeTarification = $this->getEntityManager()->getRepository('ParametrageBundle:Tarification')->getTarificationSimulation($result->getPole(), $result->getFormeJuridique(), $idTypeDossier, $idLangue);
            $tabResult[$i]['tarification'] = $listeTarification;
            $listeFormulaire = $this->getEntityManager()->getRepository('BanquemondialeBundle:LibelleFormulaireDelivre')->getLibelleFormulaireDelivreByPole($result->getPole());
            $tabResult[$i]['formulaire'] = $listeFormulaire;
            if ($listeFormulaire) {
                $tabResult[$i]['rowspan'] = count($listeFormulaire);
            } else {
                $tabResult[$i]['rowspan'] = 0;
            }
            $i++;
        }
        //die(dump($tabResult));
        return $tabResult;
    }
	
	
	public function findOrdreAguipe($idTypeOp, $idFormeJ, $typeDossier) {
        $qb = $this->createQueryBuilder('c')
				->leftJoin('c.pole','p')
                ->where('c.typeOperation = :idtp')
                ->andWhere('c.formeJuridique= :idfj')
                ->andWhere('c.typeDossier = :idtd')
                ->andWhere("p.sigle = 'AGUIPE'")
                ->setParameters(array('idtp' => $idTypeOp, 'idfj' => $idFormeJ, 'idtd' => $typeDossier));
        $query = $qb->getQuery(); //->setParameter('idfj', $idFormeJ);
        $results = $query->getResult();
		//die(dump($results[0]->getOrdre()));
        return($results[0]);
    }

}
