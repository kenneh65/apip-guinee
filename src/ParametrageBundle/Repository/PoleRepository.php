<?php

namespace ParametrageBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * PoleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PoleRepository extends EntityRepository {

    public function getPoles() {
        $query = $this->_em->createQuery('SELECT p FROM ParametrageBundle:Pole p, UtilisateursBundle:Utilisateurs u WHERE u.pole=p');
        return $query->getResult();
    }
	
	public function getPolesQuittance() {
        $query = $this->_em->createQuery("SELECT p FROM ParametrageBundle:Pole p, BanquemondialeBundle:RepartitionQuittance r WHERE r.pole=p and p.actif=true and p.sigle != 'CNSS' and p.sigle != 'CT' ");
        return $query->getResult();
    }
    
    public function getListeDesPoleTraitant(){
        $query=$this->createQueryBuilder('p')
                ->join('BanquemondialeBundle:LibelleFormulaireDelivre', 'lb')
                ->where('p.id=lb.pole')
                ->select('p');
        return $query;
    }
    
    public function getListeDesPoleAPIP_Traitant(){
        $query=$this->createQueryBuilder('p')
                ->where('p.sigle!= :sigle1 and p.sigle!= :sigle2')
                ->setParameters(array('sigle1'=>"DP",'sigle2'=>"INV"))
                ->select('p');
        return $query;
    }
    public function getPoleBySige($sigle)
    {
        $query = $this->createQueryBuilder('p')
                ->where('p.actif=true')->andWhere('upper(p.sigle)=upper(:strSigle)')
                ->setParameter('strSigle', $sigle)->setMaxResults(1);
        
        return $query->getQuery()->getOneOrNullResult();
    }
    public function getPoleCaisse()
    {
        $query = $this->createQueryBuilder('p')
                ->where('p.actif=true')->andWhere('p.typePole is not null')
                ->setMaxResults(1);
        
        return $query->getQuery()->getOneOrNullResult();
    }
	public function getPoleByName($name)
    {
        $query = $this->createQueryBuilder('p')
                ->where('p.actif=true')->andWhere('upper(p.nom)=upper(:nom)')
                ->setParameter('nom', $name)->setMaxResults(1);
        
        return $query->getQuery()->getOneOrNullResult();
    }
	public function getPolesActifs() {
        $query = $this->createQueryBuilder('p')
                ->where('p.actif=true');
				
			
        return $query;
    }
	
	public function getRegion()
    {
        $query = $this->createQueryBuilder('r')
                ->where('p.actif=true');
        
        return $query;
    }

    public function rechercherPole($data) {
        $qb = $this->createQueryBuilder('p')
                ->where('p.actif=true');
        if ($data['nom'] != '') {
            $qb->andWhere('p.nom = :name')->setParameter('name', $data['nom']);
        }
        if ($data['adresse'] != '') {
            $qb->andWhere('p.adresse = :adress')->setParameter('adress', $data['adresse']);
        }
        $query = $qb->getQuery();
        $results = $query->getResult();
        return $results;
    }

}
